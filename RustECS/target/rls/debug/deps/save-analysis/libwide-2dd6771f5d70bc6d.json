{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6","program":"C:\\Users\\1an6r_000\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--edition=2018","--crate-name","wide","C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"extern_crate_std\"","-C","metadata=2dd6771f5d70bc6d","-C","extra-filename=-2dd6771f5d70bc6d","--out-dir","z:\\GitRepositories\\RustECSPrototype\\hellorust\\target\\rls\\debug\\deps","-L","dependency=z:\\GitRepositories\\RustECSPrototype\\hellorust\\target\\rls\\debug\\deps","--extern","bytemuck=z:\\GitRepositories\\RustECSPrototype\\hellorust\\target\\rls\\debug\\deps\\libbytemuck-d068a228508d5b0c.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\1an6r_000\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"z:\\GitRepositories\\RustECSPrototype\\hellorust\\target\\rls\\debug\\deps\\libwide-2dd6771f5d70bc6d.rmeta"},"prelude":{"crate_id":{"name":"wide","disambiguator":[702720820671034828,9144712208626913483]},"crate_root":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src","external_crates":[{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[485752663891264790,8957311619763174036]}},{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[18086859731710399847,10284985903167786594]}},{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[7894171165123925799,1138153282057520136]}},{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13588323328630583110,6322937768936249793]}},{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[4981221114026975734,7560613652030165248]}},{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[14761482230397314318,7759443649452366185]}},{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[9184279872459162418,17237017963472574266]}},{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[17533675247542074538,1761975124356943313]}},{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7993782675770172864,12706040849351126287]}},{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2821791754508214868,4424070148662641494]}},{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\lib.rs","num":11,"id":{"name":"backtrace","disambiguator":[910629799165843388,8471953781625026915]}},{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[5889018422681230134,5892037208047200338]}},{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[2601722915210761880,4253013904849941641]}},{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\lib.rs","num":14,"id":{"name":"bytemuck","disambiguator":[9765228836574386544,11700541414109781247]}}],"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\lib.rs","byte_start":0,"byte_end":5468,"line_start":1,"line_end":182,"column_start":1,"column_end":2}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\x86_64.rs","byte_start":9877,"byte_end":9878,"line_start":17,"line_end":17,"column_start":14,"column_end":15},"alias_span":null,"name":"*","value":"m128","parent":{"krate":0,"index":111}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\x86_64.rs","byte_start":9995,"byte_end":9996,"line_start":23,"line_end":23,"column_start":15,"column_end":16},"alias_span":null,"name":"*","value":"m128i","parent":{"krate":0,"index":111}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\lib.rs","byte_start":4164,"byte_end":4165,"line_start":123,"line_end":123,"column_start":18,"column_end":19},"alias_span":null,"name":"*","value":"f32x4","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\lib.rs","byte_start":4201,"byte_end":4202,"line_start":126,"line_end":126,"column_start":18,"column_end":19},"alias_span":null,"name":"*","value":"i32x4, ConstUnionHack_i32x4","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\lib.rs","byte_start":0,"byte_end":5468,"line_start":1,"line_end":182,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":18},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":997},{"krate":0,"index":590},{"krate":0,"index":863},{"krate":0,"index":864},{"krate":0,"index":914},{"krate":0,"index":915},{"krate":0,"index":916},{"krate":0,"index":917},{"krate":0,"index":918}],"decl_id":null,"docs":" A crate to help you go wide.","sig":null,"attributes":[{"value":"warn(missing_docs)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\lib.rs","byte_start":0,"byte_end":22,"line_start":1,"line_end":1,"column_start":1,"column_end":23}},{"value":"allow(clippy::replace_consts)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\lib.rs","byte_start":215,"byte_end":248,"line_start":5,"line_end":5,"column_start":1,"column_end":34}},{"value":"allow(clippy::inline_always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\lib.rs","byte_start":250,"byte_end":282,"line_start":6,"line_end":6,"column_start":1,"column_end":33}},{"value":"allow(clippy::expl_impl_clone_on_copy)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\lib.rs","byte_start":284,"byte_end":326,"line_start":7,"line_end":7,"column_start":1,"column_end":43}},{"value":"allow(clippy::doc_markdown)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\lib.rs","byte_start":328,"byte_end":359,"line_start":8,"line_end":8,"column_start":1,"column_end":32}},{"value":"allow(clippy::use_self)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\lib.rs","byte_start":361,"byte_end":388,"line_start":9,"line_end":9,"column_start":1,"column_end":28}},{"value":"warn(clippy::must_use_candidate)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\lib.rs","byte_start":390,"byte_end":426,"line_start":10,"line_end":10,"column_start":1,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":23},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"arch","qualname":"::arch","value":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","parent":null,"children":[{"krate":0,"index":24},{"krate":0,"index":919},{"krate":0,"index":928},{"krate":0,"index":925},{"krate":0,"index":923},{"krate":0,"index":931},{"krate":0,"index":940},{"krate":0,"index":937},{"krate":0,"index":935},{"krate":0,"index":943},{"krate":0,"index":952},{"krate":0,"index":949},{"krate":0,"index":947},{"krate":0,"index":955},{"krate":0,"index":964},{"krate":0,"index":961},{"krate":0,"index":959},{"krate":0,"index":967},{"krate":0,"index":976},{"krate":0,"index":973},{"krate":0,"index":971},{"krate":0,"index":25},{"krate":0,"index":27},{"krate":0,"index":29},{"krate":0,"index":31},{"krate":0,"index":33},{"krate":0,"index":35},{"krate":0,"index":37},{"krate":0,"index":39},{"krate":0,"index":41},{"krate":0,"index":43},{"krate":0,"index":45},{"krate":0,"index":47},{"krate":0,"index":49},{"krate":0,"index":51},{"krate":0,"index":53},{"krate":0,"index":55},{"krate":0,"index":57},{"krate":0,"index":59},{"krate":0,"index":61},{"krate":0,"index":63},{"krate":0,"index":65},{"krate":0,"index":67},{"krate":0,"index":69},{"krate":0,"index":71},{"krate":0,"index":73},{"krate":0,"index":75},{"krate":0,"index":77},{"krate":0,"index":79},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":85},{"krate":0,"index":87},{"krate":0,"index":89},{"krate":0,"index":91},{"krate":0,"index":93},{"krate":0,"index":95},{"krate":0,"index":97},{"krate":0,"index":99},{"krate":0,"index":101},{"krate":0,"index":103},{"krate":0,"index":105},{"krate":0,"index":107},{"krate":0,"index":109},{"krate":0,"index":111}],"decl_id":null,"docs":" Architecture specific functionality.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":919},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":6013,"byte_end":6019,"line_start":16,"line_end":16,"column_start":12,"column_end":18},"name":"Align2","qualname":"::arch::Align2","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrap the inner value to a minimum alignment of 2.","sig":null,"attributes":[{"value":"repr(C, align(2))","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":5980,"byte_end":6000,"line_start":15,"line_end":15,"column_start":1,"column_end":21}},{"value":"rustc_copy_clone_marker","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":6002,"byte_end":6030,"line_start":16,"line_end":16,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":931},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":6288,"byte_end":6294,"line_start":24,"line_end":24,"column_start":12,"column_end":18},"name":"Align4","qualname":"::arch::Align4","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrap the inner value to a minimum alignment of 4.","sig":null,"attributes":[{"value":"repr(C, align(4))","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":6255,"byte_end":6275,"line_start":23,"line_end":23,"column_start":1,"column_end":21}},{"value":"rustc_copy_clone_marker","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":6277,"byte_end":6305,"line_start":24,"line_end":24,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":943},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":6563,"byte_end":6569,"line_start":32,"line_end":32,"column_start":12,"column_end":18},"name":"Align8","qualname":"::arch::Align8","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrap the inner value to a minimum alignment of 8.","sig":null,"attributes":[{"value":"repr(C, align(8))","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":6530,"byte_end":6550,"line_start":31,"line_end":31,"column_start":1,"column_end":21}},{"value":"rustc_copy_clone_marker","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":6552,"byte_end":6580,"line_start":32,"line_end":32,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":955},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":6840,"byte_end":6847,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"Align16","qualname":"::arch::Align16","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrap the inner value to a minimum alignment of 16.","sig":null,"attributes":[{"value":"repr(C, align(16))","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":6806,"byte_end":6827,"line_start":39,"line_end":39,"column_start":1,"column_end":22}},{"value":"rustc_copy_clone_marker","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":6829,"byte_end":6858,"line_start":40,"line_end":40,"column_start":1,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":967},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":7118,"byte_end":7125,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"name":"Align32","qualname":"::arch::Align32","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrap the inner value to a minimum alignment of 32.","sig":null,"attributes":[{"value":"repr(C, align(32))","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":7084,"byte_end":7105,"line_start":47,"line_end":47,"column_start":1,"column_end":22}},{"value":"rustc_copy_clone_marker","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":7107,"byte_end":7136,"line_start":48,"line_end":48,"column_start":1,"column_end":30}}]},{"kind":"Mod","id":{"krate":0,"index":111},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\x86_64.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"x86_64","qualname":"::arch::x86_64","value":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\x86_64.rs","parent":null,"children":[{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":588},{"krate":0,"index":589}],"decl_id":null,"docs":" Intrinsics for the [`x86_64`](https://en.wikipedia.org/wiki/X86-64) processor family.\n","sig":null,"attributes":[{"value":"cfg(target_arch = \"x86_64\")","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":9452,"byte_end":9482,"line_start":113,"line_end":113,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":979},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":12068,"byte_end":12072,"line_start":26,"line_end":26,"column_start":12,"column_end":16},"name":"m128","qualname":"::arch::x86_64::sse::m128","value":"","parent":null,"children":[],"decl_id":null,"docs":" A 128-bit SIMD value. Always used as `f32x4`.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":12014,"byte_end":12033,"line_start":24,"line_end":24,"column_start":1,"column_end":20}},{"value":"repr(transparent)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":12035,"byte_end":12055,"line_start":25,"line_end":25,"column_start":1,"column_end":21}},{"value":"rustc_copy_clone_marker","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":12057,"byte_end":12085,"line_start":26,"line_end":26,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":18452,"byte_end":18456,"line_start":285,"line_end":285,"column_start":10,"column_end":14},"name":"add0","qualname":"<m128>::add0","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Adds the 0th lanes without affecting the other lanes of `self.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":18409,"byte_end":18426,"line_start":283,"line_end":283,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":18430,"byte_end":18441,"line_start":284,"line_end":284,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":18616,"byte_end":18622,"line_start":292,"line_end":292,"column_start":10,"column_end":16},"name":"andnot","qualname":"<m128>::andnot","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Bitwise `(!self) & rhs`\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":18573,"byte_end":18590,"line_start":290,"line_end":290,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":18594,"byte_end":18605,"line_start":291,"line_end":291,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":18808,"byte_end":18814,"line_start":299,"line_end":299,"column_start":10,"column_end":16},"name":"cmp_eq","qualname":"<m128>::cmp_eq","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `self == rhs` check, bool-ish output.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":18765,"byte_end":18782,"line_start":297,"line_end":297,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":18786,"byte_end":18797,"line_start":298,"line_end":298,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":18992,"byte_end":18999,"line_start":306,"line_end":306,"column_start":10,"column_end":17},"name":"cmp_eq0","qualname":"<m128>::cmp_eq0","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lane 0: `self == rhs`, bool-ish output.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":18949,"byte_end":18966,"line_start":304,"line_end":304,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":18970,"byte_end":18981,"line_start":305,"line_end":305,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":19184,"byte_end":19190,"line_start":313,"line_end":313,"column_start":10,"column_end":16},"name":"cmp_ge","qualname":"<m128>::cmp_ge","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `self >= rhs` check, bool-ish output.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":19141,"byte_end":19158,"line_start":311,"line_end":311,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":19162,"byte_end":19173,"line_start":312,"line_end":312,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":19368,"byte_end":19375,"line_start":320,"line_end":320,"column_start":10,"column_end":17},"name":"cmp_ge0","qualname":"<m128>::cmp_ge0","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lane 0: `self >= rhs`, bool-ish output.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":19325,"byte_end":19342,"line_start":318,"line_end":318,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":19346,"byte_end":19357,"line_start":319,"line_end":319,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":19559,"byte_end":19565,"line_start":327,"line_end":327,"column_start":10,"column_end":16},"name":"cmp_gt","qualname":"<m128>::cmp_gt","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `self > rhs` check, bool-ish output.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":19516,"byte_end":19533,"line_start":325,"line_end":325,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":19537,"byte_end":19548,"line_start":326,"line_end":326,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":19742,"byte_end":19749,"line_start":334,"line_end":334,"column_start":10,"column_end":17},"name":"cmp_gt0","qualname":"<m128>::cmp_gt0","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lane 0: `self > rhs`, bool-ish output.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":19699,"byte_end":19716,"line_start":332,"line_end":332,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":19720,"byte_end":19731,"line_start":333,"line_end":333,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":19934,"byte_end":19940,"line_start":341,"line_end":341,"column_start":10,"column_end":16},"name":"cmp_le","qualname":"<m128>::cmp_le","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `self <= rhs` check, bool-ish output.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":19891,"byte_end":19908,"line_start":339,"line_end":339,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":19912,"byte_end":19923,"line_start":340,"line_end":340,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":20118,"byte_end":20125,"line_start":348,"line_end":348,"column_start":10,"column_end":17},"name":"cmp_le0","qualname":"<m128>::cmp_le0","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lane 0: `self <= rhs`, bool-ish output.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":20075,"byte_end":20092,"line_start":346,"line_end":346,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":20096,"byte_end":20107,"line_start":347,"line_end":347,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":20309,"byte_end":20315,"line_start":355,"line_end":355,"column_start":10,"column_end":16},"name":"cmp_lt","qualname":"<m128>::cmp_lt","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `self < rhs` check, bool-ish output.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":20266,"byte_end":20283,"line_start":353,"line_end":353,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":20287,"byte_end":20298,"line_start":354,"line_end":354,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":20492,"byte_end":20499,"line_start":362,"line_end":362,"column_start":10,"column_end":17},"name":"cmp_lt0","qualname":"<m128>::cmp_lt0","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lane 0: `self < rhs`, bool-ish output.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":20449,"byte_end":20466,"line_start":360,"line_end":360,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":20470,"byte_end":20481,"line_start":361,"line_end":361,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":20684,"byte_end":20690,"line_start":369,"line_end":369,"column_start":10,"column_end":16},"name":"cmp_ne","qualname":"<m128>::cmp_ne","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `self != rhs` check, bool-ish output.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":20641,"byte_end":20658,"line_start":367,"line_end":367,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":20662,"byte_end":20673,"line_start":368,"line_end":368,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":20869,"byte_end":20876,"line_start":376,"line_end":376,"column_start":10,"column_end":17},"name":"cmp_ne0","qualname":"<m128>::cmp_ne0","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lane 0: `self != rhs`, bool-ish output.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":20826,"byte_end":20843,"line_start":374,"line_end":374,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":20847,"byte_end":20858,"line_start":375,"line_end":375,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":21111,"byte_end":21118,"line_start":385,"line_end":385,"column_start":10,"column_end":17},"name":"cmp_nge","qualname":"<m128>::cmp_nge","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `!(self >= rhs)` check, bool-ish output.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":21068,"byte_end":21085,"line_start":383,"line_end":383,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":21089,"byte_end":21100,"line_start":384,"line_end":384,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":21300,"byte_end":21308,"line_start":392,"line_end":392,"column_start":10,"column_end":18},"name":"cmp_nge0","qualname":"<m128>::cmp_nge0","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lane 0: `!(self >= rhs)`, bool-ish output.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":21257,"byte_end":21274,"line_start":390,"line_end":390,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":21278,"byte_end":21289,"line_start":391,"line_end":391,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":21496,"byte_end":21503,"line_start":399,"line_end":399,"column_start":10,"column_end":17},"name":"cmp_ngt","qualname":"<m128>::cmp_ngt","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `!(self > rhs)` check, bool-ish output.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":21453,"byte_end":21470,"line_start":397,"line_end":397,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":21474,"byte_end":21485,"line_start":398,"line_end":398,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":21684,"byte_end":21692,"line_start":406,"line_end":406,"column_start":10,"column_end":18},"name":"cmp_ngt0","qualname":"<m128>::cmp_ngt0","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lane 0: `!(self > rhs)`, bool-ish output.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":21641,"byte_end":21658,"line_start":404,"line_end":404,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":21662,"byte_end":21673,"line_start":405,"line_end":405,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":21881,"byte_end":21888,"line_start":413,"line_end":413,"column_start":10,"column_end":17},"name":"cmp_nle","qualname":"<m128>::cmp_nle","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `!(self <= rhs)` check, bool-ish output.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":21838,"byte_end":21855,"line_start":411,"line_end":411,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":21859,"byte_end":21870,"line_start":412,"line_end":412,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":22070,"byte_end":22078,"line_start":420,"line_end":420,"column_start":10,"column_end":18},"name":"cmp_nle0","qualname":"<m128>::cmp_nle0","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lane 0: `!(self <= rhs)`, bool-ish output.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":22027,"byte_end":22044,"line_start":418,"line_end":418,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":22048,"byte_end":22059,"line_start":419,"line_end":419,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":22266,"byte_end":22273,"line_start":427,"line_end":427,"column_start":10,"column_end":17},"name":"cmp_nlt","qualname":"<m128>::cmp_nlt","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `!(self < rhs)` check, bool-ish output.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":22223,"byte_end":22240,"line_start":425,"line_end":425,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":22244,"byte_end":22255,"line_start":426,"line_end":426,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":22454,"byte_end":22462,"line_start":434,"line_end":434,"column_start":10,"column_end":18},"name":"cmp_nlt0","qualname":"<m128>::cmp_nlt0","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lane 0: `!(self < rhs)`, bool-ish output.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":22411,"byte_end":22428,"line_start":432,"line_end":432,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":22432,"byte_end":22443,"line_start":433,"line_end":433,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":22667,"byte_end":22679,"line_start":441,"line_end":441,"column_start":10,"column_end":22},"name":"cmp_ordinary","qualname":"<m128>::cmp_ordinary","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `self.not_nan() & rhs.not_nan()` check, bool-ish output.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":22624,"byte_end":22641,"line_start":439,"line_end":439,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":22645,"byte_end":22656,"line_start":440,"line_end":440,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":22877,"byte_end":22890,"line_start":448,"line_end":448,"column_start":10,"column_end":23},"name":"cmp_ordinary0","qualname":"<m128>::cmp_ordinary0","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lane 0: `self.not_nan() & rhs.not_nan()`, bool-ish output.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":22834,"byte_end":22851,"line_start":446,"line_end":446,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":22855,"byte_end":22866,"line_start":447,"line_end":447,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":23093,"byte_end":23100,"line_start":455,"line_end":455,"column_start":10,"column_end":17},"name":"cmp_nan","qualname":"<m128>::cmp_nan","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `self.is_nan() | rhs.is_nan()` check, bool-ish output.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":23050,"byte_end":23067,"line_start":453,"line_end":453,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":23071,"byte_end":23082,"line_start":454,"line_end":454,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":23298,"byte_end":23306,"line_start":462,"line_end":462,"column_start":10,"column_end":18},"name":"cmp_nan0","qualname":"<m128>::cmp_nan0","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lane 0: `self.is_nan() | rhs.is_nan()`, bool-ish output.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":23255,"byte_end":23272,"line_start":460,"line_end":460,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":23276,"byte_end":23287,"line_start":461,"line_end":461,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":23491,"byte_end":23499,"line_start":469,"line_end":469,"column_start":10,"column_end":18},"name":"cmpi_eq0","qualname":"<m128>::cmpi_eq0","value":"fn (self, rhs: Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Lane 0: `self == rhs`, 0 or 1 `i32` output.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":23448,"byte_end":23465,"line_start":467,"line_end":467,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":23469,"byte_end":23480,"line_start":468,"line_end":468,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":23675,"byte_end":23683,"line_start":476,"line_end":476,"column_start":10,"column_end":18},"name":"cmpi_ge0","qualname":"<m128>::cmpi_ge0","value":"fn (self, rhs: Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Lane 0: `self >= rhs`, 0 or 1 `i32` output.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":23632,"byte_end":23649,"line_start":474,"line_end":474,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":23653,"byte_end":23664,"line_start":475,"line_end":475,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":23858,"byte_end":23866,"line_start":483,"line_end":483,"column_start":10,"column_end":18},"name":"cmpi_gt0","qualname":"<m128>::cmpi_gt0","value":"fn (self, rhs: Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Lane 0: `self > rhs`, 0 or 1 `i32` output.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":23815,"byte_end":23832,"line_start":481,"line_end":481,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":23836,"byte_end":23847,"line_start":482,"line_end":482,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":24042,"byte_end":24050,"line_start":490,"line_end":490,"column_start":10,"column_end":18},"name":"cmpi_le0","qualname":"<m128>::cmpi_le0","value":"fn (self, rhs: Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Lane 0: `self <= rhs`, 0 or 1 `i32` output.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":23999,"byte_end":24016,"line_start":488,"line_end":488,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":24020,"byte_end":24031,"line_start":489,"line_end":489,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":24225,"byte_end":24233,"line_start":497,"line_end":497,"column_start":10,"column_end":18},"name":"cmpi_lt0","qualname":"<m128>::cmpi_lt0","value":"fn (self, rhs: Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Lane 0: `self < rhs`, 0 or 1 `i32` output.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":24182,"byte_end":24199,"line_start":495,"line_end":495,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":24203,"byte_end":24214,"line_start":496,"line_end":496,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":24409,"byte_end":24417,"line_start":504,"line_end":504,"column_start":10,"column_end":18},"name":"cmpi_ne0","qualname":"<m128>::cmpi_ne0","value":"fn (self, rhs: Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Lane 0: `self != rhs`, 0 or 1 `i32` output.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":24366,"byte_end":24383,"line_start":502,"line_end":502,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":24387,"byte_end":24398,"line_start":503,"line_end":503,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":24741,"byte_end":24759,"line_start":514,"line_end":514,"column_start":10,"column_end":28},"name":"round_replace0_i32","qualname":"<m128>::round_replace0_i32","value":"fn (self, rhs: i32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Round the `i32` to `f32` and replace lane 0.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":24698,"byte_end":24715,"line_start":512,"line_end":512,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":24719,"byte_end":24730,"line_start":513,"line_end":513,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":25075,"byte_end":25093,"line_start":524,"line_end":524,"column_start":10,"column_end":28},"name":"round_extract0_i32","qualname":"<m128>::round_extract0_i32","value":"fn (self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Round lane 0 to `i32` and return.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":25032,"byte_end":25049,"line_start":522,"line_end":522,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":25053,"byte_end":25064,"line_start":523,"line_end":523,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":25469,"byte_end":25487,"line_start":537,"line_end":537,"column_start":10,"column_end":28},"name":"round_replace0_i64","qualname":"<m128>::round_replace0_i64","value":"fn (self, rhs: i64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Round the `i64` to `f32` and replace lane 0.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":25392,"byte_end":25409,"line_start":534,"line_end":534,"column_start":3,"column_end":20}},{"value":"cfg(target_arch = \"x86_64\")","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":25413,"byte_end":25443,"line_start":535,"line_end":535,"column_start":3,"column_end":33}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":25447,"byte_end":25458,"line_start":536,"line_end":536,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":25659,"byte_end":25667,"line_start":544,"line_end":544,"column_start":10,"column_end":18},"name":"extract0","qualname":"<m128>::extract0","value":"fn (self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Directly extracts lane 0 as `f32`.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":25616,"byte_end":25633,"line_start":542,"line_end":542,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":25637,"byte_end":25648,"line_start":543,"line_end":543,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":25995,"byte_end":26013,"line_start":555,"line_end":555,"column_start":10,"column_end":28},"name":"round_extract0_i64","qualname":"<m128>::round_extract0_i64","value":"fn (self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Round lane 0 to `i64` and return.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":25918,"byte_end":25935,"line_start":552,"line_end":552,"column_start":3,"column_end":20}},{"value":"cfg(target_arch = \"x86_64\")","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":25939,"byte_end":25969,"line_start":553,"line_end":553,"column_start":3,"column_end":33}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":25973,"byte_end":25984,"line_start":554,"line_end":554,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":26165,"byte_end":26186,"line_start":562,"line_end":562,"column_start":10,"column_end":31},"name":"truncate_extract0_i32","qualname":"<m128>::truncate_extract0_i32","value":"fn (self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Truncate lane 0 to `i32` and return.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":26122,"byte_end":26139,"line_start":560,"line_end":560,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":26143,"byte_end":26154,"line_start":561,"line_end":561,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":26372,"byte_end":26393,"line_start":570,"line_end":570,"column_start":10,"column_end":31},"name":"truncate_extract0_i64","qualname":"<m128>::truncate_extract0_i64","value":"fn (self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Truncate lane 0 to `i64` and return.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":26295,"byte_end":26312,"line_start":567,"line_end":567,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":26316,"byte_end":26327,"line_start":568,"line_end":568,"column_start":3,"column_end":14}},{"value":"cfg(target_arch = \"x86_64\")","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":26331,"byte_end":26361,"line_start":569,"line_end":569,"column_start":3,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":26575,"byte_end":26579,"line_start":577,"line_end":577,"column_start":10,"column_end":14},"name":"div0","qualname":"<m128>::div0","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Divides the 0th lanes without affecting the other lanes of `self.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":26532,"byte_end":26549,"line_start":575,"line_end":575,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":26553,"byte_end":26564,"line_start":576,"line_end":576,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":26912,"byte_end":26916,"line_start":587,"line_end":587,"column_start":10,"column_end":14},"name":"load","qualname":"<m128>::load","value":"fn (addr: &Align16<[f32; 4]>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Loads a 16-byte aligned `f32` array address into an `m128`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":26869,"byte_end":26886,"line_start":585,"line_end":585,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":26890,"byte_end":26901,"line_start":586,"line_end":586,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":27215,"byte_end":27225,"line_start":596,"line_end":596,"column_start":10,"column_end":20},"name":"load_splat","qualname":"<m128>::load_splat","value":"fn (addr: &f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Loads the `f32` address into all lanes.\n","sig":null,"attributes":[{"value":"allow(clippy::trivially_copy_pass_by_ref)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":27124,"byte_end":27168,"line_start":593,"line_end":593,"column_start":3,"column_end":47}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":27172,"byte_end":27189,"line_start":594,"line_end":594,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":27193,"byte_end":27204,"line_start":595,"line_end":595,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":27457,"byte_end":27462,"line_start":604,"line_end":604,"column_start":10,"column_end":15},"name":"load0","qualname":"<m128>::load0","value":"fn (addr: &f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Loads the `f32` address into lane 0, other lanes are `0.0`.\n","sig":null,"attributes":[{"value":"allow(clippy::trivially_copy_pass_by_ref)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":27366,"byte_end":27410,"line_start":601,"line_end":601,"column_start":3,"column_end":47}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":27414,"byte_end":27431,"line_start":602,"line_end":602,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":27435,"byte_end":27446,"line_start":603,"line_end":603,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":27756,"byte_end":27768,"line_start":614,"line_end":614,"column_start":10,"column_end":22},"name":"load_reverse","qualname":"<m128>::load_reverse","value":"fn (addr: &Align16<[f32; 4]>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Loads 16-byte aligned `f32`s into an `m128`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":27713,"byte_end":27730,"line_start":612,"line_end":612,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":27734,"byte_end":27745,"line_start":613,"line_end":613,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":28143,"byte_end":28157,"line_start":625,"line_end":625,"column_start":10,"column_end":24},"name":"load_unaligned","qualname":"<m128>::load_unaligned","value":"fn (addr: &[f32; 4]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Loads 16-byte `f32`s into an `m128`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":28100,"byte_end":28117,"line_start":623,"line_end":623,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":28121,"byte_end":28132,"line_start":624,"line_end":624,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":28369,"byte_end":28372,"line_start":633,"line_end":633,"column_start":10,"column_end":13},"name":"max","qualname":"<m128>::max","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise maximum.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":28326,"byte_end":28343,"line_start":631,"line_end":631,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":28347,"byte_end":28358,"line_start":632,"line_end":632,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":28548,"byte_end":28552,"line_start":640,"line_end":640,"column_start":10,"column_end":14},"name":"max0","qualname":"<m128>::max0","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lane 0 maximum, other lanes are `self`.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":28505,"byte_end":28522,"line_start":638,"line_end":638,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":28526,"byte_end":28537,"line_start":639,"line_end":639,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":28706,"byte_end":28709,"line_start":647,"line_end":647,"column_start":10,"column_end":13},"name":"min","qualname":"<m128>::min","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise minimum.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":28663,"byte_end":28680,"line_start":645,"line_end":645,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":28684,"byte_end":28695,"line_start":646,"line_end":646,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":28885,"byte_end":28889,"line_start":654,"line_end":654,"column_start":10,"column_end":14},"name":"min0","qualname":"<m128>::min0","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lane 0 minimum, other lanes are `self`.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":28842,"byte_end":28859,"line_start":652,"line_end":652,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":28863,"byte_end":28874,"line_start":653,"line_end":653,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":29075,"byte_end":29080,"line_start":661,"line_end":661,"column_start":10,"column_end":15},"name":"copy0","qualname":"<m128>::copy0","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Copies lane 0 from `rhs`, other lanes are `self`.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":29032,"byte_end":29049,"line_start":659,"line_end":659,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":29053,"byte_end":29064,"line_start":660,"line_end":660,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":29447,"byte_end":29460,"line_start":676,"line_end":676,"column_start":10,"column_end":23},"name":"copy_high_low","qualname":"<m128>::copy_high_low","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Copy the high two lanes of `rhs` over top of the low two lanes of `self`,\n other lanes unchanged.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":29404,"byte_end":29421,"line_start":674,"line_end":674,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":29425,"byte_end":29436,"line_start":675,"line_end":675,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":29829,"byte_end":29842,"line_start":691,"line_end":691,"column_start":10,"column_end":23},"name":"copy_low_high","qualname":"<m128>::copy_low_high","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Copy the low two lanes of `rhs` over top of the high two lanes of `self`,\n other lanes unchanged.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":29786,"byte_end":29803,"line_start":689,"line_end":689,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":29807,"byte_end":29818,"line_start":690,"line_end":690,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":30313,"byte_end":30322,"line_start":704,"line_end":704,"column_start":10,"column_end":19},"name":"move_mask","qualname":"<m128>::move_mask","value":"fn (self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Assumes that this is a bool-ish mask and packs it into an `i32`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":30270,"byte_end":30287,"line_start":702,"line_end":702,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":30291,"byte_end":30302,"line_start":703,"line_end":703,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":30568,"byte_end":30578,"line_start":714,"line_end":714,"column_start":10,"column_end":20},"name":"reciprocal","qualname":"<m128>::reciprocal","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise approximate reciprocal.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":30525,"byte_end":30542,"line_start":712,"line_end":712,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":30546,"byte_end":30557,"line_start":713,"line_end":713,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":30848,"byte_end":30859,"line_start":724,"line_end":724,"column_start":10,"column_end":21},"name":"reciprocal0","qualname":"<m128>::reciprocal0","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lane 0 approximate reciprocal, other lanes are `self`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":30805,"byte_end":30822,"line_start":722,"line_end":722,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":30826,"byte_end":30837,"line_start":723,"line_end":723,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":31126,"byte_end":31141,"line_start":734,"line_end":734,"column_start":10,"column_end":25},"name":"reciprocal_sqrt","qualname":"<m128>::reciprocal_sqrt","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise approximate reciprocal of the square root.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":31083,"byte_end":31100,"line_start":732,"line_end":732,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":31104,"byte_end":31115,"line_start":733,"line_end":733,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":31432,"byte_end":31448,"line_start":744,"line_end":744,"column_start":10,"column_end":26},"name":"reciprocal_sqrt0","qualname":"<m128>::reciprocal_sqrt0","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lane 0 approximate reciprocal of the square root, other lanes are `self`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":31389,"byte_end":31406,"line_start":742,"line_end":742,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":31410,"byte_end":31421,"line_start":743,"line_end":743,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":31872,"byte_end":31875,"line_start":756,"line_end":756,"column_start":10,"column_end":13},"name":"set","qualname":"<m128>::set","value":"fn (a: f32, b: f32, c: f32, d: f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set four `f32` values into an `m128`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":31829,"byte_end":31846,"line_start":754,"line_end":754,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":31850,"byte_end":31861,"line_start":755,"line_end":755,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":32053,"byte_end":32058,"line_start":763,"line_end":763,"column_start":10,"column_end":15},"name":"splat","qualname":"<m128>::splat","value":"fn (a: f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the `f32` into all lanes.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":32010,"byte_end":32027,"line_start":761,"line_end":761,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":32031,"byte_end":32042,"line_start":762,"line_end":762,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":32220,"byte_end":32224,"line_start":770,"line_end":770,"column_start":10,"column_end":14},"name":"set0","qualname":"<m128>::set0","value":"fn (a: f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the value into lane 0, other lanes `0.0`.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":32177,"byte_end":32194,"line_start":768,"line_end":768,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":32198,"byte_end":32209,"line_start":769,"line_end":769,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":32431,"byte_end":32442,"line_start":778,"line_end":778,"column_start":10,"column_end":21},"name":"set_reverse","qualname":"<m128>::set_reverse","value":"fn (a: f32, b: f32, c: f32, d: f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set four `f32` values into an `m128`, order reversed from normal\n [`set`](m128::set).\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":32388,"byte_end":32405,"line_start":776,"line_end":776,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":32409,"byte_end":32420,"line_start":777,"line_end":777,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":32613,"byte_end":32617,"line_start":785,"line_end":785,"column_start":10,"column_end":14},"name":"sqrt","qualname":"<m128>::sqrt","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise square root.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":32570,"byte_end":32587,"line_start":783,"line_end":783,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":32591,"byte_end":32602,"line_start":784,"line_end":784,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":32780,"byte_end":32785,"line_start":792,"line_end":792,"column_start":10,"column_end":15},"name":"sqrt0","qualname":"<m128>::sqrt0","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lane 0 square root, other lanes are `self`.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":32737,"byte_end":32754,"line_start":790,"line_end":790,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":32758,"byte_end":32769,"line_start":791,"line_end":791,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":33019,"byte_end":33024,"line_start":800,"line_end":800,"column_start":10,"column_end":15},"name":"store","qualname":"<m128>::store","value":"fn (self, addr: &mut Align16<[f32; 4]>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Stores an `m128` into a 16-byte aligned `f32` array address.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":32991,"byte_end":33008,"line_start":799,"line_end":799,"column_start":3,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":33262,"byte_end":33272,"line_start":807,"line_end":807,"column_start":10,"column_end":20},"name":"store0_all","qualname":"<m128>::store0_all","value":"fn (self, addr: &mut Align16<[f32; 4]>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Stores lane 0 to all indexes of the array.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":33234,"byte_end":33251,"line_start":806,"line_end":806,"column_start":3,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":33504,"byte_end":33510,"line_start":814,"line_end":814,"column_start":10,"column_end":16},"name":"store0","qualname":"<m128>::store0","value":"fn (self, addr: &mut f32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Stores lane 0 to the address given.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":33476,"byte_end":33493,"line_start":813,"line_end":813,"column_start":3,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":33769,"byte_end":33782,"line_start":822,"line_end":822,"column_start":10,"column_end":23},"name":"store_reverse","qualname":"<m128>::store_reverse","value":"fn (self, addr: &mut Align16<[f32; 4]>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Stores an `m128` into a 16-byte aligned `f32` array address.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":33741,"byte_end":33758,"line_start":821,"line_end":821,"column_start":3,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":34151,"byte_end":34166,"line_start":832,"line_end":832,"column_start":10,"column_end":25},"name":"store_unaligned","qualname":"<m128>::store_unaligned","value":"fn (self, addr: &mut [f32; 4]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Stores an `m128` into a `f32` array address.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":34123,"byte_end":34140,"line_start":831,"line_end":831,"column_start":3,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":34427,"byte_end":34431,"line_start":840,"line_end":840,"column_start":10,"column_end":14},"name":"sub0","qualname":"<m128>::sub0","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Subtracts the 0th lanes without affecting the other lanes of `self.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":34384,"byte_end":34401,"line_start":838,"line_end":838,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":34405,"byte_end":34416,"line_start":839,"line_end":839,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":34751,"byte_end":34762,"line_start":854,"line_end":854,"column_start":10,"column_end":21},"name":"unpack_high","qualname":"<m128>::unpack_high","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Unpack and interleave the high lanes of `self` and `rhs`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":34708,"byte_end":34725,"line_start":852,"line_end":852,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":34729,"byte_end":34740,"line_start":853,"line_end":853,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":35086,"byte_end":35096,"line_start":868,"line_end":868,"column_start":10,"column_end":20},"name":"unpack_low","qualname":"<m128>::unpack_low","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Unpack and interleave the low lanes of `self` and `rhs`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":35043,"byte_end":35060,"line_start":866,"line_end":866,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":35064,"byte_end":35075,"line_start":867,"line_end":867,"column_start":3,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":259},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":35705,"byte_end":35714,"line_start":883,"line_end":883,"column_start":8,"column_end":17},"name":"prefetch0","qualname":"::arch::x86_64::sse::prefetch0","value":"fn (ptr: *const impl Sized) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Prefetch the cache line into all cache levels.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":35679,"byte_end":35696,"line_start":882,"line_end":882,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":261},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":36319,"byte_end":36328,"line_start":897,"line_end":897,"column_start":8,"column_end":17},"name":"prefetch1","qualname":"::arch::x86_64::sse::prefetch1","value":"fn (ptr: *const impl Sized) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Prefetch the cache line into L2 and higher.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":36293,"byte_end":36310,"line_start":896,"line_end":896,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":263},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":36950,"byte_end":36959,"line_start":911,"line_end":911,"column_start":8,"column_end":17},"name":"prefetch2","qualname":"::arch::x86_64::sse::prefetch2","value":"fn (ptr: *const impl Sized) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Prefetch the cache line into L3 and higher (or best effort).","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":36924,"byte_end":36941,"line_start":910,"line_end":910,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":265},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":37539,"byte_end":37551,"line_start":924,"line_end":924,"column_start":8,"column_end":20},"name":"prefetch_nta","qualname":"::arch::x86_64::sse::prefetch_nta","value":"fn (ptr: *const impl Sized) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Prefetch with non-temporal hint.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":37513,"byte_end":37530,"line_start":923,"line_end":923,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":267},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":38214,"byte_end":38224,"line_start":943,"line_end":943,"column_start":8,"column_end":18},"name":"transpose4","qualname":"::arch::x86_64::sse::transpose4","value":"fn (r0: &mut m128, r1: &mut m128, r2: &mut m128, r3: &mut m128) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Transposes, in place, the four `m128` values as if they formed a 4x4 Matrix.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":38188,"byte_end":38205,"line_start":942,"line_end":942,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":270},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":40375,"byte_end":40378,"line_start":1003,"line_end":1003,"column_start":10,"column_end":13},"name":"abs","qualname":"<m128>::abs","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" `[non-intrinsic]` Lanewise absolute value.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":40332,"byte_end":40349,"line_start":1001,"line_end":1001,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":40353,"byte_end":40364,"line_start":1002,"line_end":1002,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":40655,"byte_end":40664,"line_start":11,"line_end":11,"column_start":10,"column_end":19},"name":"round_i32","qualname":"<m128>::round_i32","value":"fn (self) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" This rounds each lane to `i32`.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":40612,"byte_end":40629,"line_start":9,"line_end":9,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":40633,"byte_end":40644,"line_start":10,"line_end":10,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":40824,"byte_end":40836,"line_start":18,"line_end":18,"column_start":10,"column_end":22},"name":"truncate_i32","qualname":"<m128>::truncate_i32","value":"fn (self) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" This truncates each lane to `i32`.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":40781,"byte_end":40798,"line_start":16,"line_end":16,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":40802,"byte_end":40813,"line_start":17,"line_end":17,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":277},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":41212,"byte_end":41221,"line_start":29,"line_end":29,"column_start":10,"column_end":19},"name":"round_f64","qualname":"<m128>::round_f64","value":"fn (self) -> m128d","parent":null,"children":[],"decl_id":null,"docs":" This \"rounds\" the lower two lanes to `f64`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":41169,"byte_end":41186,"line_start":27,"line_end":27,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":41190,"byte_end":41201,"line_start":28,"line_end":28,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":41418,"byte_end":41433,"line_start":36,"line_end":36,"column_start":10,"column_end":25},"name":"f64_round_copy0","qualname":"<m128>::f64_round_copy0","value":"fn (self, rhs: m128d) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lane 0 is the low `f64` of `rhs` rounded to `f32`, other lanes are `self`.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":41375,"byte_end":41392,"line_start":34,"line_end":34,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":41396,"byte_end":41407,"line_start":35,"line_end":35,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":41643,"byte_end":41653,"line_start":43,"line_end":43,"column_start":10,"column_end":20},"name":"cast_m128i","qualname":"<m128>::cast_m128i","value":"fn (self) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Cast the bits of this `m128` directly to `m128i` without modification.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":41600,"byte_end":41617,"line_start":41,"line_end":41,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":41621,"byte_end":41632,"line_start":42,"line_end":42,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":42168,"byte_end":42177,"line_start":56,"line_end":56,"column_start":10,"column_end":19},"name":"ceil_sse2","qualname":"<m128>::ceil_sse2","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" `[non-intrinsic]` Lanewise \"ceiling\" operation (round to positive\n infinity).","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":42133,"byte_end":42142,"line_start":54,"line_end":54,"column_start":3,"column_end":12}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":42146,"byte_end":42157,"line_start":55,"line_end":55,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":43941,"byte_end":43951,"line_start":93,"line_end":93,"column_start":10,"column_end":20},"name":"floor_sse2","qualname":"<m128>::floor_sse2","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" `[non-intrinsic]` Lanewise \"floor\" operation (round to negative infinity).","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":43906,"byte_end":43915,"line_start":91,"line_end":91,"column_start":3,"column_end":12}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":43919,"byte_end":43930,"line_start":92,"line_end":92,"column_start":3,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":985},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":46117,"byte_end":46122,"line_start":137,"line_end":137,"column_start":12,"column_end":17},"name":"m128i","qualname":"::arch::x86_64::sse2::m128i","value":"","parent":null,"children":[],"decl_id":null,"docs":" A 128-bit SIMD value. Integral data, lanes determined by each op.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":46063,"byte_end":46082,"line_start":135,"line_end":135,"column_start":1,"column_end":20}},{"value":"repr(transparent)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":46084,"byte_end":46104,"line_start":136,"line_end":136,"column_start":1,"column_end":21}},{"value":"rustc_copy_clone_marker","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":46106,"byte_end":46136,"line_start":137,"line_end":137,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":351},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":62531,"byte_end":62537,"line_start":673,"line_end":673,"column_start":10,"column_end":16},"name":"add_i8","qualname":"<m128i>::add_i8","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `i8` wrapping addition\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":62488,"byte_end":62505,"line_start":671,"line_end":671,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":62509,"byte_end":62520,"line_start":672,"line_end":672,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":352},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":62706,"byte_end":62713,"line_start":679,"line_end":679,"column_start":10,"column_end":17},"name":"add_i16","qualname":"<m128i>::add_i16","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `i16` wrapping addition\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":62663,"byte_end":62680,"line_start":677,"line_end":677,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":62684,"byte_end":62695,"line_start":678,"line_end":678,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":353},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":62883,"byte_end":62890,"line_start":685,"line_end":685,"column_start":10,"column_end":17},"name":"add_i32","qualname":"<m128i>::add_i32","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `i32` wrapping addition\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":62840,"byte_end":62857,"line_start":683,"line_end":683,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":62861,"byte_end":62872,"line_start":684,"line_end":684,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":354},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":63060,"byte_end":63067,"line_start":691,"line_end":691,"column_start":10,"column_end":17},"name":"add_i64","qualname":"<m128i>::add_i64","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `i64` wrapping addition\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":63017,"byte_end":63034,"line_start":689,"line_end":689,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":63038,"byte_end":63049,"line_start":690,"line_end":690,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":355},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":63240,"byte_end":63257,"line_start":698,"line_end":698,"column_start":10,"column_end":27},"name":"saturating_add_i8","qualname":"<m128i>::saturating_add_i8","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `i8` saturating addition\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":63197,"byte_end":63214,"line_start":696,"line_end":696,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":63218,"byte_end":63229,"line_start":697,"line_end":697,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":356},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":63429,"byte_end":63447,"line_start":704,"line_end":704,"column_start":10,"column_end":28},"name":"saturating_add_i16","qualname":"<m128i>::saturating_add_i16","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `i16` saturating addition\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":63386,"byte_end":63403,"line_start":702,"line_end":702,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":63407,"byte_end":63418,"line_start":703,"line_end":703,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":357},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":63619,"byte_end":63636,"line_start":710,"line_end":710,"column_start":10,"column_end":27},"name":"saturating_add_u8","qualname":"<m128i>::saturating_add_u8","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `u8` saturating addition\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":63576,"byte_end":63593,"line_start":708,"line_end":708,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":63597,"byte_end":63608,"line_start":709,"line_end":709,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":358},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":63808,"byte_end":63826,"line_start":716,"line_end":716,"column_start":10,"column_end":28},"name":"saturating_add_u16","qualname":"<m128i>::saturating_add_u16","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `u16` saturating addition\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":63765,"byte_end":63782,"line_start":714,"line_end":714,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":63786,"byte_end":63797,"line_start":715,"line_end":715,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":359},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":63990,"byte_end":63996,"line_start":723,"line_end":723,"column_start":10,"column_end":16},"name":"andnot","qualname":"<m128i>::andnot","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Bitwise `(!self) & rhs`\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":63947,"byte_end":63964,"line_start":721,"line_end":721,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":63968,"byte_end":63979,"line_start":722,"line_end":722,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":360},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":64180,"byte_end":64190,"line_start":730,"line_end":730,"column_start":10,"column_end":20},"name":"average_u8","qualname":"<m128i>::average_u8","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `u8` average: `(a + b + 1) >> 1`\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":64137,"byte_end":64154,"line_start":728,"line_end":728,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":64158,"byte_end":64169,"line_start":729,"line_end":729,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":361},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":64369,"byte_end":64380,"line_start":736,"line_end":736,"column_start":10,"column_end":21},"name":"average_u16","qualname":"<m128i>::average_u16","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `u16` average: `(a + b + 1) >> 1`\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":64326,"byte_end":64343,"line_start":734,"line_end":734,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":64347,"byte_end":64358,"line_start":735,"line_end":735,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":362},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":64590,"byte_end":64599,"line_start":743,"line_end":743,"column_start":10,"column_end":19},"name":"cast_m128","qualname":"<m128i>::cast_m128","value":"fn (self) -> m128","parent":null,"children":[],"decl_id":null,"docs":" Cast the bits of this `m128i` directly to `m128` without modification.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":64547,"byte_end":64564,"line_start":741,"line_end":741,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":64568,"byte_end":64579,"line_start":742,"line_end":742,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":363},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":64763,"byte_end":64772,"line_start":750,"line_end":750,"column_start":10,"column_end":19},"name":"cmp_eq_i8","qualname":"<m128i>::cmp_eq_i8","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `i8` equality: bool-ish output\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":64720,"byte_end":64737,"line_start":748,"line_end":748,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":64741,"byte_end":64752,"line_start":749,"line_end":749,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":364},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":64951,"byte_end":64961,"line_start":756,"line_end":756,"column_start":10,"column_end":20},"name":"cmp_eq_i16","qualname":"<m128i>::cmp_eq_i16","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `i16` equality: bool-ish output\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":64908,"byte_end":64925,"line_start":754,"line_end":754,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":64929,"byte_end":64940,"line_start":755,"line_end":755,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":365},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":65141,"byte_end":65151,"line_start":762,"line_end":762,"column_start":10,"column_end":20},"name":"cmp_eq_i32","qualname":"<m128i>::cmp_eq_i32","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `i32` equality: bool-ish output\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":65098,"byte_end":65115,"line_start":760,"line_end":760,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":65119,"byte_end":65130,"line_start":761,"line_end":761,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":366},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":65336,"byte_end":65345,"line_start":769,"line_end":769,"column_start":10,"column_end":19},"name":"cmp_gt_i8","qualname":"<m128i>::cmp_gt_i8","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `i8` greater than: bool-ish output\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":65293,"byte_end":65310,"line_start":767,"line_end":767,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":65314,"byte_end":65325,"line_start":768,"line_end":768,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":367},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":65528,"byte_end":65538,"line_start":775,"line_end":775,"column_start":10,"column_end":20},"name":"cmp_gt_i16","qualname":"<m128i>::cmp_gt_i16","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `i16` greater than: bool-ish output\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":65485,"byte_end":65502,"line_start":773,"line_end":773,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":65506,"byte_end":65517,"line_start":774,"line_end":774,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":368},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":65722,"byte_end":65732,"line_start":781,"line_end":781,"column_start":10,"column_end":20},"name":"cmp_gt_i32","qualname":"<m128i>::cmp_gt_i32","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `i32` greater than: bool-ish output\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":65679,"byte_end":65696,"line_start":779,"line_end":779,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":65700,"byte_end":65711,"line_start":780,"line_end":780,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":369},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":65917,"byte_end":65926,"line_start":788,"line_end":788,"column_start":10,"column_end":19},"name":"cmp_lt_i8","qualname":"<m128i>::cmp_lt_i8","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `i8` greater than: bool-ish output\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":65874,"byte_end":65891,"line_start":786,"line_end":786,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":65895,"byte_end":65906,"line_start":787,"line_end":787,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":370},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":66109,"byte_end":66119,"line_start":794,"line_end":794,"column_start":10,"column_end":20},"name":"cmp_lt_i16","qualname":"<m128i>::cmp_lt_i16","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `i16` greater than: bool-ish output\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":66066,"byte_end":66083,"line_start":792,"line_end":792,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":66087,"byte_end":66098,"line_start":793,"line_end":793,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":371},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":66303,"byte_end":66313,"line_start":800,"line_end":800,"column_start":10,"column_end":20},"name":"cmp_lt_i32","qualname":"<m128i>::cmp_lt_i32","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `i32` greater than: bool-ish output\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":66260,"byte_end":66277,"line_start":798,"line_end":798,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":66281,"byte_end":66292,"line_start":799,"line_end":799,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":372},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":66503,"byte_end":66516,"line_start":807,"line_end":807,"column_start":10,"column_end":23},"name":"round_low_f64","qualname":"<m128i>::round_low_f64","value":"fn (self) -> m128d","parent":null,"children":[],"decl_id":null,"docs":" Rounds the lower two `i32` lanes to `f64` lanes.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":66460,"byte_end":66477,"line_start":805,"line_end":805,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":66481,"byte_end":66492,"line_start":806,"line_end":806,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":373},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":66680,"byte_end":66689,"line_start":814,"line_end":814,"column_start":10,"column_end":19},"name":"round_f32","qualname":"<m128i>::round_f32","value":"fn (self) -> m128","parent":null,"children":[],"decl_id":null,"docs":" Rounds the `i32` lanes to `f32` lanes.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":66637,"byte_end":66654,"line_start":812,"line_end":812,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":66658,"byte_end":66669,"line_start":813,"line_end":813,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":374},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":66844,"byte_end":66856,"line_start":821,"line_end":821,"column_start":10,"column_end":22},"name":"extract0_i32","qualname":"<m128i>::extract0_i32","value":"fn (self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Gets out the lowest `i32` lane.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":66801,"byte_end":66818,"line_start":819,"line_end":819,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":66822,"byte_end":66833,"line_start":820,"line_end":820,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":375},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":67040,"byte_end":67052,"line_start":829,"line_end":829,"column_start":10,"column_end":22},"name":"extract0_i64","qualname":"<m128i>::extract0_i64","value":"fn (self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Gets out the lowest `i64` lane.\n","sig":null,"attributes":[{"value":"cfg(target_arch = \"x86_64\")","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":66963,"byte_end":66993,"line_start":826,"line_end":826,"column_start":3,"column_end":33}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":66997,"byte_end":67014,"line_start":827,"line_end":827,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":67018,"byte_end":67029,"line_start":828,"line_end":828,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":376},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":67227,"byte_end":67235,"line_start":836,"line_end":836,"column_start":10,"column_end":18},"name":"set0_i32","qualname":"<m128i>::set0_i32","value":"fn (val: i32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Places the `i32` in the low lane and zeroes other lanes.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":67184,"byte_end":67201,"line_start":834,"line_end":834,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":67205,"byte_end":67216,"line_start":835,"line_end":835,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":377},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":67455,"byte_end":67463,"line_start":844,"line_end":844,"column_start":10,"column_end":18},"name":"set0_i64","qualname":"<m128i>::set0_i64","value":"fn (val: i64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Places the `i64` in the low lane and zeroes the other lane.\n","sig":null,"attributes":[{"value":"cfg(target_arch = \"x86_64\")","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":67378,"byte_end":67408,"line_start":841,"line_end":841,"column_start":3,"column_end":33}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":67412,"byte_end":67429,"line_start":842,"line_end":842,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":67433,"byte_end":67444,"line_start":843,"line_end":843,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":378},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":67633,"byte_end":67637,"line_start":851,"line_end":851,"column_start":10,"column_end":14},"name":"load","qualname":"<m128i>::load","value":"fn (addr: &Align16<i128>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Loads the aligned `i128` address specified.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":67590,"byte_end":67607,"line_start":849,"line_end":849,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":67611,"byte_end":67622,"line_start":850,"line_end":850,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":379},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":67912,"byte_end":67921,"line_start":859,"line_end":859,"column_start":10,"column_end":19},"name":"load0_i64","qualname":"<m128i>::load0_i64","value":"fn (addr: &Align16<i64>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Loads the aligned `i64` address specified into the low lane.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":67869,"byte_end":67886,"line_start":857,"line_end":857,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":67890,"byte_end":67901,"line_start":858,"line_end":858,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":380},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":68237,"byte_end":68251,"line_start":868,"line_end":868,"column_start":10,"column_end":24},"name":"load_unaligned","qualname":"<m128i>::load_unaligned","value":"fn (addr: &[u8; 16]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Loads the `i128` address specified, no alignment requirements.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":68154,"byte_end":68171,"line_start":865,"line_end":865,"column_start":3,"column_end":20}},{"value":"allow(clippy::cast_ptr_alignment)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":68175,"byte_end":68211,"line_start":866,"line_end":866,"column_start":3,"column_end":39}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":68215,"byte_end":68226,"line_start":867,"line_end":867,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":383},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":68662,"byte_end":68674,"line_start":879,"line_end":879,"column_start":10,"column_end":22},"name":"mul_i16_hadd","qualname":"<m128i>::mul_i16_hadd","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `i16` multiply then horizontal add into four lanes.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":68619,"byte_end":68636,"line_start":877,"line_end":877,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":68640,"byte_end":68651,"line_start":878,"line_end":878,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":384},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":68836,"byte_end":68842,"line_start":886,"line_end":886,"column_start":10,"column_end":16},"name":"max_u8","qualname":"<m128i>::max_u8","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `u8` maximum\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":68793,"byte_end":68810,"line_start":884,"line_end":884,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":68814,"byte_end":68825,"line_start":885,"line_end":885,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":385},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":69002,"byte_end":69008,"line_start":893,"line_end":893,"column_start":10,"column_end":16},"name":"min_u8","qualname":"<m128i>::min_u8","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `u8` minimum\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":68959,"byte_end":68976,"line_start":891,"line_end":891,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":68980,"byte_end":68991,"line_start":892,"line_end":892,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":386},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":69169,"byte_end":69176,"line_start":900,"line_end":900,"column_start":10,"column_end":17},"name":"max_i16","qualname":"<m128i>::max_i16","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `i16` maximum\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":69126,"byte_end":69143,"line_start":898,"line_end":898,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":69147,"byte_end":69158,"line_start":899,"line_end":899,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":387},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":69338,"byte_end":69345,"line_start":907,"line_end":907,"column_start":10,"column_end":17},"name":"min_i16","qualname":"<m128i>::min_i16","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `i16` minimum\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":69295,"byte_end":69312,"line_start":905,"line_end":905,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":69316,"byte_end":69327,"line_start":906,"line_end":906,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":388},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":69545,"byte_end":69554,"line_start":914,"line_end":914,"column_start":10,"column_end":19},"name":"copy0_i64","qualname":"<m128i>::copy0_i64","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Copies the low lane `i64` into a new value, upper lane is 0.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":69502,"byte_end":69519,"line_start":912,"line_end":912,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":69523,"byte_end":69534,"line_start":913,"line_end":913,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":389},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":69716,"byte_end":69728,"line_start":921,"line_end":921,"column_start":10,"column_end":22},"name":"move_mask_i8","qualname":"<m128i>::move_mask_i8","value":"fn (self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Crates a move mask from the `i8` lanes.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":69673,"byte_end":69690,"line_start":919,"line_end":919,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":69694,"byte_end":69705,"line_start":920,"line_end":920,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":69893,"byte_end":69905,"line_start":928,"line_end":928,"column_start":10,"column_end":22},"name":"mul_high_i16","qualname":"<m128i>::mul_high_i16","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `i16` multiplication, keep high bits.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":69850,"byte_end":69867,"line_start":926,"line_end":926,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":69871,"byte_end":69882,"line_start":927,"line_end":927,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":70092,"byte_end":70103,"line_start":935,"line_end":935,"column_start":10,"column_end":21},"name":"mul_low_i16","qualname":"<m128i>::mul_low_i16","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `i16` multiplication, keep low bits.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":70049,"byte_end":70066,"line_start":933,"line_end":933,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":70070,"byte_end":70081,"line_start":934,"line_end":934,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":70291,"byte_end":70303,"line_start":942,"line_end":942,"column_start":10,"column_end":22},"name":"mul_high_u16","qualname":"<m128i>::mul_high_u16","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `u16` multiplication, keep high bits.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":70248,"byte_end":70265,"line_start":940,"line_end":940,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":70269,"byte_end":70280,"line_start":941,"line_end":941,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":70512,"byte_end":70524,"line_start":949,"line_end":949,"column_start":10,"column_end":22},"name":"half_mul_u32","qualname":"<m128i>::half_mul_u32","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lower half of each `i64` lane is `u32` multiplied into `u64` lanes.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":70469,"byte_end":70486,"line_start":947,"line_end":947,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":70490,"byte_end":70501,"line_start":948,"line_end":948,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":70720,"byte_end":70742,"line_start":956,"line_end":956,"column_start":10,"column_end":32},"name":"pack_i16_saturating_i8","qualname":"<m128i>::pack_i16_saturating_i8","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Pack `self` then `rhs` `i16` values into saturated `i8`s\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":70677,"byte_end":70694,"line_start":954,"line_end":954,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":70698,"byte_end":70709,"line_start":955,"line_end":955,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":395},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":70941,"byte_end":70964,"line_start":963,"line_end":963,"column_start":10,"column_end":33},"name":"pack_i32_saturating_i16","qualname":"<m128i>::pack_i32_saturating_i16","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Pack `self` then `rhs` `i32` values into saturated `i16`s\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":70898,"byte_end":70915,"line_start":961,"line_end":961,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":70919,"byte_end":70930,"line_start":962,"line_end":962,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":396},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":71162,"byte_end":71184,"line_start":970,"line_end":970,"column_start":10,"column_end":32},"name":"pack_i16_saturating_u8","qualname":"<m128i>::pack_i16_saturating_u8","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Pack `self` then `rhs` `i16` values into saturated `u8`s\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":71119,"byte_end":71136,"line_start":968,"line_end":968,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":71140,"byte_end":71151,"line_start":969,"line_end":969,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":397},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":71398,"byte_end":71416,"line_start":977,"line_end":977,"column_start":10,"column_end":28},"name":"signed_abs_diff_i8","qualname":"<m128i>::signed_abs_diff_i8","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sum of absolute `i8` differences, eight at a time into two `i64` lanes.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":71355,"byte_end":71372,"line_start":975,"line_end":975,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":71376,"byte_end":71387,"line_start":976,"line_end":976,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":398},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":71687,"byte_end":71693,"line_start":986,"line_end":986,"column_start":10,"column_end":16},"name":"set_i8","qualname":"<m128i>::set_i8","value":"fn (a: i8, b: i8, c: i8, d: i8, e: i8, f: i8, g: i8, h: i8, i: i8, j: i8, k: i8, l: i8, m: i8, n: i8, o: i8, p: i8) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the `i8` values together in standard order.\n","sig":null,"attributes":[{"value":"allow(clippy::too_many_arguments)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":71560,"byte_end":71596,"line_start":982,"line_end":982,"column_start":3,"column_end":39}},{"value":"allow(clippy::many_single_char_names)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":71600,"byte_end":71640,"line_start":983,"line_end":983,"column_start":3,"column_end":43}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":71644,"byte_end":71661,"line_start":984,"line_end":984,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":71665,"byte_end":71676,"line_start":985,"line_end":985,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":399},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":72189,"byte_end":72203,"line_start":1014,"line_end":1014,"column_start":10,"column_end":24},"name":"set_reverse_i8","qualname":"<m128i>::set_reverse_i8","value":"fn (a: i8, b: i8, c: i8, d: i8, e: i8, f: i8, g: i8, h: i8, i: i8, j: i8, k: i8, l: i8, m: i8, n: i8, o: i8, p: i8) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the `i8` values together in reverse order.\n","sig":null,"attributes":[{"value":"allow(clippy::too_many_arguments)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":72062,"byte_end":72098,"line_start":1010,"line_end":1010,"column_start":3,"column_end":39}},{"value":"allow(clippy::many_single_char_names)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":72102,"byte_end":72142,"line_start":1011,"line_end":1011,"column_start":3,"column_end":43}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":72146,"byte_end":72163,"line_start":1012,"line_end":1012,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":72167,"byte_end":72178,"line_start":1013,"line_end":1013,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":400},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":72702,"byte_end":72709,"line_start":1042,"line_end":1042,"column_start":10,"column_end":17},"name":"set_i16","qualname":"<m128i>::set_i16","value":"fn (a: i16, b: i16, c: i16, d: i16, e: i16, f: i16, g: i16, h: i16) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the `i16` values together in standard order.\n","sig":null,"attributes":[{"value":"allow(clippy::too_many_arguments)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":72575,"byte_end":72611,"line_start":1038,"line_end":1038,"column_start":3,"column_end":39}},{"value":"allow(clippy::many_single_char_names)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":72615,"byte_end":72655,"line_start":1039,"line_end":1039,"column_start":3,"column_end":43}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":72659,"byte_end":72676,"line_start":1040,"line_end":1040,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":72680,"byte_end":72691,"line_start":1041,"line_end":1041,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":401},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":73083,"byte_end":73098,"line_start":1060,"line_end":1060,"column_start":10,"column_end":25},"name":"set_reverse_i16","qualname":"<m128i>::set_reverse_i16","value":"fn (a: i16, b: i16, c: i16, d: i16, e: i16, f: i16, g: i16, h: i16) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the `i16` values together in reverse order.\n","sig":null,"attributes":[{"value":"allow(clippy::too_many_arguments)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":72956,"byte_end":72992,"line_start":1056,"line_end":1056,"column_start":3,"column_end":39}},{"value":"allow(clippy::many_single_char_names)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":72996,"byte_end":73036,"line_start":1057,"line_end":1057,"column_start":3,"column_end":43}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":73040,"byte_end":73057,"line_start":1058,"line_end":1058,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":73061,"byte_end":73072,"line_start":1059,"line_end":1059,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":402},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":73390,"byte_end":73397,"line_start":1076,"line_end":1076,"column_start":10,"column_end":17},"name":"set_i32","qualname":"<m128i>::set_i32","value":"fn (a: i32, b: i32, c: i32, d: i32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the `i32` values together in standard order.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":73347,"byte_end":73364,"line_start":1074,"line_end":1074,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":73368,"byte_end":73379,"line_start":1075,"line_end":1075,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":403},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":73597,"byte_end":73612,"line_start":1083,"line_end":1083,"column_start":10,"column_end":25},"name":"set_reverse_i32","qualname":"<m128i>::set_reverse_i32","value":"fn (a: i32, b: i32, c: i32, d: i32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the `i32` values together in reverse order.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":73554,"byte_end":73571,"line_start":1081,"line_end":1081,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":73575,"byte_end":73586,"line_start":1082,"line_end":1082,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":404},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":73814,"byte_end":73821,"line_start":1090,"line_end":1090,"column_start":10,"column_end":17},"name":"set_i64","qualname":"<m128i>::set_i64","value":"fn (a: i64, b: i64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the `i64` values together in standard order.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":73771,"byte_end":73788,"line_start":1088,"line_end":1088,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":73792,"byte_end":73803,"line_start":1089,"line_end":1089,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":405},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":73991,"byte_end":73999,"line_start":1097,"line_end":1097,"column_start":10,"column_end":18},"name":"splat_i8","qualname":"<m128i>::splat_i8","value":"fn (a: i8) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Splats the `i8` value across all lanes.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":73948,"byte_end":73965,"line_start":1095,"line_end":1095,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":73969,"byte_end":73980,"line_start":1096,"line_end":1096,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":406},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":74157,"byte_end":74166,"line_start":1104,"line_end":1104,"column_start":10,"column_end":19},"name":"splat_i16","qualname":"<m128i>::splat_i16","value":"fn (a: i16) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Splats the `i16` value across all lanes.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":74114,"byte_end":74131,"line_start":1102,"line_end":1102,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":74135,"byte_end":74146,"line_start":1103,"line_end":1103,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":407},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":74326,"byte_end":74335,"line_start":1111,"line_end":1111,"column_start":10,"column_end":19},"name":"splat_i32","qualname":"<m128i>::splat_i32","value":"fn (a: i32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Splats the `i32` value across all lanes.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":74283,"byte_end":74300,"line_start":1109,"line_end":1109,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":74304,"byte_end":74315,"line_start":1110,"line_end":1110,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":408},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":74495,"byte_end":74504,"line_start":1118,"line_end":1118,"column_start":10,"column_end":19},"name":"splat_i64","qualname":"<m128i>::splat_i64","value":"fn (a: i64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Splats the `i64` value across all lanes.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":74452,"byte_end":74469,"line_start":1116,"line_end":1116,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":74473,"byte_end":74484,"line_start":1117,"line_end":1117,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":409},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":74689,"byte_end":74703,"line_start":1125,"line_end":1125,"column_start":10,"column_end":24},"name":"shift_left_i16","qualname":"<m128i>::shift_left_i16","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `i16` left shift using `rhs` as a `i128`: `self << rhs`\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":74646,"byte_end":74663,"line_start":1123,"line_end":1123,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":74667,"byte_end":74678,"line_start":1124,"line_end":1124,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":410},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":74907,"byte_end":74921,"line_start":1132,"line_end":1132,"column_start":10,"column_end":24},"name":"shift_left_i32","qualname":"<m128i>::shift_left_i32","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `i32` left shift using `rhs` as a `i128`: `self << rhs`\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":74864,"byte_end":74881,"line_start":1130,"line_end":1130,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":74885,"byte_end":74896,"line_start":1131,"line_end":1131,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":411},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":75125,"byte_end":75139,"line_start":1139,"line_end":1139,"column_start":10,"column_end":24},"name":"shift_left_i64","qualname":"<m128i>::shift_left_i64","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `i64` left shift using `rhs` as a `i128`: `self << rhs`\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":75082,"byte_end":75099,"line_start":1137,"line_end":1137,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":75103,"byte_end":75114,"line_start":1138,"line_end":1138,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":412},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":75395,"byte_end":75415,"line_start":1148,"line_end":1148,"column_start":10,"column_end":30},"name":"shift_right_sign_i16","qualname":"<m128i>::shift_right_sign_i16","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `i16` right shift using `rhs` as a `i128`: `self >> rhs`","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":75352,"byte_end":75369,"line_start":1146,"line_end":1146,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":75373,"byte_end":75384,"line_start":1147,"line_end":1147,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":413},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":75671,"byte_end":75691,"line_start":1157,"line_end":1157,"column_start":10,"column_end":30},"name":"shift_right_sign_i32","qualname":"<m128i>::shift_right_sign_i32","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `i32` right shift using `rhs` as a `i128`: `self >> rhs`","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":75628,"byte_end":75645,"line_start":1155,"line_end":1155,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":75649,"byte_end":75660,"line_start":1156,"line_end":1156,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":414},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":75960,"byte_end":75980,"line_start":1166,"line_end":1166,"column_start":10,"column_end":30},"name":"shift_right_zero_i16","qualname":"<m128i>::shift_right_zero_i16","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `i16` right shift using `rhs` as a `i128`: `self >> rhs`","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":75917,"byte_end":75934,"line_start":1164,"line_end":1164,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":75938,"byte_end":75949,"line_start":1165,"line_end":1165,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":415},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":76249,"byte_end":76269,"line_start":1175,"line_end":1175,"column_start":10,"column_end":30},"name":"shift_right_zero_i32","qualname":"<m128i>::shift_right_zero_i32","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `i32` right shift using `rhs` as a `i128`: `self >> rhs`","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":76206,"byte_end":76223,"line_start":1173,"line_end":1173,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":76227,"byte_end":76238,"line_start":1174,"line_end":1174,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":416},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":76538,"byte_end":76558,"line_start":1184,"line_end":1184,"column_start":10,"column_end":30},"name":"shift_right_zero_i64","qualname":"<m128i>::shift_right_zero_i64","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `i64` right shift using `rhs` as a `i128`: `self >> rhs`","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":76495,"byte_end":76512,"line_start":1182,"line_end":1182,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":76516,"byte_end":76527,"line_start":1183,"line_end":1183,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":417},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":76728,"byte_end":76733,"line_start":1190,"line_end":1190,"column_start":10,"column_end":15},"name":"store","qualname":"<m128i>::store","value":"fn (self, addr: &mut Align16<i128>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Stores the data to the aligned address given.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":76700,"byte_end":76717,"line_start":1189,"line_end":1189,"column_start":3,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":418},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":76989,"byte_end":76999,"line_start":1197,"line_end":1197,"column_start":10,"column_end":20},"name":"store0_i64","qualname":"<m128i>::store0_i64","value":"fn (self, addr: &mut Align16<i64>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Stores the lower `i64` lane to the aligned address given.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":76961,"byte_end":76978,"line_start":1196,"line_end":1196,"column_start":3,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":419},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":77301,"byte_end":77316,"line_start":1205,"line_end":1205,"column_start":10,"column_end":25},"name":"store_unaligned","qualname":"<m128i>::store_unaligned","value":"fn (self, addr: &mut [u8; 16]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Stores the data to the address given, no alignment requirements.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":77233,"byte_end":77250,"line_start":1203,"line_end":1203,"column_start":3,"column_end":20}},{"value":"allow(clippy::cast_ptr_alignment)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":77254,"byte_end":77290,"line_start":1204,"line_end":1204,"column_start":3,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":422},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":77555,"byte_end":77561,"line_start":1213,"line_end":1213,"column_start":10,"column_end":16},"name":"sub_i8","qualname":"<m128i>::sub_i8","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `i8` wrapping subtraction\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":77512,"byte_end":77529,"line_start":1211,"line_end":1211,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":77533,"byte_end":77544,"line_start":1212,"line_end":1212,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":423},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":77733,"byte_end":77740,"line_start":1219,"line_end":1219,"column_start":10,"column_end":17},"name":"sub_i16","qualname":"<m128i>::sub_i16","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `i16` wrapping subtraction\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":77690,"byte_end":77707,"line_start":1217,"line_end":1217,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":77711,"byte_end":77722,"line_start":1218,"line_end":1218,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":424},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":77913,"byte_end":77920,"line_start":1225,"line_end":1225,"column_start":10,"column_end":17},"name":"sub_i32","qualname":"<m128i>::sub_i32","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `i32` wrapping subtraction\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":77870,"byte_end":77887,"line_start":1223,"line_end":1223,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":77891,"byte_end":77902,"line_start":1224,"line_end":1224,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":425},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":78093,"byte_end":78100,"line_start":1231,"line_end":1231,"column_start":10,"column_end":17},"name":"sub_i64","qualname":"<m128i>::sub_i64","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `i64` wrapping subtraction\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":78050,"byte_end":78067,"line_start":1229,"line_end":1229,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":78071,"byte_end":78082,"line_start":1230,"line_end":1230,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":426},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":78276,"byte_end":78293,"line_start":1238,"line_end":1238,"column_start":10,"column_end":27},"name":"saturating_sub_i8","qualname":"<m128i>::saturating_sub_i8","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `i8` saturating subtraction\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":78233,"byte_end":78250,"line_start":1236,"line_end":1236,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":78254,"byte_end":78265,"line_start":1237,"line_end":1237,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":427},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":78468,"byte_end":78486,"line_start":1244,"line_end":1244,"column_start":10,"column_end":28},"name":"saturating_sub_i16","qualname":"<m128i>::saturating_sub_i16","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `i16` saturating subtraction\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":78425,"byte_end":78442,"line_start":1242,"line_end":1242,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":78446,"byte_end":78457,"line_start":1243,"line_end":1243,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":428},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":78663,"byte_end":78680,"line_start":1251,"line_end":1251,"column_start":10,"column_end":27},"name":"saturating_sub_u8","qualname":"<m128i>::saturating_sub_u8","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `u8` saturating subtraction\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":78620,"byte_end":78637,"line_start":1249,"line_end":1249,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":78641,"byte_end":78652,"line_start":1250,"line_end":1250,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":429},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":78855,"byte_end":78873,"line_start":1257,"line_end":1257,"column_start":10,"column_end":28},"name":"saturating_sub_u16","qualname":"<m128i>::saturating_sub_u16","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `u16` saturating subtraction\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":78812,"byte_end":78829,"line_start":1255,"line_end":1255,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":78833,"byte_end":78844,"line_start":1256,"line_end":1256,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":430},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":79071,"byte_end":79085,"line_start":1264,"line_end":1264,"column_start":10,"column_end":24},"name":"unpack_high_i8","qualname":"<m128i>::unpack_high_i8","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Unpack `i8` values from the high half of `self` and `rhs`\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":79028,"byte_end":79045,"line_start":1262,"line_end":1262,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":79049,"byte_end":79060,"line_start":1263,"line_end":1263,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":431},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":79285,"byte_end":79300,"line_start":1270,"line_end":1270,"column_start":10,"column_end":25},"name":"unpack_high_i16","qualname":"<m128i>::unpack_high_i16","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Unpack `i16` values from the high half of `self` and `rhs`\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":79242,"byte_end":79259,"line_start":1268,"line_end":1268,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":79263,"byte_end":79274,"line_start":1269,"line_end":1269,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":432},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":79501,"byte_end":79516,"line_start":1276,"line_end":1276,"column_start":10,"column_end":25},"name":"unpack_high_i32","qualname":"<m128i>::unpack_high_i32","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Unpack `i32` values from the high half of `self` and `rhs`\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":79458,"byte_end":79475,"line_start":1274,"line_end":1274,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":79479,"byte_end":79490,"line_start":1275,"line_end":1275,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":433},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":79717,"byte_end":79732,"line_start":1282,"line_end":1282,"column_start":10,"column_end":25},"name":"unpack_high_i64","qualname":"<m128i>::unpack_high_i64","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Unpack `i64` values from the high half of `self` and `rhs`\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":79674,"byte_end":79691,"line_start":1280,"line_end":1280,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":79695,"byte_end":79706,"line_start":1281,"line_end":1281,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":434},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":79933,"byte_end":79946,"line_start":1289,"line_end":1289,"column_start":10,"column_end":23},"name":"unpack_low_i8","qualname":"<m128i>::unpack_low_i8","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Unpack `i8` values from the low half of `self` and `rhs`\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":79890,"byte_end":79907,"line_start":1287,"line_end":1287,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":79911,"byte_end":79922,"line_start":1288,"line_end":1288,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":435},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":80145,"byte_end":80159,"line_start":1295,"line_end":1295,"column_start":10,"column_end":24},"name":"unpack_low_i16","qualname":"<m128i>::unpack_low_i16","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Unpack `i16` values from the low half of `self` and `rhs`\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":80102,"byte_end":80119,"line_start":1293,"line_end":1293,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":80123,"byte_end":80134,"line_start":1294,"line_end":1294,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":436},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":80359,"byte_end":80373,"line_start":1301,"line_end":1301,"column_start":10,"column_end":24},"name":"unpack_low_i32","qualname":"<m128i>::unpack_low_i32","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Unpack `i32` values from the low half of `self` and `rhs`\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":80316,"byte_end":80333,"line_start":1299,"line_end":1299,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":80337,"byte_end":80348,"line_start":1300,"line_end":1300,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":437},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":80573,"byte_end":80587,"line_start":1307,"line_end":1307,"column_start":10,"column_end":24},"name":"unpack_low_i64","qualname":"<m128i>::unpack_low_i64","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Unpack `i64` values from the low half of `self` and `rhs`\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":80530,"byte_end":80547,"line_start":1305,"line_end":1305,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":80551,"byte_end":80562,"line_start":1306,"line_end":1306,"column_start":3,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":991},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":81902,"byte_end":81907,"line_start":1332,"line_end":1332,"column_start":12,"column_end":17},"name":"m128d","qualname":"::arch::x86_64::sse2::m128d","value":"","parent":null,"children":[],"decl_id":null,"docs":" A 128-bit SIMD value. Always used as `f64x2`.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":81848,"byte_end":81867,"line_start":1330,"line_end":1330,"column_start":1,"column_end":20}},{"value":"repr(transparent)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":81869,"byte_end":81889,"line_start":1331,"line_end":1331,"column_start":1,"column_end":21}},{"value":"rustc_copy_clone_marker","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":81891,"byte_end":81921,"line_start":1332,"line_end":1332,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":496},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":87773,"byte_end":87777,"line_start":1575,"line_end":1575,"column_start":10,"column_end":14},"name":"add0","qualname":"<m128d>::add0","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Adds the low lane, high lane unaffected.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":87730,"byte_end":87747,"line_start":1573,"line_end":1573,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":87751,"byte_end":87762,"line_start":1574,"line_end":1574,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":497},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":87937,"byte_end":87943,"line_start":1582,"line_end":1582,"column_start":10,"column_end":16},"name":"andnot","qualname":"<m128d>::andnot","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Bitwise `(!self) & rhs`\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":87894,"byte_end":87911,"line_start":1580,"line_end":1580,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":87915,"byte_end":87926,"line_start":1581,"line_end":1581,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":498},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":88154,"byte_end":88164,"line_start":1589,"line_end":1589,"column_start":10,"column_end":20},"name":"cast_m128i","qualname":"<m128d>::cast_m128i","value":"fn (self) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Cast the bits of this `m128d` directly to `m128i` without modification.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":88111,"byte_end":88128,"line_start":1587,"line_end":1587,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":88132,"byte_end":88143,"line_start":1588,"line_end":1588,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":499},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":88330,"byte_end":88336,"line_start":1596,"line_end":1596,"column_start":10,"column_end":16},"name":"cmp_eq","qualname":"<m128d>::cmp_eq","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `self == rhs`, bool-ish output\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":88287,"byte_end":88304,"line_start":1594,"line_end":1594,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":88308,"byte_end":88319,"line_start":1595,"line_end":1595,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":500},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":88513,"byte_end":88520,"line_start":1603,"line_end":1603,"column_start":10,"column_end":17},"name":"cmp_eq0","qualname":"<m128d>::cmp_eq0","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lane 0: `self == rhs`, bool-ish output\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":88470,"byte_end":88487,"line_start":1601,"line_end":1601,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":88491,"byte_end":88502,"line_start":1602,"line_end":1602,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":501},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":88698,"byte_end":88704,"line_start":1610,"line_end":1610,"column_start":10,"column_end":16},"name":"cmp_ge","qualname":"<m128d>::cmp_ge","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `self >= rhs`, bool-ish output\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":88655,"byte_end":88672,"line_start":1608,"line_end":1608,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":88676,"byte_end":88687,"line_start":1609,"line_end":1609,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":502},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":88881,"byte_end":88888,"line_start":1617,"line_end":1617,"column_start":10,"column_end":17},"name":"cmp_ge0","qualname":"<m128d>::cmp_ge0","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lane 0: `self >= rhs`, bool-ish output\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":88838,"byte_end":88855,"line_start":1615,"line_end":1615,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":88859,"byte_end":88870,"line_start":1616,"line_end":1616,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":503},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":89065,"byte_end":89071,"line_start":1624,"line_end":1624,"column_start":10,"column_end":16},"name":"cmp_gt","qualname":"<m128d>::cmp_gt","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `self > rhs`, bool-ish output\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":89022,"byte_end":89039,"line_start":1622,"line_end":1622,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":89043,"byte_end":89054,"line_start":1623,"line_end":1623,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":504},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":89247,"byte_end":89254,"line_start":1631,"line_end":1631,"column_start":10,"column_end":17},"name":"cmp_gt0","qualname":"<m128d>::cmp_gt0","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lane 0: `self > rhs`, bool-ish output\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":89204,"byte_end":89221,"line_start":1629,"line_end":1629,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":89225,"byte_end":89236,"line_start":1630,"line_end":1630,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":505},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":89432,"byte_end":89438,"line_start":1638,"line_end":1638,"column_start":10,"column_end":16},"name":"cmp_le","qualname":"<m128d>::cmp_le","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `self <= rhs`, bool-ish output\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":89389,"byte_end":89406,"line_start":1636,"line_end":1636,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":89410,"byte_end":89421,"line_start":1637,"line_end":1637,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":506},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":89615,"byte_end":89622,"line_start":1645,"line_end":1645,"column_start":10,"column_end":17},"name":"cmp_le0","qualname":"<m128d>::cmp_le0","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lane 0: `self <= rhs`, bool-ish output\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":89572,"byte_end":89589,"line_start":1643,"line_end":1643,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":89593,"byte_end":89604,"line_start":1644,"line_end":1644,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":507},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":89799,"byte_end":89805,"line_start":1652,"line_end":1652,"column_start":10,"column_end":16},"name":"cmp_lt","qualname":"<m128d>::cmp_lt","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `self < rhs`, bool-ish output\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":89756,"byte_end":89773,"line_start":1650,"line_end":1650,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":89777,"byte_end":89788,"line_start":1651,"line_end":1651,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":508},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":89981,"byte_end":89988,"line_start":1659,"line_end":1659,"column_start":10,"column_end":17},"name":"cmp_lt0","qualname":"<m128d>::cmp_lt0","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lane 0: `self < rhs`, bool-ish output\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":89938,"byte_end":89955,"line_start":1657,"line_end":1657,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":89959,"byte_end":89970,"line_start":1658,"line_end":1658,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":509},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":90166,"byte_end":90172,"line_start":1666,"line_end":1666,"column_start":10,"column_end":16},"name":"cmp_ne","qualname":"<m128d>::cmp_ne","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `self != rhs`, bool-ish output\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":90123,"byte_end":90140,"line_start":1664,"line_end":1664,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":90144,"byte_end":90155,"line_start":1665,"line_end":1665,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":510},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":90350,"byte_end":90357,"line_start":1673,"line_end":1673,"column_start":10,"column_end":17},"name":"cmp_ne0","qualname":"<m128d>::cmp_ne0","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lane 0: `self != rhs`, bool-ish output\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":90307,"byte_end":90324,"line_start":1671,"line_end":1671,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":90328,"byte_end":90339,"line_start":1672,"line_end":1672,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":511},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":90595,"byte_end":90602,"line_start":1682,"line_end":1682,"column_start":10,"column_end":17},"name":"cmp_nge","qualname":"<m128d>::cmp_nge","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `!(self >= rhs)`, bool-ish output","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":90552,"byte_end":90569,"line_start":1680,"line_end":1680,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":90573,"byte_end":90584,"line_start":1681,"line_end":1681,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":512},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":90783,"byte_end":90791,"line_start":1689,"line_end":1689,"column_start":10,"column_end":18},"name":"cmp_nge0","qualname":"<m128d>::cmp_nge0","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lane 0: `!(self >= rhs)`, bool-ish output\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":90740,"byte_end":90757,"line_start":1687,"line_end":1687,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":90761,"byte_end":90772,"line_start":1688,"line_end":1688,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":513},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":90972,"byte_end":90979,"line_start":1696,"line_end":1696,"column_start":10,"column_end":17},"name":"cmp_ngt","qualname":"<m128d>::cmp_ngt","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `!(self > rhs)`, bool-ish output\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":90929,"byte_end":90946,"line_start":1694,"line_end":1694,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":90950,"byte_end":90961,"line_start":1695,"line_end":1695,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":514},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":91159,"byte_end":91167,"line_start":1703,"line_end":1703,"column_start":10,"column_end":18},"name":"cmp_ngt0","qualname":"<m128d>::cmp_ngt0","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lane 0: `!(self > rhs)`, bool-ish output\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":91116,"byte_end":91133,"line_start":1701,"line_end":1701,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":91137,"byte_end":91148,"line_start":1702,"line_end":1702,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":515},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":91349,"byte_end":91356,"line_start":1710,"line_end":1710,"column_start":10,"column_end":17},"name":"cmp_nle","qualname":"<m128d>::cmp_nle","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `!(self <= rhs)`, bool-ish output\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":91306,"byte_end":91323,"line_start":1708,"line_end":1708,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":91327,"byte_end":91338,"line_start":1709,"line_end":1709,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":516},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":91537,"byte_end":91545,"line_start":1717,"line_end":1717,"column_start":10,"column_end":18},"name":"cmp_nle0","qualname":"<m128d>::cmp_nle0","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lane 0: `!(self <= rhs)`, bool-ish output\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":91494,"byte_end":91511,"line_start":1715,"line_end":1715,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":91515,"byte_end":91526,"line_start":1716,"line_end":1716,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":517},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":91726,"byte_end":91733,"line_start":1724,"line_end":1724,"column_start":10,"column_end":17},"name":"cmp_nlt","qualname":"<m128d>::cmp_nlt","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `!(self < rhs)`, bool-ish output\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":91683,"byte_end":91700,"line_start":1722,"line_end":1722,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":91704,"byte_end":91715,"line_start":1723,"line_end":1723,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":518},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":91913,"byte_end":91921,"line_start":1731,"line_end":1731,"column_start":10,"column_end":18},"name":"cmp_nlt0","qualname":"<m128d>::cmp_nlt0","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lane 0: `!(self < rhs)`, bool-ish output\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":91870,"byte_end":91887,"line_start":1729,"line_end":1729,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":91891,"byte_end":91902,"line_start":1730,"line_end":1730,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":519},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":92119,"byte_end":92131,"line_start":1738,"line_end":1738,"column_start":10,"column_end":22},"name":"cmp_ordinary","qualname":"<m128d>::cmp_ordinary","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `self.not_nan() & rhs.not_nan()`, bool-ish output\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":92076,"byte_end":92093,"line_start":1736,"line_end":1736,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":92097,"byte_end":92108,"line_start":1737,"line_end":1737,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":520},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":92328,"byte_end":92341,"line_start":1745,"line_end":1745,"column_start":10,"column_end":23},"name":"cmp_ordinary0","qualname":"<m128d>::cmp_ordinary0","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lane 0: `self.not_nan() & rhs.not_nan()`, bool-ish output\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":92285,"byte_end":92302,"line_start":1743,"line_end":1743,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":92306,"byte_end":92317,"line_start":1744,"line_end":1744,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":521},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":92537,"byte_end":92544,"line_start":1752,"line_end":1752,"column_start":10,"column_end":17},"name":"cmp_nan","qualname":"<m128d>::cmp_nan","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `self.is_nan() | rhs.is_nan()`, bool-ish output\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":92494,"byte_end":92511,"line_start":1750,"line_end":1750,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":92515,"byte_end":92526,"line_start":1751,"line_end":1751,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":522},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":92741,"byte_end":92749,"line_start":1759,"line_end":1759,"column_start":10,"column_end":18},"name":"cmp_nan0","qualname":"<m128d>::cmp_nan0","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lane 0: `self.is_nan() | rhs.is_nan()`, bool-ish output\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":92698,"byte_end":92715,"line_start":1757,"line_end":1757,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":92719,"byte_end":92730,"line_start":1758,"line_end":1758,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":523},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":92934,"byte_end":92942,"line_start":1766,"line_end":1766,"column_start":10,"column_end":18},"name":"cmpi_eq0","qualname":"<m128d>::cmpi_eq0","value":"fn (self, rhs: Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Lane 0: `self == rhs`, 0 or 1 `i32` output.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":92891,"byte_end":92908,"line_start":1764,"line_end":1764,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":92912,"byte_end":92923,"line_start":1765,"line_end":1765,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":524},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":93118,"byte_end":93126,"line_start":1773,"line_end":1773,"column_start":10,"column_end":18},"name":"cmpi_ge0","qualname":"<m128d>::cmpi_ge0","value":"fn (self, rhs: Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Lane 0: `self >= rhs`, 0 or 1 `i32` output.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":93075,"byte_end":93092,"line_start":1771,"line_end":1771,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":93096,"byte_end":93107,"line_start":1772,"line_end":1772,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":525},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":93301,"byte_end":93309,"line_start":1780,"line_end":1780,"column_start":10,"column_end":18},"name":"cmpi_gt0","qualname":"<m128d>::cmpi_gt0","value":"fn (self, rhs: Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Lane 0: `self > rhs`, 0 or 1 `i32` output.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":93258,"byte_end":93275,"line_start":1778,"line_end":1778,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":93279,"byte_end":93290,"line_start":1779,"line_end":1779,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":526},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":93485,"byte_end":93493,"line_start":1787,"line_end":1787,"column_start":10,"column_end":18},"name":"cmpi_le0","qualname":"<m128d>::cmpi_le0","value":"fn (self, rhs: Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Lane 0: `self <= rhs`, 0 or 1 `i32` output.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":93442,"byte_end":93459,"line_start":1785,"line_end":1785,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":93463,"byte_end":93474,"line_start":1786,"line_end":1786,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":527},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":93668,"byte_end":93676,"line_start":1794,"line_end":1794,"column_start":10,"column_end":18},"name":"cmpi_lt0","qualname":"<m128d>::cmpi_lt0","value":"fn (self, rhs: Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Lane 0: `self < rhs`, 0 or 1 `i32` output.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":93625,"byte_end":93642,"line_start":1792,"line_end":1792,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":93646,"byte_end":93657,"line_start":1793,"line_end":1793,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":528},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":93852,"byte_end":93860,"line_start":1801,"line_end":1801,"column_start":10,"column_end":18},"name":"cmpi_ne0","qualname":"<m128d>::cmpi_ne0","value":"fn (self, rhs: Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Lane 0: `self != rhs`, 0 or 1 `i32` output.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":93809,"byte_end":93826,"line_start":1799,"line_end":1799,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":93830,"byte_end":93841,"line_start":1800,"line_end":1800,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":529},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":94067,"byte_end":94078,"line_start":1808,"line_end":1808,"column_start":10,"column_end":21},"name":"round_i32x4","qualname":"<m128d>::round_i32x4","value":"fn (self) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Round the lanes to `i32` and place as the two lower lanes of an [`m128i`]\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":94024,"byte_end":94041,"line_start":1806,"line_end":1806,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":94045,"byte_end":94056,"line_start":1807,"line_end":1807,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":530},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":94276,"byte_end":94287,"line_start":1815,"line_end":1815,"column_start":10,"column_end":21},"name":"round_f32x4","qualname":"<m128d>::round_f32x4","value":"fn (self) -> m128","parent":null,"children":[],"decl_id":null,"docs":" Round the lanes to `f32` and place as the two lower lanes of an [`m128`]\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":94233,"byte_end":94250,"line_start":1813,"line_end":1813,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":94254,"byte_end":94265,"line_start":1814,"line_end":1814,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":531},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":94442,"byte_end":94450,"line_start":1822,"line_end":1822,"column_start":10,"column_end":18},"name":"extract0","qualname":"<m128d>::extract0","value":"fn (self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Get the lower lane value as `f64`.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":94399,"byte_end":94416,"line_start":1820,"line_end":1820,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":94420,"byte_end":94431,"line_start":1821,"line_end":1821,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":532},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":94605,"byte_end":94623,"line_start":1829,"line_end":1829,"column_start":10,"column_end":28},"name":"round_i32_extract0","qualname":"<m128d>::round_i32_extract0","value":"fn (self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Round lower lane to `i32` and return it.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":94562,"byte_end":94579,"line_start":1827,"line_end":1827,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":94583,"byte_end":94594,"line_start":1828,"line_end":1828,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":533},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":94813,"byte_end":94831,"line_start":1837,"line_end":1837,"column_start":10,"column_end":28},"name":"round_i64_extract0","qualname":"<m128d>::round_i64_extract0","value":"fn (self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Round lower lane to `i64` and return it.\n","sig":null,"attributes":[{"value":"cfg(target_arch = \"x86_64\")","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":94736,"byte_end":94766,"line_start":1834,"line_end":1834,"column_start":3,"column_end":33}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":94770,"byte_end":94787,"line_start":1835,"line_end":1835,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":94791,"byte_end":94802,"line_start":1836,"line_end":1836,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":534},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":95009,"byte_end":95026,"line_start":1844,"line_end":1844,"column_start":10,"column_end":27},"name":"replace0_with_i32","qualname":"<m128d>::replace0_with_i32","value":"fn (self, rhs: i32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Replace lane 0 with `i32` rounded to `f64`, lane 1 unaffected.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":94966,"byte_end":94983,"line_start":1842,"line_end":1842,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":94987,"byte_end":94998,"line_start":1843,"line_end":1843,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":535},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":95260,"byte_end":95277,"line_start":1852,"line_end":1852,"column_start":10,"column_end":27},"name":"replace0_with_i64","qualname":"<m128d>::replace0_with_i64","value":"fn (self, rhs: i64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Replace lane 0 with `i64` rounded to `f64`, lane 1 unaffected.\n","sig":null,"attributes":[{"value":"cfg(target_arch = \"x86_64\")","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":95183,"byte_end":95213,"line_start":1849,"line_end":1849,"column_start":3,"column_end":33}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":95217,"byte_end":95234,"line_start":1850,"line_end":1850,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":95238,"byte_end":95249,"line_start":1851,"line_end":1851,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":536},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":95487,"byte_end":95504,"line_start":1859,"line_end":1859,"column_start":10,"column_end":27},"name":"replace0_with_f32","qualname":"<m128d>::replace0_with_f32","value":"fn (self, rhs: m128) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Replace lane 0 with `rhs` low `f32` rounded to `f64`, lane 1 unaffected.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":95444,"byte_end":95461,"line_start":1857,"line_end":1857,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":95465,"byte_end":95476,"line_start":1858,"line_end":1858,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":537},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":95726,"byte_end":95740,"line_start":1867,"line_end":1867,"column_start":10,"column_end":24},"name":"truncate_i32x4","qualname":"<m128d>::truncate_i32x4","value":"fn (self) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Truncate the lanes to `i32` and place as the two lower lanes of an\n [`m128i`]\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":95683,"byte_end":95700,"line_start":1865,"line_end":1865,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":95704,"byte_end":95715,"line_start":1866,"line_end":1866,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":538},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":95906,"byte_end":95919,"line_start":1874,"line_end":1874,"column_start":10,"column_end":23},"name":"truncate0_i32","qualname":"<m128d>::truncate0_i32","value":"fn (self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Truncate lane 0 to `i32` and return it.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":95863,"byte_end":95880,"line_start":1872,"line_end":1872,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":95884,"byte_end":95895,"line_start":1873,"line_end":1873,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":539},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":96109,"byte_end":96122,"line_start":1882,"line_end":1882,"column_start":10,"column_end":23},"name":"truncate0_i64","qualname":"<m128d>::truncate0_i64","value":"fn (self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Truncate lane 0 to `i64` and return it.\n","sig":null,"attributes":[{"value":"cfg(target_arch = \"x86_64\")","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":96032,"byte_end":96062,"line_start":1879,"line_end":1879,"column_start":3,"column_end":33}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":96066,"byte_end":96083,"line_start":1880,"line_end":1880,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":96087,"byte_end":96098,"line_start":1881,"line_end":1881,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":540},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":96282,"byte_end":96286,"line_start":1889,"line_end":1889,"column_start":10,"column_end":14},"name":"div0","qualname":"<m128d>::div0","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Divides the low lane, high lane unaffected.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":96239,"byte_end":96256,"line_start":1887,"line_end":1887,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":96260,"byte_end":96271,"line_start":1888,"line_end":1888,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":541},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":96539,"byte_end":96543,"line_start":1898,"line_end":1898,"column_start":10,"column_end":14},"name":"load","qualname":"<m128d>::load","value":"fn (addr: &Align16<[f64; 2]>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Load aligned `f64` array data.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":96496,"byte_end":96513,"line_start":1896,"line_end":1896,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":96517,"byte_end":96528,"line_start":1897,"line_end":1897,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":544},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":96810,"byte_end":96828,"line_start":1906,"line_end":1906,"column_start":10,"column_end":28},"name":"load_aligned_splat","qualname":"<m128d>::load_aligned_splat","value":"fn (addr: &Align16<f64>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Load the 16-byte aligned `f64` address into both lanes.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":96767,"byte_end":96784,"line_start":1904,"line_end":1904,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":96788,"byte_end":96799,"line_start":1905,"line_end":1905,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":545},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":97139,"byte_end":97144,"line_start":1915,"line_end":1915,"column_start":10,"column_end":15},"name":"load0","qualname":"<m128d>::load0","value":"fn (addr: &f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Load the `f64` addressed into the low lane, high lane `0.0`.\n","sig":null,"attributes":[{"value":"allow(clippy::trivially_copy_pass_by_ref)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":97048,"byte_end":97092,"line_start":1912,"line_end":1912,"column_start":3,"column_end":47}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":97096,"byte_end":97113,"line_start":1913,"line_end":1913,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":97117,"byte_end":97128,"line_start":1914,"line_end":1914,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":546},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":97381,"byte_end":97393,"line_start":1923,"line_end":1923,"column_start":10,"column_end":22},"name":"replace_high","qualname":"<m128d>::replace_high","value":"fn (self, addr: &f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Replace high lane with the float referenced, low lane unaffected.\n","sig":null,"attributes":[{"value":"allow(clippy::trivially_copy_pass_by_ref)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":97290,"byte_end":97334,"line_start":1920,"line_end":1920,"column_start":3,"column_end":47}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":97338,"byte_end":97355,"line_start":1921,"line_end":1921,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":97359,"byte_end":97370,"line_start":1922,"line_end":1922,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":547},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":97645,"byte_end":97656,"line_start":1931,"line_end":1931,"column_start":10,"column_end":21},"name":"replace_low","qualname":"<m128d>::replace_low","value":"fn (self, addr: &f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Replace low lane with the float referenced, high lane unaffected.\n","sig":null,"attributes":[{"value":"allow(clippy::trivially_copy_pass_by_ref)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":97554,"byte_end":97598,"line_start":1928,"line_end":1928,"column_start":3,"column_end":47}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":97602,"byte_end":97619,"line_start":1929,"line_end":1929,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":97623,"byte_end":97634,"line_start":1930,"line_end":1930,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":548},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":97928,"byte_end":97940,"line_start":1940,"line_end":1940,"column_start":10,"column_end":22},"name":"load_reverse","qualname":"<m128d>::load_reverse","value":"fn (addr: &Align16<[f64; 2]>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Load aligned `f64` array data in reverse order.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":97885,"byte_end":97902,"line_start":1938,"line_end":1938,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":97906,"byte_end":97917,"line_start":1939,"line_end":1939,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":551},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":98291,"byte_end":98305,"line_start":1950,"line_end":1950,"column_start":10,"column_end":24},"name":"load_unaligned","qualname":"<m128d>::load_unaligned","value":"fn (addr: &[f64; 2]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Load `f64` array data without alignment requirement.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":98248,"byte_end":98265,"line_start":1948,"line_end":1948,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":98269,"byte_end":98280,"line_start":1949,"line_end":1949,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":554},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":98517,"byte_end":98520,"line_start":1958,"line_end":1958,"column_start":10,"column_end":13},"name":"max","qualname":"<m128d>::max","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise maximum.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":98474,"byte_end":98491,"line_start":1956,"line_end":1956,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":98495,"byte_end":98506,"line_start":1957,"line_end":1957,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":555},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":98696,"byte_end":98700,"line_start":1965,"line_end":1965,"column_start":10,"column_end":14},"name":"max0","qualname":"<m128d>::max0","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lane 0 maximum, other lanes are `self`.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":98653,"byte_end":98670,"line_start":1963,"line_end":1963,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":98674,"byte_end":98685,"line_start":1964,"line_end":1964,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":556},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":98854,"byte_end":98857,"line_start":1972,"line_end":1972,"column_start":10,"column_end":13},"name":"min","qualname":"<m128d>::min","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise minimum.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":98811,"byte_end":98828,"line_start":1970,"line_end":1970,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":98832,"byte_end":98843,"line_start":1971,"line_end":1971,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":557},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":99033,"byte_end":99037,"line_start":1979,"line_end":1979,"column_start":10,"column_end":14},"name":"min0","qualname":"<m128d>::min0","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lane 0 minimum, other lanes are `self`.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":98990,"byte_end":99007,"line_start":1977,"line_end":1977,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":99011,"byte_end":99022,"line_start":1978,"line_end":1978,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":558},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":99224,"byte_end":99229,"line_start":1986,"line_end":1986,"column_start":10,"column_end":15},"name":"copy0","qualname":"<m128d>::copy0","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Copies lane 0 from `rhs`, other lane is unchanged.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":99181,"byte_end":99198,"line_start":1984,"line_end":1984,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":99202,"byte_end":99213,"line_start":1985,"line_end":1985,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":559},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":99690,"byte_end":99699,"line_start":1999,"line_end":1999,"column_start":10,"column_end":19},"name":"move_mask","qualname":"<m128d>::move_mask","value":"fn (self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Assumes that this is a bool-ish mask and packs it into an `i32`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":99647,"byte_end":99664,"line_start":1997,"line_end":1997,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":99668,"byte_end":99679,"line_start":1998,"line_end":1998,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":560},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":99862,"byte_end":99866,"line_start":2006,"line_end":2006,"column_start":10,"column_end":14},"name":"mul0","qualname":"<m128d>::mul0","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Multiplies the low lane, high lane unaffected.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":99819,"byte_end":99836,"line_start":2004,"line_end":2004,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":99840,"byte_end":99851,"line_start":2005,"line_end":2005,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":561},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":100307,"byte_end":100310,"line_start":2018,"line_end":2018,"column_start":10,"column_end":13},"name":"set","qualname":"<m128d>::set","value":"fn (a: f64, b: f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set two `f64` values into an `m128d`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":100264,"byte_end":100281,"line_start":2016,"line_end":2016,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":100285,"byte_end":100296,"line_start":2017,"line_end":2017,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":562},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":100477,"byte_end":100482,"line_start":2025,"line_end":2025,"column_start":10,"column_end":15},"name":"splat","qualname":"<m128d>::splat","value":"fn (a: f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set an `f64` as the value in both lanes.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":100434,"byte_end":100451,"line_start":2023,"line_end":2023,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":100455,"byte_end":100466,"line_start":2024,"line_end":2024,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":563},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":100642,"byte_end":100646,"line_start":2032,"line_end":2032,"column_start":10,"column_end":14},"name":"set0","qualname":"<m128d>::set0","value":"fn (a: f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the `f64` as lane 0, other lane `0.0`.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":100599,"byte_end":100616,"line_start":2030,"line_end":2030,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":100620,"byte_end":100631,"line_start":2031,"line_end":2031,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":564},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":101088,"byte_end":101099,"line_start":2044,"line_end":2044,"column_start":10,"column_end":21},"name":"set_reverse","qualname":"<m128d>::set_reverse","value":"fn (a: f64, b: f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set two `f64` values into an `m128d` with reverse ordering.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":101045,"byte_end":101062,"line_start":2042,"line_end":2042,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":101066,"byte_end":101077,"line_start":2043,"line_end":2043,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":565},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":101248,"byte_end":101252,"line_start":2051,"line_end":2051,"column_start":10,"column_end":14},"name":"sqrt","qualname":"<m128d>::sqrt","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise square root.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":101205,"byte_end":101222,"line_start":2049,"line_end":2049,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":101226,"byte_end":101237,"line_start":2050,"line_end":2050,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":566},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":101454,"byte_end":101465,"line_start":2059,"line_end":2059,"column_start":10,"column_end":21},"name":"sqrt_other0","qualname":"<m128d>::sqrt_other0","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" `rhs[0]` square root copied over top of `self[0]`, `self[1]` is\n unaffected.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":101411,"byte_end":101428,"line_start":2057,"line_end":2057,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":101432,"byte_end":101443,"line_start":2058,"line_end":2058,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":567},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":101638,"byte_end":101643,"line_start":2065,"line_end":2065,"column_start":10,"column_end":15},"name":"store","qualname":"<m128d>::store","value":"fn (self, addr: &mut Align16<[f64; 2]>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Stores the data here to the aligned address given.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":101610,"byte_end":101627,"line_start":2064,"line_end":2064,"column_start":3,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":570},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":101896,"byte_end":101906,"line_start":2072,"line_end":2072,"column_start":10,"column_end":20},"name":"store0_all","qualname":"<m128d>::store0_all","value":"fn (self, addr: &mut Align16<[f64; 2]>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Stores lane 0 to both slots of the aligned address given.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":101868,"byte_end":101885,"line_start":2071,"line_end":2071,"column_start":3,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":573},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":102144,"byte_end":102153,"line_start":2079,"line_end":2079,"column_start":10,"column_end":19},"name":"store_low","qualname":"<m128d>::store_low","value":"fn (self, addr: &mut f64) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Stores the low lane to the address given.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":102116,"byte_end":102133,"line_start":2078,"line_end":2078,"column_start":3,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":574},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":102310,"byte_end":102320,"line_start":2085,"line_end":2085,"column_start":10,"column_end":20},"name":"store_high","qualname":"<m128d>::store_high","value":"fn (self, addr: &mut f64) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Stores the high lane to the address given.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":102282,"byte_end":102299,"line_start":2084,"line_end":2084,"column_start":3,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":575},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":102500,"byte_end":102513,"line_start":2091,"line_end":2091,"column_start":10,"column_end":23},"name":"store_reverse","qualname":"<m128d>::store_reverse","value":"fn (self, addr: &mut Align16<[f64; 2]>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Stores the data here to the aligned address given, reverse order.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":102472,"byte_end":102489,"line_start":2090,"line_end":2090,"column_start":3,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":578},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":102752,"byte_end":102767,"line_start":2098,"line_end":2098,"column_start":10,"column_end":25},"name":"store_unaligned","qualname":"<m128d>::store_unaligned","value":"fn (self, addr: &mut [f64; 2]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Stores the data here to the address given.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":102724,"byte_end":102741,"line_start":2097,"line_end":2097,"column_start":3,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":581},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":103006,"byte_end":103010,"line_start":2106,"line_end":2106,"column_start":10,"column_end":14},"name":"sub0","qualname":"<m128d>::sub0","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Subtracts the low lane, high lane unaffected.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":102963,"byte_end":102980,"line_start":2104,"line_end":2104,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":102984,"byte_end":102995,"line_start":2105,"line_end":2105,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":582},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":103177,"byte_end":103188,"line_start":2113,"line_end":2113,"column_start":10,"column_end":21},"name":"unpack_high","qualname":"<m128d>::unpack_high","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Gives `m128d(self[1], rhs[1])`\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":103134,"byte_end":103151,"line_start":2111,"line_end":2111,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":103155,"byte_end":103166,"line_start":2112,"line_end":2112,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":583},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":103360,"byte_end":103370,"line_start":2120,"line_end":2120,"column_start":10,"column_end":20},"name":"unpack_low","qualname":"<m128d>::unpack_low","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Gives `m128d(self[0], rhs[0])`\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":103317,"byte_end":103334,"line_start":2118,"line_end":2118,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":103338,"byte_end":103349,"line_start":2119,"line_end":2119,"column_start":3,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":584},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":103545,"byte_end":103550,"line_start":2127,"line_end":2127,"column_start":8,"column_end":13},"name":"pause","qualname":"::arch::x86_64::sse2::pause","value":"fn () -> ()","parent":null,"children":[],"decl_id":null,"docs":" Hint to the CPU that you're doing a spin-wait loop.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":103519,"byte_end":103536,"line_start":2126,"line_end":2126,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":585},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":103669,"byte_end":103680,"line_start":2133,"line_end":2133,"column_start":8,"column_end":19},"name":"cache_flush","qualname":"::arch::x86_64::sse2::cache_flush","value":"fn (ptr: *mut impl Sized) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Flushes the cache line pointed to from all levels.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":103643,"byte_end":103660,"line_start":2132,"line_end":2132,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":589},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\x86_64.rs","byte_start":10721,"byte_end":10726,"line_start":58,"line_end":58,"column_start":8,"column_end":13},"name":"rdtsc","qualname":"::arch::x86_64::rdtsc","value":"fn () -> u64","parent":null,"children":[],"decl_id":null,"docs":" As [`_rdtsc`](https://doc.rust-lang.org/core/arch/x86_64/fn._rdtsc.html).\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\x86_64.rs","byte_start":10690,"byte_end":10699,"line_start":56,"line_end":56,"column_start":1,"column_end":10}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\x86_64.rs","byte_start":10701,"byte_end":10712,"line_start":57,"line_end":57,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":595},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":124806,"byte_end":124812,"line_start":8,"line_end":8,"column_start":10,"column_end":16},"name":"andnot","qualname":"<f32x4>::andnot","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Bitwise `(!self) & rhs`\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":124771,"byte_end":124780,"line_start":6,"line_end":6,"column_start":3,"column_end":12}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":124784,"byte_end":124795,"line_start":7,"line_end":7,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":596},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":125065,"byte_end":125071,"line_start":19,"line_end":19,"column_start":10,"column_end":16},"name":"is_nan","qualname":"<f32x4>::is_nan","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise \"is the value a NaN value?\"\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":125030,"byte_end":125039,"line_start":17,"line_end":17,"column_start":3,"column_end":12}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":125043,"byte_end":125054,"line_start":18,"line_end":18,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":597},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":125627,"byte_end":125638,"line_start":43,"line_end":43,"column_start":10,"column_end":21},"name":"is_ordinary","qualname":"<f32x4>::is_ordinary","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise \"is the value a non-NaN value?\"\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":125592,"byte_end":125601,"line_start":41,"line_end":41,"column_start":3,"column_end":12}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":125605,"byte_end":125616,"line_start":42,"line_end":42,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":598},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":126659,"byte_end":126664,"line_start":75,"line_end":75,"column_start":10,"column_end":15},"name":"merge","qualname":"<f32x4>::merge","value":"fn (self, a: Self, b: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Use `self` (a boolish value) to merge `a` and `b`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":126624,"byte_end":126633,"line_start":73,"line_end":73,"column_start":3,"column_end":12}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":126637,"byte_end":126648,"line_start":74,"line_end":74,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":599},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":127087,"byte_end":127096,"line_start":91,"line_end":91,"column_start":10,"column_end":19},"name":"move_mask","qualname":"<f32x4>::move_mask","value":"fn (self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" ```rust\n use wide::f32x4;\n let a = f32x4::new(1.0, 2.0, 3.0, 4.0);\n let b = f32x4::from(2.5);\n assert_eq!(a.cmp_lt(b).move_mask(), 0b0011);\n ```\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":127052,"byte_end":127061,"line_start":89,"line_end":89,"column_start":3,"column_end":12}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":127065,"byte_end":127076,"line_start":90,"line_end":90,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":600},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":127429,"byte_end":127435,"line_start":108,"line_end":108,"column_start":10,"column_end":16},"name":"cmp_eq","qualname":"<f32x4>::cmp_eq","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `==`\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":127394,"byte_end":127403,"line_start":106,"line_end":106,"column_start":3,"column_end":12}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":127407,"byte_end":127418,"line_start":107,"line_end":107,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":601},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":127998,"byte_end":128004,"line_start":131,"line_end":131,"column_start":10,"column_end":16},"name":"cmp_ge","qualname":"<f32x4>::cmp_ge","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `>=`\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":127963,"byte_end":127972,"line_start":129,"line_end":129,"column_start":3,"column_end":12}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":127976,"byte_end":127987,"line_start":130,"line_end":130,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":602},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":128566,"byte_end":128572,"line_start":154,"line_end":154,"column_start":10,"column_end":16},"name":"cmp_gt","qualname":"<f32x4>::cmp_gt","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `>`\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":128531,"byte_end":128540,"line_start":152,"line_end":152,"column_start":3,"column_end":12}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":128544,"byte_end":128555,"line_start":153,"line_end":153,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":603},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":129134,"byte_end":129140,"line_start":177,"line_end":177,"column_start":10,"column_end":16},"name":"cmp_le","qualname":"<f32x4>::cmp_le","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `<=`\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":129099,"byte_end":129108,"line_start":175,"line_end":175,"column_start":3,"column_end":12}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":129112,"byte_end":129123,"line_start":176,"line_end":176,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":604},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":129702,"byte_end":129708,"line_start":200,"line_end":200,"column_start":10,"column_end":16},"name":"cmp_lt","qualname":"<f32x4>::cmp_lt","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `<`\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":129667,"byte_end":129676,"line_start":198,"line_end":198,"column_start":3,"column_end":12}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":129680,"byte_end":129691,"line_start":199,"line_end":199,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":605},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":130298,"byte_end":130305,"line_start":223,"line_end":223,"column_start":10,"column_end":17},"name":"cmp_nan","qualname":"<f32x4>::cmp_nan","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise \"self.is_nan() | other.is_nan()\"\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":130263,"byte_end":130272,"line_start":221,"line_end":221,"column_start":3,"column_end":12}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":130276,"byte_end":130287,"line_start":222,"line_end":222,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":606},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":130897,"byte_end":130903,"line_start":246,"line_end":246,"column_start":10,"column_end":16},"name":"cmp_ne","qualname":"<f32x4>::cmp_ne","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `!=`\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":130862,"byte_end":130871,"line_start":244,"line_end":244,"column_start":3,"column_end":12}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":130875,"byte_end":130886,"line_start":245,"line_end":245,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":607},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":131587,"byte_end":131594,"line_start":271,"line_end":271,"column_start":10,"column_end":17},"name":"cmp_nge","qualname":"<f32x4>::cmp_nge","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `!(a >= b)`","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":131552,"byte_end":131561,"line_start":269,"line_end":269,"column_start":3,"column_end":12}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":131565,"byte_end":131576,"line_start":270,"line_end":270,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":608},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":132167,"byte_end":132174,"line_start":294,"line_end":294,"column_start":10,"column_end":17},"name":"cmp_ngt","qualname":"<f32x4>::cmp_ngt","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `!(a > b)`\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":132132,"byte_end":132141,"line_start":292,"line_end":292,"column_start":3,"column_end":12}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":132145,"byte_end":132156,"line_start":293,"line_end":293,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":609},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":132747,"byte_end":132754,"line_start":317,"line_end":317,"column_start":10,"column_end":17},"name":"cmp_nle","qualname":"<f32x4>::cmp_nle","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `!(a <= b)`\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":132712,"byte_end":132721,"line_start":315,"line_end":315,"column_start":3,"column_end":12}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":132725,"byte_end":132736,"line_start":316,"line_end":316,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":610},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":133327,"byte_end":133334,"line_start":340,"line_end":340,"column_start":10,"column_end":17},"name":"cmp_nlt","qualname":"<f32x4>::cmp_nlt","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `!(a < b)`\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":133292,"byte_end":133301,"line_start":338,"line_end":338,"column_start":3,"column_end":12}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":133305,"byte_end":133316,"line_start":339,"line_end":339,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":611},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":133930,"byte_end":133934,"line_start":363,"line_end":363,"column_start":10,"column_end":14},"name":"ceil","qualname":"<f32x4>::ceil","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise ceiling (next larger whole number)\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":133895,"byte_end":133904,"line_start":361,"line_end":361,"column_start":3,"column_end":12}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":133908,"byte_end":133919,"line_start":362,"line_end":362,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":612},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":134347,"byte_end":134352,"line_start":377,"line_end":377,"column_start":10,"column_end":15},"name":"floor","qualname":"<f32x4>::floor","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise floor (next smaller whole number)\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":134312,"byte_end":134321,"line_start":375,"line_end":375,"column_start":3,"column_end":12}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":134325,"byte_end":134336,"line_start":376,"line_end":376,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":613},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":134760,"byte_end":134763,"line_start":391,"line_end":391,"column_start":10,"column_end":13},"name":"abs","qualname":"<f32x4>::abs","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise absolute value\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":134717,"byte_end":134734,"line_start":389,"line_end":389,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":134738,"byte_end":134749,"line_start":390,"line_end":390,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":614},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":134882,"byte_end":134885,"line_start":398,"line_end":398,"column_start":10,"column_end":13},"name":"cos","qualname":"<f32x4>::cos","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise cosine\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":134847,"byte_end":134856,"line_start":396,"line_end":396,"column_start":3,"column_end":12}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":134860,"byte_end":134871,"line_start":397,"line_end":397,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":615},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":135088,"byte_end":135093,"line_start":406,"line_end":406,"column_start":10,"column_end":15},"name":"round","qualname":"<f32x4>::round","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise round to nearest whole number.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":135053,"byte_end":135062,"line_start":404,"line_end":404,"column_start":3,"column_end":12}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":135066,"byte_end":135077,"line_start":405,"line_end":405,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":616},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":136123,"byte_end":136126,"line_start":433,"line_end":433,"column_start":10,"column_end":13},"name":"sin","qualname":"<f32x4>::sin","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise sine.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":136088,"byte_end":136097,"line_start":431,"line_end":431,"column_start":3,"column_end":12}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":136101,"byte_end":136112,"line_start":432,"line_end":432,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":617},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":136795,"byte_end":136802,"line_start":448,"line_end":448,"column_start":10,"column_end":17},"name":"mul_add","qualname":"<f32x4>::mul_add","value":"fn (self, b: Self, c: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Performs a \"fused multiply-add\", `(self * b) + c`","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":136760,"byte_end":136769,"line_start":446,"line_end":446,"column_start":3,"column_end":12}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":136773,"byte_end":136784,"line_start":447,"line_end":447,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":618},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":137151,"byte_end":137166,"line_start":461,"line_end":461,"column_start":10,"column_end":25},"name":"negated_mul_add","qualname":"<f32x4>::negated_mul_add","value":"fn (self, b: Self, c: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Negated `mul_add`, `c - (self * b)`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":137116,"byte_end":137125,"line_start":459,"line_end":459,"column_start":3,"column_end":12}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":137129,"byte_end":137140,"line_start":460,"line_end":460,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":619},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":137427,"byte_end":137432,"line_start":472,"line_end":472,"column_start":10,"column_end":15},"name":"recip","qualname":"<f32x4>::recip","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise reciprocal, 1.0/lane\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":137392,"byte_end":137401,"line_start":470,"line_end":470,"column_start":3,"column_end":12}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":137405,"byte_end":137416,"line_start":471,"line_end":471,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":620},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":137661,"byte_end":137664,"line_start":483,"line_end":483,"column_start":10,"column_end":13},"name":"max","qualname":"<f32x4>::max","value":"fn (self, b: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise maximum\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":137626,"byte_end":137635,"line_start":481,"line_end":481,"column_start":3,"column_end":12}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":137639,"byte_end":137650,"line_start":482,"line_end":482,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":621},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":138064,"byte_end":138067,"line_start":501,"line_end":501,"column_start":10,"column_end":13},"name":"min","qualname":"<f32x4>::min","value":"fn (self, b: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise minimum\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":138029,"byte_end":138038,"line_start":499,"line_end":499,"column_start":3,"column_end":12}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":138042,"byte_end":138053,"line_start":500,"line_end":500,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":622},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":138488,"byte_end":138497,"line_start":519,"line_end":519,"column_start":10,"column_end":19},"name":"round_i32","qualname":"<f32x4>::round_i32","value":"fn (self) -> i32x4","parent":null,"children":[],"decl_id":null,"docs":" Lanewise round and get `i32x4` output\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":138453,"byte_end":138462,"line_start":517,"line_end":517,"column_start":3,"column_end":12}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":138466,"byte_end":138477,"line_start":518,"line_end":518,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":623},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":139059,"byte_end":139068,"line_start":542,"line_end":542,"column_start":10,"column_end":19},"name":"is_finite","qualname":"<f32x4>::is_finite","value":"fn (self) -> f32x4","parent":null,"children":[],"decl_id":null,"docs":" If it's some finite value.","sig":null,"attributes":[{"value":"allow(clippy::unreadable_literal)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":138921,"byte_end":138957,"line_start":537,"line_end":537,"column_start":3,"column_end":39}},{"value":"allow(clippy::cast_possible_wrap)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":138961,"byte_end":138997,"line_start":538,"line_end":538,"column_start":3,"column_end":39}},{"value":"allow(bad_style)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":139001,"byte_end":139020,"line_start":539,"line_end":539,"column_start":3,"column_end":22}},{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":139024,"byte_end":139033,"line_start":540,"line_end":540,"column_start":3,"column_end":12}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":139037,"byte_end":139048,"line_start":541,"line_end":541,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":626},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":140057,"byte_end":140067,"line_start":575,"line_end":575,"column_start":10,"column_end":20},"name":"cast_i32x4","qualname":"<f32x4>::cast_i32x4","value":"fn (self) -> i32x4","parent":null,"children":[],"decl_id":null,"docs":" Cast directly to `i32x4` (no change in bit pattern).\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":140014,"byte_end":140031,"line_start":573,"line_end":573,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":140035,"byte_end":140046,"line_start":574,"line_end":574,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":627},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":140316,"byte_end":140324,"line_start":586,"line_end":586,"column_start":10,"column_end":18},"name":"copysign","qualname":"<f32x4>::copysign","value":"fn (self, b: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Copy the sign of `b` onto the value of `self`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":140281,"byte_end":140290,"line_start":584,"line_end":584,"column_start":3,"column_end":12}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":140294,"byte_end":140305,"line_start":585,"line_end":585,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":628},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":140482,"byte_end":140487,"line_start":593,"line_end":593,"column_start":10,"column_end":15},"name":"clamp","qualname":"<f32x4>::clamp","value":"fn (self, min: Self, max: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise clamp to a per-lane min and max.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":140447,"byte_end":140456,"line_start":591,"line_end":591,"column_start":3,"column_end":12}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":140460,"byte_end":140471,"line_start":592,"line_end":592,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":629},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":140658,"byte_end":140664,"line_start":600,"line_end":600,"column_start":10,"column_end":16},"name":"signum","qualname":"<f32x4>::signum","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise sign-number (-1.0 if < 0.0, otherwise 1.0)\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":140623,"byte_end":140632,"line_start":598,"line_end":598,"column_start":3,"column_end":12}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":140636,"byte_end":140647,"line_start":599,"line_end":599,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":630},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":140813,"byte_end":140816,"line_start":607,"line_end":607,"column_start":10,"column_end":13},"name":"tan","qualname":"<f32x4>::tan","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise tangent\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":140778,"byte_end":140787,"line_start":605,"line_end":605,"column_start":3,"column_end":12}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":140791,"byte_end":140802,"line_start":606,"line_end":606,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":632},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":141840,"byte_end":141847,"line_start":638,"line_end":638,"column_start":10,"column_end":17},"name":"sin_cos","qualname":"<f32x4>::sin_cos","value":"fn (self) -> (Self, Self)","parent":null,"children":[],"decl_id":null,"docs":" Sine and Cosine as a single operation.\n","sig":null,"attributes":[{"value":"allow(clippy::unreadable_literal)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":141618,"byte_end":141654,"line_start":632,"line_end":632,"column_start":3,"column_end":39}},{"value":"allow(clippy::excessive_precision)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":141658,"byte_end":141695,"line_start":633,"line_end":633,"column_start":3,"column_end":40}},{"value":"allow(clippy::many_single_char_names)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":141699,"byte_end":141739,"line_start":634,"line_end":634,"column_start":3,"column_end":43}},{"value":"allow(bad_style)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":141743,"byte_end":141762,"line_start":635,"line_end":635,"column_start":3,"column_end":22}},{"value":"allow(clippy::missing_inline_in_public_items)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":141766,"byte_end":141814,"line_start":636,"line_end":636,"column_start":3,"column_end":51}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":141818,"byte_end":141829,"line_start":637,"line_end":637,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":633},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":144178,"byte_end":144188,"line_start":703,"line_end":703,"column_start":10,"column_end":20},"name":"to_degrees","qualname":"<f32x4>::to_degrees","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise radians -> degrees.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":144062,"byte_end":144071,"line_start":699,"line_end":699,"column_start":3,"column_end":12}},{"value":"allow(clippy::unreadable_literal)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":144075,"byte_end":144111,"line_start":700,"line_end":700,"column_start":3,"column_end":39}},{"value":"allow(clippy::excessive_precision)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":144115,"byte_end":144152,"line_start":701,"line_end":701,"column_start":3,"column_end":40}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":144156,"byte_end":144167,"line_start":702,"line_end":702,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":634},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":144420,"byte_end":144430,"line_start":713,"line_end":713,"column_start":10,"column_end":20},"name":"to_radians","qualname":"<f32x4>::to_radians","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise degrees -> radians.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":144385,"byte_end":144394,"line_start":711,"line_end":711,"column_start":3,"column_end":12}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":144398,"byte_end":144409,"line_start":712,"line_end":712,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":635},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":144651,"byte_end":144656,"line_start":723,"line_end":723,"column_start":10,"column_end":15},"name":"fract","qualname":"<f32x4>::fract","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise fractional part.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":144616,"byte_end":144625,"line_start":721,"line_end":721,"column_start":3,"column_end":12}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":144629,"byte_end":144640,"line_start":722,"line_end":722,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":636},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":144764,"byte_end":144768,"line_start":730,"line_end":730,"column_start":10,"column_end":14},"name":"sqrt","qualname":"<f32x4>::sqrt","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise sqrt\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":144729,"byte_end":144738,"line_start":728,"line_end":728,"column_start":3,"column_end":12}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":144742,"byte_end":144753,"line_start":729,"line_end":729,"column_start":3,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1012},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":105330,"byte_end":105335,"line_start":10,"line_end":10,"column_start":16,"column_end":21},"name":"f32x4","qualname":"::m_f32x4::f32x4","value":"f32x4 {  }","parent":null,"children":[{"krate":0,"index":1013}],"decl_id":null,"docs":" Four `f32` values packed together.\n","sig":null,"attributes":[{"value":"repr(C, align(16))","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":105292,"byte_end":105313,"line_start":9,"line_end":9,"column_start":5,"column_end":26}}]},{"kind":"Union","id":{"krate":0,"index":745},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":105745,"byte_end":105765,"line_start":28,"line_end":28,"column_start":11,"column_end":31},"name":"ConstUnionHack_f32x4","qualname":"::m_f32x4::ConstUnionHack_f32x4","value":"ConstUnionHack_f32x4 { narrow_arr, wide_thing, u, i32_arr }","parent":null,"children":[{"krate":0,"index":746},{"krate":0,"index":748},{"krate":0,"index":749},{"krate":0,"index":750}],"decl_id":null,"docs":" Lets us declare `f32x4` values in a `const` context. Otherwise useless.\n \n See the [`const_f32_as_f32x4`] macro.\n","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":105656,"byte_end":105686,"line_start":25,"line_end":25,"column_start":1,"column_end":31}},{"value":"repr(C, align(16))","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":105688,"byte_end":105709,"line_start":26,"line_end":26,"column_start":1,"column_end":22}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":105711,"byte_end":105733,"line_start":27,"line_end":27,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":746},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":105775,"byte_end":105785,"line_start":29,"line_end":29,"column_start":7,"column_end":17},"name":"narrow_arr","qualname":"::m_f32x4::ConstUnionHack_f32x4::narrow_arr","value":"[f32; _]","parent":{"krate":0,"index":745},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":748},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":105804,"byte_end":105814,"line_start":30,"line_end":30,"column_start":7,"column_end":17},"name":"wide_thing","qualname":"::m_f32x4::ConstUnionHack_f32x4::wide_thing","value":"m_f32x4::f32x4","parent":{"krate":0,"index":745},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":749},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":105830,"byte_end":105831,"line_start":31,"line_end":31,"column_start":7,"column_end":8},"name":"u","qualname":"::m_f32x4::ConstUnionHack_f32x4::u","value":"u128","parent":{"krate":0,"index":745},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":750},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":105846,"byte_end":105853,"line_start":32,"line_end":32,"column_start":7,"column_end":14},"name":"i32_arr","qualname":"::m_f32x4::ConstUnionHack_f32x4::i32_arr","value":"[i32; _]","parent":{"krate":0,"index":745},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1014},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":107508,"byte_end":107515,"line_start":99,"line_end":99,"column_start":9,"column_end":16},"name":"EPSILON","qualname":"::m_f32x4::f32x4::EPSILON","value":"f32x4","parent":{"krate":0,"index":753},"children":[],"decl_id":null,"docs":" Machine epsilon value for `f32`.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1015},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":107611,"byte_end":107619,"line_start":104,"line_end":104,"column_start":9,"column_end":17},"name":"INFINITY","qualname":"::m_f32x4::f32x4::INFINITY","value":"f32x4","parent":{"krate":0,"index":753},"children":[],"decl_id":null,"docs":" Positive Infinity (∞).\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1016},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":107719,"byte_end":107722,"line_start":109,"line_end":109,"column_start":9,"column_end":12},"name":"MAX","qualname":"::m_f32x4::f32x4::MAX","value":"f32x4","parent":{"krate":0,"index":753},"children":[],"decl_id":null,"docs":" Largest finite `f32` value.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1017},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":107818,"byte_end":107821,"line_start":114,"line_end":114,"column_start":9,"column_end":12},"name":"MIN","qualname":"::m_f32x4::f32x4::MIN","value":"f32x4","parent":{"krate":0,"index":753},"children":[],"decl_id":null,"docs":" Smallest finite `f32` value.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1018},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":107926,"byte_end":107938,"line_start":119,"line_end":119,"column_start":9,"column_end":21},"name":"MIN_POSITIVE","qualname":"::m_f32x4::f32x4::MIN_POSITIVE","value":"f32x4","parent":{"krate":0,"index":753},"children":[],"decl_id":null,"docs":" Smallest positive normal `f32` value.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1019},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":108167,"byte_end":108170,"line_start":127,"line_end":127,"column_start":9,"column_end":12},"name":"NAN","qualname":"::m_f32x4::f32x4::NAN","value":"f32x4","parent":{"krate":0,"index":753},"children":[],"decl_id":null,"docs":" Not a Number (NaN).","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1020},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":108263,"byte_end":108275,"line_start":132,"line_end":132,"column_start":9,"column_end":21},"name":"NEG_INFINITY","qualname":"::m_f32x4::f32x4::NEG_INFINITY","value":"f32x4","parent":{"krate":0,"index":753},"children":[],"decl_id":null,"docs":" Negative infinity (-∞).\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1021},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":108408,"byte_end":108409,"line_start":141,"line_end":141,"column_start":9,"column_end":10},"name":"E","qualname":"::m_f32x4::f32x4::E","value":"f32x4","parent":{"krate":0,"index":753},"children":[],"decl_id":null,"docs":" Euler's number (e)\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1022},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":108487,"byte_end":108496,"line_start":146,"line_end":146,"column_start":9,"column_end":18},"name":"FRAC_1_PI","qualname":"::m_f32x4::f32x4::FRAC_1_PI","value":"f32x4","parent":{"krate":0,"index":753},"children":[],"decl_id":null,"docs":" 1/π\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1023},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":108582,"byte_end":108591,"line_start":151,"line_end":151,"column_start":9,"column_end":18},"name":"FRAC_2_PI","qualname":"::m_f32x4::f32x4::FRAC_2_PI","value":"f32x4","parent":{"krate":0,"index":753},"children":[],"decl_id":null,"docs":" 2/π\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1024},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":108683,"byte_end":108697,"line_start":156,"line_end":156,"column_start":9,"column_end":23},"name":"FRAC_2_SQRT_PI","qualname":"::m_f32x4::f32x4::FRAC_2_SQRT_PI","value":"f32x4","parent":{"krate":0,"index":753},"children":[],"decl_id":null,"docs":" 2/sqrt(π)\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1025},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":108793,"byte_end":108806,"line_start":161,"line_end":161,"column_start":9,"column_end":22},"name":"FRAC_1_SQRT_2","qualname":"::m_f32x4::f32x4::FRAC_1_SQRT_2","value":"f32x4","parent":{"krate":0,"index":753},"children":[],"decl_id":null,"docs":" 1/sqrt(2)\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1026},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":108896,"byte_end":108905,"line_start":166,"line_end":166,"column_start":9,"column_end":18},"name":"FRAC_PI_2","qualname":"::m_f32x4::f32x4::FRAC_PI_2","value":"f32x4","parent":{"krate":0,"index":753},"children":[],"decl_id":null,"docs":" π/2\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1027},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":108991,"byte_end":109000,"line_start":171,"line_end":171,"column_start":9,"column_end":18},"name":"FRAC_PI_3","qualname":"::m_f32x4::f32x4::FRAC_PI_3","value":"f32x4","parent":{"krate":0,"index":753},"children":[],"decl_id":null,"docs":" π/3\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1028},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":109086,"byte_end":109095,"line_start":176,"line_end":176,"column_start":9,"column_end":18},"name":"FRAC_PI_4","qualname":"::m_f32x4::f32x4::FRAC_PI_4","value":"f32x4","parent":{"krate":0,"index":753},"children":[],"decl_id":null,"docs":" π/4\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1029},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":109181,"byte_end":109190,"line_start":181,"line_end":181,"column_start":9,"column_end":18},"name":"FRAC_PI_6","qualname":"::m_f32x4::f32x4::FRAC_PI_6","value":"f32x4","parent":{"krate":0,"index":753},"children":[],"decl_id":null,"docs":" π/6\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1030},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":109276,"byte_end":109285,"line_start":186,"line_end":186,"column_start":9,"column_end":18},"name":"FRAC_PI_8","qualname":"::m_f32x4::f32x4::FRAC_PI_8","value":"f32x4","parent":{"krate":0,"index":753},"children":[],"decl_id":null,"docs":" π/8\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1031},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":109372,"byte_end":109376,"line_start":191,"line_end":191,"column_start":9,"column_end":13},"name":"LN_2","qualname":"::m_f32x4::f32x4::LN_2","value":"f32x4","parent":{"krate":0,"index":753},"children":[],"decl_id":null,"docs":" ln(2)\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1032},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":109459,"byte_end":109464,"line_start":196,"line_end":196,"column_start":9,"column_end":14},"name":"LN_10","qualname":"::m_f32x4::f32x4::LN_10","value":"f32x4","parent":{"krate":0,"index":753},"children":[],"decl_id":null,"docs":" ln(10)\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1033},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":109549,"byte_end":109555,"line_start":201,"line_end":201,"column_start":9,"column_end":15},"name":"LOG2_E","qualname":"::m_f32x4::f32x4::LOG2_E","value":"f32x4","parent":{"krate":0,"index":753},"children":[],"decl_id":null,"docs":" log2(e)\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1034},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":109642,"byte_end":109649,"line_start":206,"line_end":206,"column_start":9,"column_end":16},"name":"LOG10_E","qualname":"::m_f32x4::f32x4::LOG10_E","value":"f32x4","parent":{"krate":0,"index":753},"children":[],"decl_id":null,"docs":" log10(e)\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1035},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":109754,"byte_end":109756,"line_start":211,"line_end":211,"column_start":9,"column_end":11},"name":"PI","qualname":"::m_f32x4::f32x4::PI","value":"f32x4","parent":{"krate":0,"index":753},"children":[],"decl_id":null,"docs":" Archimedes' constant (π)\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1036},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":109838,"byte_end":109844,"line_start":216,"line_end":216,"column_start":9,"column_end":15},"name":"SQRT_2","qualname":"::m_f32x4::f32x4::SQRT_2","value":"f32x4","parent":{"krate":0,"index":753},"children":[],"decl_id":null,"docs":" sqrt(2)\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":754},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":109944,"byte_end":109959,"line_start":224,"line_end":224,"column_start":13,"column_end":28},"name":"ALL_BITS_ACTIVE","qualname":"::m_f32x4::f32x4::ALL_BITS_ACTIVE","value":"f32x4","parent":{"krate":0,"index":753},"children":[],"decl_id":null,"docs":" All bits active.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":755},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":110109,"byte_end":110124,"line_start":230,"line_end":230,"column_start":13,"column_end":28},"name":"ALL_EXCEPT_SIGN","qualname":"::m_f32x4::f32x4::ALL_EXCEPT_SIGN","value":"f32x4","parent":{"krate":0,"index":753},"children":[],"decl_id":null,"docs":" All bits active.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1037},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":110403,"byte_end":110407,"line_start":244,"line_end":244,"column_start":9,"column_end":13},"name":"ZERO","qualname":"::m_f32x4::f32x4::ZERO","value":"f32x4","parent":{"krate":0,"index":753},"children":[],"decl_id":null,"docs":" 0.0\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1038},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":110468,"byte_end":110481,"line_start":249,"line_end":249,"column_start":9,"column_end":22},"name":"NEGATIVE_ZERO","qualname":"::m_f32x4::f32x4::NEGATIVE_ZERO","value":"f32x4","parent":{"krate":0,"index":753},"children":[],"decl_id":null,"docs":" -0.0\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1039},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":110542,"byte_end":110546,"line_start":254,"line_end":254,"column_start":9,"column_end":13},"name":"HALF","qualname":"::m_f32x4::f32x4::HALF","value":"f32x4","parent":{"krate":0,"index":753},"children":[],"decl_id":null,"docs":" 0.5\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1040},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":110606,"byte_end":110609,"line_start":259,"line_end":259,"column_start":9,"column_end":12},"name":"ONE","qualname":"::m_f32x4::f32x4::ONE","value":"f32x4","parent":{"krate":0,"index":753},"children":[],"decl_id":null,"docs":" 1.0\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1041},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":110669,"byte_end":110681,"line_start":264,"line_end":264,"column_start":9,"column_end":21},"name":"NEGATIVE_ONE","qualname":"::m_f32x4::f32x4::NEGATIVE_ONE","value":"f32x4","parent":{"krate":0,"index":753},"children":[],"decl_id":null,"docs":" 1.0\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1042},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":110783,"byte_end":110789,"line_start":269,"line_end":269,"column_start":9,"column_end":15},"name":"TWO_PI","qualname":"::m_f32x4::f32x4::TWO_PI","value":"f32x4","parent":{"krate":0,"index":753},"children":[],"decl_id":null,"docs":" 2.0 * π, the number of radians in a circle.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":757},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":110918,"byte_end":110921,"line_start":277,"line_end":277,"column_start":10,"column_end":13},"name":"new","qualname":"<f32x4>::new","value":"fn (a: f32, b: f32, c: f32, d: f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `f32x4`.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":110875,"byte_end":110892,"line_start":275,"line_end":275,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":110896,"byte_end":110907,"line_start":276,"line_end":276,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":765},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":112407,"byte_end":112411,"line_start":339,"line_end":339,"column_start":10,"column_end":14},"name":"exp2","qualname":"<f32x4>::exp2","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":112347,"byte_end":112356,"line_start":337,"line_end":337,"column_start":3,"column_end":12}},{"value":"cfg(feature = \"extern_crate_std\")","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":112360,"byte_end":112396,"line_start":338,"line_end":338,"column_start":3,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":766},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":112855,"byte_end":112858,"line_start":354,"line_end":354,"column_start":10,"column_end":13},"name":"exp","qualname":"<f32x4>::exp","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":112795,"byte_end":112804,"line_start":352,"line_end":352,"column_start":3,"column_end":12}},{"value":"cfg(feature = \"extern_crate_std\")","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":112808,"byte_end":112844,"line_start":353,"line_end":353,"column_start":3,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":767},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":113293,"byte_end":113298,"line_start":369,"line_end":369,"column_start":10,"column_end":15},"name":"log10","qualname":"<f32x4>::log10","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":113233,"byte_end":113242,"line_start":367,"line_end":367,"column_start":3,"column_end":12}},{"value":"cfg(feature = \"extern_crate_std\")","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":113246,"byte_end":113282,"line_start":368,"line_end":368,"column_start":3,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":768},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":113751,"byte_end":113755,"line_start":384,"line_end":384,"column_start":10,"column_end":14},"name":"log2","qualname":"<f32x4>::log2","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":113691,"byte_end":113700,"line_start":382,"line_end":382,"column_start":3,"column_end":12}},{"value":"cfg(feature = \"extern_crate_std\")","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":113704,"byte_end":113740,"line_start":383,"line_end":383,"column_start":3,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":769},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":114211,"byte_end":114216,"line_start":400,"line_end":400,"column_start":10,"column_end":15},"name":"trunc","qualname":"<f32x4>::trunc","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Truncate the fractional part.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":114176,"byte_end":114185,"line_start":398,"line_end":398,"column_start":3,"column_end":12}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":114189,"byte_end":114200,"line_start":399,"line_end":399,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":770},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":114888,"byte_end":114890,"line_start":420,"line_end":420,"column_start":10,"column_end":12},"name":"ln","qualname":"<f32x4>::ln","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":114813,"byte_end":114822,"line_start":417,"line_end":417,"column_start":3,"column_end":12}},{"value":"cfg(feature = \"extern_crate_std\")","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":114826,"byte_end":114862,"line_start":418,"line_end":418,"column_start":3,"column_end":39}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":114866,"byte_end":114877,"line_start":419,"line_end":419,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":771},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":115321,"byte_end":115325,"line_start":435,"line_end":435,"column_start":10,"column_end":14},"name":"powf","qualname":"<f32x4>::powf","value":"fn (self, b: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":115261,"byte_end":115270,"line_start":433,"line_end":433,"column_start":3,"column_end":12}},{"value":"cfg(feature = \"extern_crate_std\")","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":115274,"byte_end":115310,"line_start":434,"line_end":434,"column_start":3,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":772},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":115956,"byte_end":115960,"line_start":460,"line_end":460,"column_start":10,"column_end":14},"name":"powi","qualname":"<f32x4>::powi","value":"fn (self, b: [i32; 4]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":115896,"byte_end":115905,"line_start":458,"line_end":458,"column_start":3,"column_end":12}},{"value":"cfg(feature = \"extern_crate_std\")","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":115909,"byte_end":115945,"line_start":459,"line_end":459,"column_start":3,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":774},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":116535,"byte_end":116543,"line_start":484,"line_end":484,"column_start":10,"column_end":18},"name":"classify","qualname":"<f32x4>::classify","value":"fn (self) -> [core::num::FpCategory; 4]","parent":null,"children":[],"decl_id":null,"docs":" As [`f32::classify`]\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":116500,"byte_end":116509,"line_start":482,"line_end":482,"column_start":3,"column_end":12}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":116513,"byte_end":116524,"line_start":483,"line_end":483,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":777},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":116776,"byte_end":116780,"line_start":492,"line_end":492,"column_start":10,"column_end":14},"name":"acos","qualname":"<f32x4>::acos","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":116701,"byte_end":116710,"line_start":489,"line_end":489,"column_start":3,"column_end":12}},{"value":"cfg(feature = \"extern_crate_std\")","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":116714,"byte_end":116750,"line_start":490,"line_end":490,"column_start":3,"column_end":39}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":116754,"byte_end":116765,"line_start":491,"line_end":491,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":779},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":116981,"byte_end":116986,"line_start":500,"line_end":500,"column_start":10,"column_end":15},"name":"acosh","qualname":"<f32x4>::acosh","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":116906,"byte_end":116915,"line_start":497,"line_end":497,"column_start":3,"column_end":12}},{"value":"cfg(feature = \"extern_crate_std\")","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":116919,"byte_end":116955,"line_start":498,"line_end":498,"column_start":3,"column_end":39}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":116959,"byte_end":116970,"line_start":499,"line_end":499,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":781},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":117176,"byte_end":117180,"line_start":507,"line_end":507,"column_start":10,"column_end":14},"name":"asin","qualname":"<f32x4>::asin","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":117116,"byte_end":117125,"line_start":505,"line_end":505,"column_start":3,"column_end":12}},{"value":"cfg(feature = \"extern_crate_std\")","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":117129,"byte_end":117165,"line_start":506,"line_end":506,"column_start":3,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":783},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":117366,"byte_end":117371,"line_start":514,"line_end":514,"column_start":10,"column_end":15},"name":"asinh","qualname":"<f32x4>::asinh","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":117306,"byte_end":117315,"line_start":512,"line_end":512,"column_start":3,"column_end":12}},{"value":"cfg(feature = \"extern_crate_std\")","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":117319,"byte_end":117355,"line_start":513,"line_end":513,"column_start":3,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":785},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":117561,"byte_end":117565,"line_start":521,"line_end":521,"column_start":10,"column_end":14},"name":"atan","qualname":"<f32x4>::atan","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":117501,"byte_end":117510,"line_start":519,"line_end":519,"column_start":3,"column_end":12}},{"value":"cfg(feature = \"extern_crate_std\")","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":117514,"byte_end":117550,"line_start":520,"line_end":520,"column_start":3,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":787},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":117751,"byte_end":117756,"line_start":528,"line_end":528,"column_start":10,"column_end":15},"name":"atanh","qualname":"<f32x4>::atanh","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":117691,"byte_end":117700,"line_start":526,"line_end":526,"column_start":3,"column_end":12}},{"value":"cfg(feature = \"extern_crate_std\")","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":117704,"byte_end":117740,"line_start":527,"line_end":527,"column_start":3,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":789},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":117946,"byte_end":117950,"line_start":535,"line_end":535,"column_start":10,"column_end":14},"name":"cbrt","qualname":"<f32x4>::cbrt","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":117886,"byte_end":117895,"line_start":533,"line_end":533,"column_start":3,"column_end":12}},{"value":"cfg(feature = \"extern_crate_std\")","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":117899,"byte_end":117935,"line_start":534,"line_end":534,"column_start":3,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":791},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":118136,"byte_end":118140,"line_start":542,"line_end":542,"column_start":10,"column_end":14},"name":"cosh","qualname":"<f32x4>::cosh","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":118076,"byte_end":118085,"line_start":540,"line_end":540,"column_start":3,"column_end":12}},{"value":"cfg(feature = \"extern_crate_std\")","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":118089,"byte_end":118125,"line_start":541,"line_end":541,"column_start":3,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":793},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":118326,"byte_end":118332,"line_start":549,"line_end":549,"column_start":10,"column_end":16},"name":"exp_m1","qualname":"<f32x4>::exp_m1","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":118266,"byte_end":118275,"line_start":547,"line_end":547,"column_start":3,"column_end":12}},{"value":"cfg(feature = \"extern_crate_std\")","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":118279,"byte_end":118315,"line_start":548,"line_end":548,"column_start":3,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":795},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":118526,"byte_end":118531,"line_start":556,"line_end":556,"column_start":10,"column_end":15},"name":"ln_1p","qualname":"<f32x4>::ln_1p","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":118466,"byte_end":118475,"line_start":554,"line_end":554,"column_start":3,"column_end":12}},{"value":"cfg(feature = \"extern_crate_std\")","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":118479,"byte_end":118515,"line_start":555,"line_end":555,"column_start":3,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":797},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":118721,"byte_end":118724,"line_start":563,"line_end":563,"column_start":10,"column_end":13},"name":"log","qualname":"<f32x4>::log","value":"fn (self, b: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":118661,"byte_end":118670,"line_start":561,"line_end":561,"column_start":3,"column_end":12}},{"value":"cfg(feature = \"extern_crate_std\")","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":118674,"byte_end":118710,"line_start":562,"line_end":562,"column_start":3,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":800},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":118963,"byte_end":118967,"line_start":571,"line_end":571,"column_start":10,"column_end":14},"name":"sinh","qualname":"<f32x4>::sinh","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":118903,"byte_end":118912,"line_start":569,"line_end":569,"column_start":3,"column_end":12}},{"value":"cfg(feature = \"extern_crate_std\")","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":118916,"byte_end":118952,"line_start":570,"line_end":570,"column_start":3,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":802},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":119153,"byte_end":119157,"line_start":578,"line_end":578,"column_start":10,"column_end":14},"name":"tanh","qualname":"<f32x4>::tanh","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":119093,"byte_end":119102,"line_start":576,"line_end":576,"column_start":3,"column_end":12}},{"value":"cfg(feature = \"extern_crate_std\")","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":119106,"byte_end":119142,"line_start":577,"line_end":577,"column_start":3,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":804},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":119343,"byte_end":119348,"line_start":585,"line_end":585,"column_start":10,"column_end":15},"name":"atan2","qualname":"<f32x4>::atan2","value":"fn (self, b: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":119283,"byte_end":119292,"line_start":583,"line_end":583,"column_start":3,"column_end":12}},{"value":"cfg(feature = \"extern_crate_std\")","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":119296,"byte_end":119332,"line_start":584,"line_end":584,"column_start":3,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":807},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":119631,"byte_end":119636,"line_start":598,"line_end":598,"column_start":10,"column_end":15},"name":"hypot","qualname":"<f32x4>::hypot","value":"fn (self, b: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":119571,"byte_end":119580,"line_start":596,"line_end":596,"column_start":3,"column_end":12}},{"value":"cfg(feature = \"extern_crate_std\")","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":119584,"byte_end":119620,"line_start":597,"line_end":597,"column_start":3,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":1055},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_i32x4.rs","byte_start":154356,"byte_end":154361,"line_start":7,"line_end":7,"column_start":16,"column_end":21},"name":"i32x4","qualname":"::m_i32x4::i32x4","value":"i32x4 {  }","parent":null,"children":[{"krate":0,"index":1056}],"decl_id":null,"docs":" Four `i32` values packed together.\n","sig":null,"attributes":[{"value":"repr(C, align(16))","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_i32x4.rs","byte_start":154318,"byte_end":154339,"line_start":6,"line_end":6,"column_start":5,"column_end":26}}]},{"kind":"Union","id":{"krate":0,"index":873},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_i32x4.rs","byte_start":155105,"byte_end":155125,"line_start":42,"line_end":42,"column_start":11,"column_end":31},"name":"ConstUnionHack_i32x4","qualname":"::m_i32x4::ConstUnionHack_i32x4","value":"ConstUnionHack_i32x4 { narrow_arr, wide_thing }","parent":null,"children":[{"krate":0,"index":874},{"krate":0,"index":876}],"decl_id":null,"docs":" Allows us to declare `i32x4` values in a `const` context. Uninteresting otherwise.","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_i32x4.rs","byte_start":155016,"byte_end":155046,"line_start":39,"line_end":39,"column_start":1,"column_end":31}},{"value":"repr(C, align(16))","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_i32x4.rs","byte_start":155048,"byte_end":155069,"line_start":40,"line_end":40,"column_start":1,"column_end":22}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_i32x4.rs","byte_start":155071,"byte_end":155093,"line_start":41,"line_end":41,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":874},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_i32x4.rs","byte_start":155135,"byte_end":155145,"line_start":43,"line_end":43,"column_start":7,"column_end":17},"name":"narrow_arr","qualname":"::m_i32x4::ConstUnionHack_i32x4::narrow_arr","value":"[i32; _]","parent":{"krate":0,"index":873},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":876},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_i32x4.rs","byte_start":155164,"byte_end":155174,"line_start":44,"line_end":44,"column_start":7,"column_end":17},"name":"wide_thing","qualname":"::m_i32x4::ConstUnionHack_i32x4::wide_thing","value":"m_i32x4::i32x4","parent":{"krate":0,"index":873},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1057},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_i32x4.rs","byte_start":156778,"byte_end":156781,"line_start":110,"line_end":110,"column_start":9,"column_end":12},"name":"MAX","qualname":"::m_i32x4::i32x4::MAX","value":"i32x4","parent":{"krate":0,"index":878},"children":[],"decl_id":null,"docs":" Maximum `i32` value.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1058},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_i32x4.rs","byte_start":156869,"byte_end":156872,"line_start":115,"line_end":115,"column_start":9,"column_end":12},"name":"MIN","qualname":"::m_i32x4::i32x4::MIN","value":"i32x4","parent":{"krate":0,"index":878},"children":[],"decl_id":null,"docs":" Minimum `i32` value.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1059},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_i32x4.rs","byte_start":156968,"byte_end":156972,"line_start":124,"line_end":124,"column_start":9,"column_end":13},"name":"ZERO","qualname":"::m_i32x4::i32x4::ZERO","value":"i32x4","parent":{"krate":0,"index":878},"children":[],"decl_id":null,"docs":" 0\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1060},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_i32x4.rs","byte_start":157032,"byte_end":157035,"line_start":129,"line_end":129,"column_start":9,"column_end":12},"name":"ONE","qualname":"::m_i32x4::i32x4::ONE","value":"i32x4","parent":{"krate":0,"index":878},"children":[],"decl_id":null,"docs":" 1\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":885},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_i32x4.rs","byte_start":157958,"byte_end":157964,"line_start":169,"line_end":169,"column_start":10,"column_end":16},"name":"cmp_eq","qualname":"<i32x4>::cmp_eq","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `==`\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_i32x4.rs","byte_start":157923,"byte_end":157932,"line_start":167,"line_end":167,"column_start":3,"column_end":12}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_i32x4.rs","byte_start":157936,"byte_end":157947,"line_start":168,"line_end":168,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":886},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_i32x4.rs","byte_start":158481,"byte_end":158487,"line_start":192,"line_end":192,"column_start":10,"column_end":16},"name":"cmp_gt","qualname":"<i32x4>::cmp_gt","value":"fn (self, rhs: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `>`\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_i32x4.rs","byte_start":158446,"byte_end":158455,"line_start":190,"line_end":190,"column_start":3,"column_end":12}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_i32x4.rs","byte_start":158459,"byte_end":158470,"line_start":191,"line_end":191,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":891},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_i32x4.rs","byte_start":159371,"byte_end":159374,"line_start":236,"line_end":236,"column_start":10,"column_end":13},"name":"new","qualname":"<i32x4>::new","value":"fn (a: i32, b: i32, c: i32, d: i32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Make a new `i32x4`\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_i32x4.rs","byte_start":159328,"byte_end":159345,"line_start":234,"line_end":234,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_i32x4.rs","byte_start":159349,"byte_end":159360,"line_start":235,"line_end":235,"column_start":3,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":913},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_i32x4.rs","byte_start":162101,"byte_end":162111,"line_start":353,"line_end":353,"column_start":10,"column_end":20},"name":"cast_f32x4","qualname":"<i32x4>::cast_f32x4","value":"fn (self) -> f32x4","parent":null,"children":[],"decl_id":null,"docs":" Cast directly to `f32x4` (no bit change).\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_i32x4.rs","byte_start":162058,"byte_end":162075,"line_start":351,"line_end":351,"column_start":3,"column_end":20}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_i32x4.rs","byte_start":162079,"byte_end":162090,"line_start":352,"line_end":352,"column_start":3,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":915},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\lib.rs","byte_start":4320,"byte_end":4328,"line_start":133,"line_end":133,"column_start":8,"column_end":16},"name":"sqrt_f32","qualname":"::sqrt_f32","value":"fn (x: f32) -> f32","parent":null,"children":[],"decl_id":null,"docs":" A `sqrt` for just one `f32`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\lib.rs","byte_start":4281,"byte_end":4298,"line_start":131,"line_end":131,"column_start":1,"column_end":18}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\lib.rs","byte_start":4300,"byte_end":4311,"line_start":132,"line_end":132,"column_start":1,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":916},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\lib.rs","byte_start":4665,"byte_end":4672,"line_start":148,"line_end":148,"column_start":8,"column_end":15},"name":"sin_f32","qualname":"::sin_f32","value":"fn (x: f32) -> f32","parent":null,"children":[],"decl_id":null,"docs":" A `sin` for just one `f32`.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\lib.rs","byte_start":4626,"byte_end":4643,"line_start":146,"line_end":146,"column_start":1,"column_end":18}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\lib.rs","byte_start":4645,"byte_end":4656,"line_start":147,"line_end":147,"column_start":1,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":917},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\lib.rs","byte_start":4958,"byte_end":4965,"line_start":161,"line_end":161,"column_start":8,"column_end":15},"name":"cos_f32","qualname":"::cos_f32","value":"fn (x: f32) -> f32","parent":null,"children":[],"decl_id":null,"docs":" A `cos` for just one `f32`.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\lib.rs","byte_start":4919,"byte_end":4936,"line_start":159,"line_end":159,"column_start":1,"column_end":18}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\lib.rs","byte_start":4938,"byte_end":4949,"line_start":160,"line_end":160,"column_start":1,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":918},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\lib.rs","byte_start":5251,"byte_end":5258,"line_start":174,"line_end":174,"column_start":8,"column_end":15},"name":"tan_f32","qualname":"::tan_f32","value":"fn (x: f32) -> f32","parent":null,"children":[],"decl_id":null,"docs":" A `tan` for just one `f32`.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\lib.rs","byte_start":5212,"byte_end":5229,"line_start":172,"line_end":172,"column_start":1,"column_end":18}},{"value":"must_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\lib.rs","byte_start":5231,"byte_end":5242,"line_start":173,"line_end":173,"column_start":1,"column_end":12}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":7168,"byte_end":7174,"line_start":50,"line_end":50,"column_start":29,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":7228,"byte_end":7234,"line_start":51,"line_end":51,"column_start":29,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":7288,"byte_end":7294,"line_start":52,"line_end":52,"column_start":29,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":7348,"byte_end":7355,"line_start":53,"line_end":53,"column_start":29,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":7409,"byte_end":7416,"line_start":54,"line_end":54,"column_start":29,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":7466,"byte_end":7472,"line_start":56,"line_end":56,"column_start":21,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":7506,"byte_end":7512,"line_start":57,"line_end":57,"column_start":21,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":7550,"byte_end":7556,"line_start":59,"line_end":59,"column_start":21,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":7590,"byte_end":7596,"line_start":60,"line_end":60,"column_start":21,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":7630,"byte_end":7636,"line_start":61,"line_end":61,"column_start":21,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":7671,"byte_end":7677,"line_start":62,"line_end":62,"column_start":21,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":7716,"byte_end":7722,"line_start":64,"line_end":64,"column_start":21,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":7756,"byte_end":7762,"line_start":65,"line_end":65,"column_start":21,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":7796,"byte_end":7802,"line_start":66,"line_end":66,"column_start":21,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":7837,"byte_end":7843,"line_start":67,"line_end":67,"column_start":21,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":7878,"byte_end":7884,"line_start":68,"line_end":68,"column_start":21,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":7919,"byte_end":7925,"line_start":69,"line_end":69,"column_start":21,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":7960,"byte_end":7966,"line_start":70,"line_end":70,"column_start":21,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":8005,"byte_end":8012,"line_start":72,"line_end":72,"column_start":21,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":8047,"byte_end":8054,"line_start":73,"line_end":73,"column_start":21,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":8089,"byte_end":8096,"line_start":74,"line_end":74,"column_start":21,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":8131,"byte_end":8138,"line_start":75,"line_end":75,"column_start":21,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":8173,"byte_end":8180,"line_start":76,"line_end":76,"column_start":21,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":8215,"byte_end":8222,"line_start":77,"line_end":77,"column_start":21,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":8257,"byte_end":8264,"line_start":78,"line_end":78,"column_start":21,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":8299,"byte_end":8306,"line_start":79,"line_end":79,"column_start":21,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":8341,"byte_end":8348,"line_start":80,"line_end":80,"column_start":21,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":8383,"byte_end":8390,"line_start":81,"line_end":81,"column_start":21,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":8425,"byte_end":8432,"line_start":82,"line_end":82,"column_start":21,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":8463,"byte_end":8470,"line_start":83,"line_end":83,"column_start":21,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":8505,"byte_end":8512,"line_start":85,"line_end":85,"column_start":21,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":8547,"byte_end":8554,"line_start":86,"line_end":86,"column_start":21,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":8589,"byte_end":8596,"line_start":87,"line_end":87,"column_start":21,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":8632,"byte_end":8639,"line_start":88,"line_end":88,"column_start":21,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":8675,"byte_end":8682,"line_start":89,"line_end":89,"column_start":21,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":8717,"byte_end":8724,"line_start":90,"line_end":90,"column_start":21,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":8759,"byte_end":8766,"line_start":91,"line_end":91,"column_start":21,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":8801,"byte_end":8808,"line_start":92,"line_end":92,"column_start":21,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":8843,"byte_end":8850,"line_start":93,"line_end":93,"column_start":21,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":8885,"byte_end":8892,"line_start":94,"line_end":94,"column_start":21,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":8927,"byte_end":8934,"line_start":95,"line_end":95,"column_start":21,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":8970,"byte_end":8977,"line_start":96,"line_end":96,"column_start":21,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":9300,"byte_end":9307,"line_start":106,"line_end":106,"column_start":21,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":9381,"byte_end":9388,"line_start":108,"line_end":108,"column_start":21,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":12114,"byte_end":12118,"line_start":28,"line_end":28,"column_start":26,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":12143,"byte_end":12147,"line_start":29,"line_end":29,"column_start":21,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":12171,"byte_end":12175,"line_start":31,"line_end":31,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":119}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":12879,"byte_end":12883,"line_start":63,"line_end":63,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":121}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":13466,"byte_end":13470,"line_start":82,"line_end":82,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":14064,"byte_end":14068,"line_start":101,"line_end":101,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":14667,"byte_end":14671,"line_start":120,"line_end":120,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":130}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":15254,"byte_end":15258,"line_start":139,"line_end":139,"column_start":14,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":133},{"krate":0,"index":134}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":15459,"byte_end":15463,"line_start":148,"line_end":148,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":15633,"byte_end":15637,"line_start":156,"line_end":156,"column_start":17,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":138},{"krate":0,"index":139}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":15838,"byte_end":15842,"line_start":165,"line_end":165,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":141}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":16006,"byte_end":16010,"line_start":173,"line_end":173,"column_start":14,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":143},{"krate":0,"index":144}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":16211,"byte_end":16215,"line_start":182,"line_end":182,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":146}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":16382,"byte_end":16386,"line_start":190,"line_end":190,"column_start":14,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":148},{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":16593,"byte_end":16597,"line_start":199,"line_end":199,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":151}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":16770,"byte_end":16774,"line_start":207,"line_end":207,"column_start":14,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":153},{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":16978,"byte_end":16982,"line_start":216,"line_end":216,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":17154,"byte_end":17158,"line_start":224,"line_end":224,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":158},{"krate":0,"index":159}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":17355,"byte_end":17359,"line_start":233,"line_end":233,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":161}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":17523,"byte_end":17527,"line_start":241,"line_end":241,"column_start":17,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":163},{"krate":0,"index":164}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":17728,"byte_end":17732,"line_start":250,"line_end":250,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":17896,"byte_end":17900,"line_start":258,"line_end":258,"column_start":14,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":168},{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":18100,"byte_end":18104,"line_start":268,"line_end":268,"column_start":14,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":171},{"krate":0,"index":172}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":18329,"byte_end":18333,"line_start":281,"line_end":281,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":222},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":246},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":253},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":40118,"byte_end":40122,"line_start":996,"line_end":996,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":270}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":40563,"byte_end":40567,"line_start":7,"line_end":7,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":282}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":46157,"byte_end":46162,"line_start":139,"line_end":139,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":285}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":46845,"byte_end":46850,"line_start":171,"line_end":171,"column_start":26,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":46875,"byte_end":46880,"line_start":172,"line_end":172,"column_start":21,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":46913,"byte_end":46918,"line_start":174,"line_end":174,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":289}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":49347,"byte_end":49352,"line_start":243,"line_end":243,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":52152,"byte_end":52157,"line_start":350,"line_end":350,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":309}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":54391,"byte_end":54396,"line_start":414,"line_end":414,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":315}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":56629,"byte_end":56634,"line_start":478,"line_end":478,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":321}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":58867,"byte_end":58872,"line_start":542,"line_end":542,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":327}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":61095,"byte_end":61100,"line_start":606,"line_end":606,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":333},{"krate":0,"index":334}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":61304,"byte_end":61309,"line_start":615,"line_end":615,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":336}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":61478,"byte_end":61483,"line_start":623,"line_end":623,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":338},{"krate":0,"index":339}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":61683,"byte_end":61688,"line_start":632,"line_end":632,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":341}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":61855,"byte_end":61860,"line_start":640,"line_end":640,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":343},{"krate":0,"index":344}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":62064,"byte_end":62069,"line_start":649,"line_end":649,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":346}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":62236,"byte_end":62241,"line_start":657,"line_end":657,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":348},{"krate":0,"index":349}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":62438,"byte_end":62443,"line_start":669,"line_end":669,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":353},{"krate":0,"index":354},{"krate":0,"index":355},{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":366},{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":372},{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":376},{"krate":0,"index":377},{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":383},{"krate":0,"index":384},{"krate":0,"index":385},{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":412},{"krate":0,"index":413},{"krate":0,"index":414},{"krate":0,"index":415},{"krate":0,"index":416},{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":419},{"krate":0,"index":422},{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":426},{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":433},{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":436},{"krate":0,"index":437}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":81942,"byte_end":81947,"line_start":1334,"line_end":1334,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":439}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":82656,"byte_end":82661,"line_start":1366,"line_end":1366,"column_start":26,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":82686,"byte_end":82691,"line_start":1367,"line_end":1367,"column_start":21,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":82724,"byte_end":82729,"line_start":1369,"line_end":1369,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":443}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":83185,"byte_end":83190,"line_start":1384,"line_end":1384,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":446}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":83653,"byte_end":83658,"line_start":1399,"line_end":1399,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":449}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":84124,"byte_end":84129,"line_start":1414,"line_end":1414,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":452}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":84579,"byte_end":84584,"line_start":1429,"line_end":1429,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":455},{"krate":0,"index":456}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":84785,"byte_end":84790,"line_start":1438,"line_end":1438,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":458}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":84960,"byte_end":84965,"line_start":1446,"line_end":1446,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":460},{"krate":0,"index":461}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":85166,"byte_end":85171,"line_start":1455,"line_end":1455,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":463}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":85335,"byte_end":85340,"line_start":1463,"line_end":1463,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":465},{"krate":0,"index":466}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":85541,"byte_end":85546,"line_start":1472,"line_end":1472,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":468}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":85713,"byte_end":85718,"line_start":1480,"line_end":1480,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":470},{"krate":0,"index":471}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":85925,"byte_end":85930,"line_start":1489,"line_end":1489,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":473}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":86105,"byte_end":86110,"line_start":1497,"line_end":1497,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":475},{"krate":0,"index":476}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":86307,"byte_end":86312,"line_start":1506,"line_end":1506,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":478}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":86473,"byte_end":86478,"line_start":1514,"line_end":1514,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":480},{"krate":0,"index":481}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":86682,"byte_end":86687,"line_start":1523,"line_end":1523,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":483}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":86860,"byte_end":86865,"line_start":1531,"line_end":1531,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":485},{"krate":0,"index":486}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":87066,"byte_end":87071,"line_start":1540,"line_end":1540,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":488}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":87235,"byte_end":87240,"line_start":1548,"line_end":1548,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":490},{"krate":0,"index":491}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":87440,"byte_end":87445,"line_start":1558,"line_end":1558,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":493},{"krate":0,"index":494}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Inherent","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":87671,"byte_end":87676,"line_start":1571,"line_end":1571,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":496},{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":499},{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":504},{"krate":0,"index":505},{"krate":0,"index":506},{"krate":0,"index":507},{"krate":0,"index":508},{"krate":0,"index":509},{"krate":0,"index":510},{"krate":0,"index":511},{"krate":0,"index":512},{"krate":0,"index":513},{"krate":0,"index":514},{"krate":0,"index":515},{"krate":0,"index":516},{"krate":0,"index":517},{"krate":0,"index":518},{"krate":0,"index":519},{"krate":0,"index":520},{"krate":0,"index":521},{"krate":0,"index":522},{"krate":0,"index":523},{"krate":0,"index":524},{"krate":0,"index":525},{"krate":0,"index":526},{"krate":0,"index":527},{"krate":0,"index":528},{"krate":0,"index":529},{"krate":0,"index":530},{"krate":0,"index":531},{"krate":0,"index":532},{"krate":0,"index":533},{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":537},{"krate":0,"index":538},{"krate":0,"index":539},{"krate":0,"index":540},{"krate":0,"index":541},{"krate":0,"index":544},{"krate":0,"index":545},{"krate":0,"index":546},{"krate":0,"index":547},{"krate":0,"index":548},{"krate":0,"index":551},{"krate":0,"index":554},{"krate":0,"index":555},{"krate":0,"index":556},{"krate":0,"index":557},{"krate":0,"index":558},{"krate":0,"index":559},{"krate":0,"index":560},{"krate":0,"index":561},{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":566},{"krate":0,"index":567},{"krate":0,"index":570},{"krate":0,"index":573},{"krate":0,"index":574},{"krate":0,"index":575},{"krate":0,"index":578},{"krate":0,"index":581},{"krate":0,"index":582},{"krate":0,"index":583}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Inherent","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":124729,"byte_end":124734,"line_start":4,"line_end":4,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":595},{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":598},{"krate":0,"index":599},{"krate":0,"index":600},{"krate":0,"index":601},{"krate":0,"index":602},{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":605},{"krate":0,"index":606},{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":609},{"krate":0,"index":610},{"krate":0,"index":611},{"krate":0,"index":612},{"krate":0,"index":613},{"krate":0,"index":614},{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":617},{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":620},{"krate":0,"index":621},{"krate":0,"index":622},{"krate":0,"index":623},{"krate":0,"index":626},{"krate":0,"index":627},{"krate":0,"index":628},{"krate":0,"index":629},{"krate":0,"index":630},{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":635},{"krate":0,"index":636}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_trait_impls.rs","byte_start":145268,"byte_end":145273,"line_start":3,"line_end":3,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":640}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_trait_impls.rs","byte_start":145368,"byte_end":145373,"line_start":10,"line_end":10,"column_start":15,"column_end":20},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_trait_impls.rs","byte_start":145394,"byte_end":145399,"line_start":11,"line_end":11,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":643}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_trait_impls.rs","byte_start":145511,"byte_end":145516,"line_start":18,"line_end":18,"column_start":26,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_trait_impls.rs","byte_start":145540,"byte_end":145545,"line_start":19,"line_end":19,"column_start":21,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_trait_impls.rs","byte_start":145569,"byte_end":145574,"line_start":21,"line_end":21,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":647}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_trait_impls.rs","byte_start":145789,"byte_end":145794,"line_start":33,"line_end":33,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":649},{"krate":0,"index":650}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_trait_impls.rs","byte_start":146186,"byte_end":146191,"line_start":51,"line_end":51,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":652},{"krate":0,"index":653}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_trait_impls.rs","byte_start":146573,"byte_end":146578,"line_start":69,"line_end":69,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":655},{"krate":0,"index":656}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_trait_impls.rs","byte_start":146970,"byte_end":146975,"line_start":87,"line_end":87,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":658},{"krate":0,"index":659}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_trait_impls.rs","byte_start":147357,"byte_end":147362,"line_start":105,"line_end":105,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":661},{"krate":0,"index":662}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_trait_impls.rs","byte_start":147754,"byte_end":147759,"line_start":123,"line_end":123,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":664},{"krate":0,"index":665}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_trait_impls.rs","byte_start":148141,"byte_end":148146,"line_start":141,"line_end":141,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":667},{"krate":0,"index":668}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_trait_impls.rs","byte_start":148538,"byte_end":148543,"line_start":159,"line_end":159,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":670},{"krate":0,"index":671}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_trait_impls.rs","byte_start":148928,"byte_end":148933,"line_start":177,"line_end":177,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":673},{"krate":0,"index":674}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_trait_impls.rs","byte_start":149478,"byte_end":149483,"line_start":195,"line_end":195,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":676},{"krate":0,"index":677}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_trait_impls.rs","byte_start":149612,"byte_end":149617,"line_start":204,"line_end":204,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":679},{"krate":0,"index":680}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_trait_impls.rs","byte_start":150159,"byte_end":150164,"line_start":222,"line_end":222,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":682},{"krate":0,"index":683}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_trait_impls.rs","byte_start":150293,"byte_end":150298,"line_start":231,"line_end":231,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":685},{"krate":0,"index":686}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_trait_impls.rs","byte_start":150843,"byte_end":150848,"line_start":249,"line_end":249,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":688},{"krate":0,"index":689}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_trait_impls.rs","byte_start":150975,"byte_end":150980,"line_start":258,"line_end":258,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":691},{"krate":0,"index":692}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_trait_impls.rs","byte_start":151152,"byte_end":151157,"line_start":268,"line_end":268,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":694}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_trait_impls.rs","byte_start":151378,"byte_end":151383,"line_start":278,"line_end":278,"column_start":41,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":698}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_trait_impls.rs","byte_start":151598,"byte_end":151603,"line_start":289,"line_end":289,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":701}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_trait_impls.rs","byte_start":151832,"byte_end":151837,"line_start":299,"line_end":299,"column_start":45,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":705}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_trait_impls.rs","byte_start":152040,"byte_end":152045,"line_start":310,"line_end":310,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":708},{"krate":0,"index":709}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_trait_impls.rs","byte_start":152336,"byte_end":152341,"line_start":327,"line_end":327,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":714}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_trait_impls.rs","byte_start":152457,"byte_end":152462,"line_start":334,"line_end":334,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":716}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_trait_impls.rs","byte_start":152568,"byte_end":152573,"line_start":341,"line_end":341,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":718}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_trait_impls.rs","byte_start":152689,"byte_end":152694,"line_start":348,"line_end":348,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":720}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_trait_impls.rs","byte_start":152800,"byte_end":152805,"line_start":355,"line_end":355,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":722}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_trait_impls.rs","byte_start":152921,"byte_end":152926,"line_start":362,"line_end":362,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":724}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_trait_impls.rs","byte_start":153032,"byte_end":153037,"line_start":369,"line_end":369,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":726}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_trait_impls.rs","byte_start":153153,"byte_end":153158,"line_start":376,"line_end":376,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":728}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_trait_impls.rs","byte_start":153264,"byte_end":153269,"line_start":383,"line_end":383,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":730}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_trait_impls.rs","byte_start":153385,"byte_end":153390,"line_start":390,"line_end":390,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":732}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_trait_impls.rs","byte_start":153499,"byte_end":153504,"line_start":397,"line_end":397,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":734}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_trait_impls.rs","byte_start":153626,"byte_end":153631,"line_start":404,"line_end":404,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":736}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_trait_impls.rs","byte_start":153742,"byte_end":153747,"line_start":411,"line_end":411,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":738}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_trait_impls.rs","byte_start":153867,"byte_end":153872,"line_start":418,"line_end":418,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":740}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_trait_impls.rs","byte_start":153983,"byte_end":153988,"line_start":425,"line_end":425,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":742}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_trait_impls.rs","byte_start":154110,"byte_end":154115,"line_start":432,"line_end":432,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":744}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Inherent","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":107395,"byte_end":107400,"line_start":92,"line_end":92,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1014},{"krate":0,"index":1015},{"krate":0,"index":1016},{"krate":0,"index":1017},{"krate":0,"index":1018},{"krate":0,"index":1019},{"krate":0,"index":1020},{"krate":0,"index":1021},{"krate":0,"index":1022},{"krate":0,"index":1023},{"krate":0,"index":1024},{"krate":0,"index":1025},{"krate":0,"index":1026},{"krate":0,"index":1027},{"krate":0,"index":1028},{"krate":0,"index":1029},{"krate":0,"index":1030},{"krate":0,"index":1031},{"krate":0,"index":1032},{"krate":0,"index":1033},{"krate":0,"index":1034},{"krate":0,"index":1035},{"krate":0,"index":1036},{"krate":0,"index":754},{"krate":0,"index":755},{"krate":0,"index":1037},{"krate":0,"index":1038},{"krate":0,"index":1039},{"krate":0,"index":1040},{"krate":0,"index":1041},{"krate":0,"index":1042}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Inherent","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":110836,"byte_end":110841,"line_start":273,"line_end":273,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":757}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":111136,"byte_end":111141,"line_start":286,"line_end":286,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":759},{"krate":0,"index":760}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":111745,"byte_end":111750,"line_start":311,"line_end":311,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":762},{"krate":0,"index":763}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Inherent","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":112336,"byte_end":112341,"line_start":336,"line_end":336,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":765},{"krate":0,"index":766},{"krate":0,"index":767},{"krate":0,"index":768},{"krate":0,"index":769},{"krate":0,"index":770},{"krate":0,"index":771},{"krate":0,"index":772},{"krate":0,"index":774},{"krate":0,"index":777},{"krate":0,"index":779},{"krate":0,"index":781},{"krate":0,"index":783},{"krate":0,"index":785},{"krate":0,"index":787},{"krate":0,"index":789},{"krate":0,"index":791},{"krate":0,"index":793},{"krate":0,"index":795},{"krate":0,"index":797},{"krate":0,"index":800},{"krate":0,"index":802},{"krate":0,"index":804},{"krate":0,"index":807}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":119882,"byte_end":119887,"line_start":610,"line_end":610,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":811},{"krate":0,"index":812}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":120080,"byte_end":120085,"line_start":619,"line_end":619,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":815}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":120268,"byte_end":120273,"line_start":628,"line_end":628,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":818}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":120614,"byte_end":120619,"line_start":642,"line_end":642,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":820}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":120964,"byte_end":120969,"line_start":656,"line_end":656,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":822}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":121323,"byte_end":121328,"line_start":670,"line_end":670,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":824}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":121680,"byte_end":121685,"line_start":684,"line_end":684,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":826}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":122103,"byte_end":122108,"line_start":698,"line_end":698,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":828}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":122531,"byte_end":122536,"line_start":712,"line_end":712,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":830}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":122950,"byte_end":122955,"line_start":726,"line_end":726,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":832}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":123388,"byte_end":123393,"line_start":740,"line_end":740,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":835}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":123523,"byte_end":123528,"line_start":748,"line_end":748,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":839}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":123665,"byte_end":123670,"line_start":756,"line_end":756,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":843}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":123807,"byte_end":123812,"line_start":764,"line_end":764,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":846}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":123969,"byte_end":123974,"line_start":772,"line_end":772,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":849}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":124154,"byte_end":124159,"line_start":780,"line_end":780,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":853}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":124340,"byte_end":124345,"line_start":788,"line_end":788,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":857}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":124527,"byte_end":124532,"line_start":796,"line_end":796,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":861}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_i32x4.rs","byte_start":154570,"byte_end":154575,"line_start":18,"line_end":18,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":867}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_i32x4.rs","byte_start":154677,"byte_end":154682,"line_start":25,"line_end":25,"column_start":15,"column_end":20},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_i32x4.rs","byte_start":154704,"byte_end":154709,"line_start":26,"line_end":26,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":870}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_i32x4.rs","byte_start":154828,"byte_end":154833,"line_start":33,"line_end":33,"column_start":26,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_i32x4.rs","byte_start":154858,"byte_end":154863,"line_start":34,"line_end":34,"column_start":21,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Inherent","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_i32x4.rs","byte_start":156677,"byte_end":156682,"line_start":103,"line_end":103,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1057},{"krate":0,"index":1058},{"krate":0,"index":1059},{"krate":0,"index":1060}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_i32x4.rs","byte_start":157071,"byte_end":157076,"line_start":133,"line_end":133,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":880},{"krate":0,"index":881}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_i32x4.rs","byte_start":157516,"byte_end":157521,"line_start":151,"line_end":151,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":883}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Inherent","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_i32x4.rs","byte_start":157891,"byte_end":157896,"line_start":165,"line_end":165,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":885},{"krate":0,"index":886}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_i32x4.rs","byte_start":158962,"byte_end":158967,"line_start":213,"line_end":213,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":888},{"krate":0,"index":889}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Inherent","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_i32x4.rs","byte_start":159291,"byte_end":159296,"line_start":232,"line_end":232,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":891}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_i32x4.rs","byte_start":159601,"byte_end":159606,"line_start":245,"line_end":245,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":893}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_i32x4.rs","byte_start":159726,"byte_end":159731,"line_start":253,"line_end":253,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":895},{"krate":0,"index":896}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_i32x4.rs","byte_start":159919,"byte_end":159924,"line_start":263,"line_end":263,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":899},{"krate":0,"index":900}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_i32x4.rs","byte_start":160333,"byte_end":160338,"line_start":281,"line_end":281,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":902},{"krate":0,"index":903}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_i32x4.rs","byte_start":160768,"byte_end":160773,"line_start":299,"line_end":299,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":905},{"krate":0,"index":906}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_i32x4.rs","byte_start":161191,"byte_end":161196,"line_start":317,"line_end":317,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":908},{"krate":0,"index":909}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_i32x4.rs","byte_start":161629,"byte_end":161634,"line_start":335,"line_end":335,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":911}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Inherent","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_i32x4.rs","byte_start":161998,"byte_end":162003,"line_start":349,"line_end":349,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":913}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\lib.rs","byte_start":3831,"byte_end":3835,"line_start":111,"line_end":111,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":23}},{"kind":"Mod","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":9492,"byte_end":9498,"line_start":114,"line_end":114,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":111}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":7168,"byte_end":7174,"line_start":50,"line_end":50,"column_start":29,"column_end":35},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":919},"to":{"krate":14,"index":23}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":7228,"byte_end":7234,"line_start":51,"line_end":51,"column_start":29,"column_end":35},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":931},"to":{"krate":14,"index":23}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":7288,"byte_end":7294,"line_start":52,"line_end":52,"column_start":29,"column_end":35},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":943},"to":{"krate":14,"index":23}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":7348,"byte_end":7355,"line_start":53,"line_end":53,"column_start":29,"column_end":36},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":955},"to":{"krate":14,"index":23}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":7409,"byte_end":7416,"line_start":54,"line_end":54,"column_start":29,"column_end":36},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":967},"to":{"krate":14,"index":23}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":7466,"byte_end":7472,"line_start":56,"line_end":56,"column_start":21,"column_end":27},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":919},"to":{"krate":14,"index":119}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":7506,"byte_end":7512,"line_start":57,"line_end":57,"column_start":21,"column_end":27},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":919},"to":{"krate":14,"index":119}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":7550,"byte_end":7556,"line_start":59,"line_end":59,"column_start":21,"column_end":27},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":931},"to":{"krate":14,"index":119}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":7590,"byte_end":7596,"line_start":60,"line_end":60,"column_start":21,"column_end":27},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":931},"to":{"krate":14,"index":119}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":7630,"byte_end":7636,"line_start":61,"line_end":61,"column_start":21,"column_end":27},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":931},"to":{"krate":14,"index":119}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":7671,"byte_end":7677,"line_start":62,"line_end":62,"column_start":21,"column_end":27},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":931},"to":{"krate":14,"index":119}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":7716,"byte_end":7722,"line_start":64,"line_end":64,"column_start":21,"column_end":27},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":943},"to":{"krate":14,"index":119}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":7756,"byte_end":7762,"line_start":65,"line_end":65,"column_start":21,"column_end":27},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":943},"to":{"krate":14,"index":119}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":7796,"byte_end":7802,"line_start":66,"line_end":66,"column_start":21,"column_end":27},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":943},"to":{"krate":14,"index":119}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":7837,"byte_end":7843,"line_start":67,"line_end":67,"column_start":21,"column_end":27},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":943},"to":{"krate":14,"index":119}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":7878,"byte_end":7884,"line_start":68,"line_end":68,"column_start":21,"column_end":27},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":943},"to":{"krate":14,"index":119}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":7919,"byte_end":7925,"line_start":69,"line_end":69,"column_start":21,"column_end":27},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":943},"to":{"krate":14,"index":119}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":7960,"byte_end":7966,"line_start":70,"line_end":70,"column_start":21,"column_end":27},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":943},"to":{"krate":14,"index":119}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":8005,"byte_end":8012,"line_start":72,"line_end":72,"column_start":21,"column_end":28},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":955},"to":{"krate":14,"index":119}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":8047,"byte_end":8054,"line_start":73,"line_end":73,"column_start":21,"column_end":28},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":955},"to":{"krate":14,"index":119}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":8089,"byte_end":8096,"line_start":74,"line_end":74,"column_start":21,"column_end":28},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":955},"to":{"krate":14,"index":119}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":8131,"byte_end":8138,"line_start":75,"line_end":75,"column_start":21,"column_end":28},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":955},"to":{"krate":14,"index":119}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":8173,"byte_end":8180,"line_start":76,"line_end":76,"column_start":21,"column_end":28},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":955},"to":{"krate":14,"index":119}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":8215,"byte_end":8222,"line_start":77,"line_end":77,"column_start":21,"column_end":28},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":955},"to":{"krate":14,"index":119}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":8257,"byte_end":8264,"line_start":78,"line_end":78,"column_start":21,"column_end":28},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":955},"to":{"krate":14,"index":119}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":8299,"byte_end":8306,"line_start":79,"line_end":79,"column_start":21,"column_end":28},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":955},"to":{"krate":14,"index":119}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":8341,"byte_end":8348,"line_start":80,"line_end":80,"column_start":21,"column_end":28},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":955},"to":{"krate":14,"index":119}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":8383,"byte_end":8390,"line_start":81,"line_end":81,"column_start":21,"column_end":28},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":955},"to":{"krate":14,"index":119}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":8425,"byte_end":8432,"line_start":82,"line_end":82,"column_start":21,"column_end":28},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":955},"to":{"krate":14,"index":119}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":8463,"byte_end":8470,"line_start":83,"line_end":83,"column_start":21,"column_end":28},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":955},"to":{"krate":14,"index":119}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":8505,"byte_end":8512,"line_start":85,"line_end":85,"column_start":21,"column_end":28},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":967},"to":{"krate":14,"index":119}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":8547,"byte_end":8554,"line_start":86,"line_end":86,"column_start":21,"column_end":28},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":967},"to":{"krate":14,"index":119}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":8589,"byte_end":8596,"line_start":87,"line_end":87,"column_start":21,"column_end":28},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":967},"to":{"krate":14,"index":119}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":8632,"byte_end":8639,"line_start":88,"line_end":88,"column_start":21,"column_end":28},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":967},"to":{"krate":14,"index":119}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":8675,"byte_end":8682,"line_start":89,"line_end":89,"column_start":21,"column_end":28},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":967},"to":{"krate":14,"index":119}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":8717,"byte_end":8724,"line_start":90,"line_end":90,"column_start":21,"column_end":28},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":967},"to":{"krate":14,"index":119}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":8759,"byte_end":8766,"line_start":91,"line_end":91,"column_start":21,"column_end":28},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":967},"to":{"krate":14,"index":119}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":8801,"byte_end":8808,"line_start":92,"line_end":92,"column_start":21,"column_end":28},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":967},"to":{"krate":14,"index":119}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":8843,"byte_end":8850,"line_start":93,"line_end":93,"column_start":21,"column_end":28},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":967},"to":{"krate":14,"index":119}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":8885,"byte_end":8892,"line_start":94,"line_end":94,"column_start":21,"column_end":28},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":967},"to":{"krate":14,"index":119}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":8927,"byte_end":8934,"line_start":95,"line_end":95,"column_start":21,"column_end":28},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":967},"to":{"krate":14,"index":119}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":8970,"byte_end":8977,"line_start":96,"line_end":96,"column_start":21,"column_end":28},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":967},"to":{"krate":14,"index":119}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":9300,"byte_end":9307,"line_start":106,"line_end":106,"column_start":21,"column_end":28},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":955},"to":{"krate":14,"index":119}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch.rs","byte_start":9381,"byte_end":9388,"line_start":108,"line_end":108,"column_start":21,"column_end":28},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":967},"to":{"krate":14,"index":119}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":12114,"byte_end":12118,"line_start":28,"line_end":28,"column_start":26,"column_end":30},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":979},"to":{"krate":14,"index":23}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":12143,"byte_end":12147,"line_start":29,"line_end":29,"column_start":21,"column_end":25},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":979},"to":{"krate":14,"index":119}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":12171,"byte_end":12175,"line_start":31,"line_end":31,"column_start":18,"column_end":22},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":979},"to":{"krate":2,"index":2080}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":12879,"byte_end":12883,"line_start":63,"line_end":63,"column_start":27,"column_end":31},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":979},"to":{"krate":2,"index":6831}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":13466,"byte_end":13470,"line_start":82,"line_end":82,"column_start":29,"column_end":33},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":979},"to":{"krate":2,"index":6833}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":14064,"byte_end":14068,"line_start":101,"line_end":101,"column_start":30,"column_end":34},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":979},"to":{"krate":2,"index":6845}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":14667,"byte_end":14671,"line_start":120,"line_end":120,"column_start":30,"column_end":34},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":979},"to":{"krate":2,"index":6847}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":15254,"byte_end":15258,"line_start":139,"line_end":139,"column_start":14,"column_end":18},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":979},"to":{"krate":2,"index":1493}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":15459,"byte_end":15463,"line_start":148,"line_end":148,"column_start":20,"column_end":24},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":979},"to":{"krate":2,"index":1526}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":15633,"byte_end":15637,"line_start":156,"line_end":156,"column_start":17,"column_end":21},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":979},"to":{"krate":2,"index":1551}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":15838,"byte_end":15842,"line_start":165,"line_end":165,"column_start":23,"column_end":27},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":979},"to":{"krate":2,"index":1578}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":16006,"byte_end":16010,"line_start":173,"line_end":173,"column_start":14,"column_end":18},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":979},"to":{"krate":2,"index":1508}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":16211,"byte_end":16215,"line_start":182,"line_end":182,"column_start":20,"column_end":24},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":979},"to":{"krate":2,"index":1538}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":16382,"byte_end":16386,"line_start":190,"line_end":190,"column_start":14,"column_end":18},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":979},"to":{"krate":2,"index":1503}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":16593,"byte_end":16597,"line_start":199,"line_end":199,"column_start":20,"column_end":24},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":979},"to":{"krate":2,"index":1534}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":16770,"byte_end":16774,"line_start":207,"line_end":207,"column_start":14,"column_end":18},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":979},"to":{"krate":2,"index":1498}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":16978,"byte_end":16982,"line_start":216,"line_end":216,"column_start":20,"column_end":24},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":979},"to":{"krate":2,"index":1530}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":17154,"byte_end":17158,"line_start":224,"line_end":224,"column_start":16,"column_end":20},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":979},"to":{"krate":2,"index":1556}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":17355,"byte_end":17359,"line_start":233,"line_end":233,"column_start":22,"column_end":26},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":979},"to":{"krate":2,"index":1582}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":17523,"byte_end":17527,"line_start":241,"line_end":241,"column_start":17,"column_end":21},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":979},"to":{"krate":2,"index":1561}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":17728,"byte_end":17732,"line_start":250,"line_end":250,"column_start":23,"column_end":27},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":979},"to":{"krate":2,"index":1586}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":17896,"byte_end":17900,"line_start":258,"line_end":258,"column_start":14,"column_end":18},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":979},"to":{"krate":2,"index":1520}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":18100,"byte_end":18104,"line_start":268,"line_end":268,"column_start":14,"column_end":18},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":979},"to":{"krate":2,"index":1547}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":18329,"byte_end":18333,"line_start":281,"line_end":281,"column_start":6,"column_end":10},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":979},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse.rs","byte_start":40118,"byte_end":40122,"line_start":996,"line_end":996,"column_start":6,"column_end":10},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":979},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":40563,"byte_end":40567,"line_start":7,"line_end":7,"column_start":6,"column_end":10},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":979},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":46157,"byte_end":46162,"line_start":139,"line_end":139,"column_start":18,"column_end":23},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":985},"to":{"krate":2,"index":2080}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":46845,"byte_end":46850,"line_start":171,"line_end":171,"column_start":26,"column_end":31},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":985},"to":{"krate":14,"index":23}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":46875,"byte_end":46880,"line_start":172,"line_end":172,"column_start":21,"column_end":26},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":985},"to":{"krate":14,"index":119}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":46913,"byte_end":46918,"line_start":174,"line_end":174,"column_start":27,"column_end":32},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":985},"to":{"krate":2,"index":6831}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":49347,"byte_end":49352,"line_start":243,"line_end":243,"column_start":29,"column_end":34},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":985},"to":{"krate":2,"index":6833}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":52152,"byte_end":52157,"line_start":350,"line_end":350,"column_start":28,"column_end":33},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":985},"to":{"krate":2,"index":6837}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":54391,"byte_end":54396,"line_start":414,"line_end":414,"column_start":30,"column_end":35},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":985},"to":{"krate":2,"index":6839}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":56629,"byte_end":56634,"line_start":478,"line_end":478,"column_start":27,"column_end":32},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":985},"to":{"krate":2,"index":6835}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":58867,"byte_end":58872,"line_start":542,"line_end":542,"column_start":30,"column_end":35},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":985},"to":{"krate":2,"index":6841}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":61095,"byte_end":61100,"line_start":606,"line_end":606,"column_start":17,"column_end":22},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":985},"to":{"krate":2,"index":1551}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":61304,"byte_end":61309,"line_start":615,"line_end":615,"column_start":23,"column_end":28},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":985},"to":{"krate":2,"index":1578}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":61478,"byte_end":61483,"line_start":623,"line_end":623,"column_start":16,"column_end":21},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":985},"to":{"krate":2,"index":1556}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":61683,"byte_end":61688,"line_start":632,"line_end":632,"column_start":22,"column_end":27},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":985},"to":{"krate":2,"index":1582}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":61855,"byte_end":61860,"line_start":640,"line_end":640,"column_start":17,"column_end":22},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":985},"to":{"krate":2,"index":1561}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":62064,"byte_end":62069,"line_start":649,"line_end":649,"column_start":23,"column_end":28},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":985},"to":{"krate":2,"index":1586}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":62236,"byte_end":62241,"line_start":657,"line_end":657,"column_start":14,"column_end":19},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":985},"to":{"krate":2,"index":1547}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":62438,"byte_end":62443,"line_start":669,"line_end":669,"column_start":6,"column_end":11},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":985},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":81942,"byte_end":81947,"line_start":1334,"line_end":1334,"column_start":18,"column_end":23},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":991},"to":{"krate":2,"index":2080}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":82656,"byte_end":82661,"line_start":1366,"line_end":1366,"column_start":26,"column_end":31},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":991},"to":{"krate":14,"index":23}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":82686,"byte_end":82691,"line_start":1367,"line_end":1367,"column_start":21,"column_end":26},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":991},"to":{"krate":14,"index":119}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":82724,"byte_end":82729,"line_start":1369,"line_end":1369,"column_start":27,"column_end":32},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":991},"to":{"krate":2,"index":6831}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":83185,"byte_end":83190,"line_start":1384,"line_end":1384,"column_start":29,"column_end":34},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":991},"to":{"krate":2,"index":6833}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":83653,"byte_end":83658,"line_start":1399,"line_end":1399,"column_start":30,"column_end":35},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":991},"to":{"krate":2,"index":6845}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":84124,"byte_end":84129,"line_start":1414,"line_end":1414,"column_start":30,"column_end":35},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":991},"to":{"krate":2,"index":6847}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":84579,"byte_end":84584,"line_start":1429,"line_end":1429,"column_start":14,"column_end":19},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":991},"to":{"krate":2,"index":1493}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":84785,"byte_end":84790,"line_start":1438,"line_end":1438,"column_start":20,"column_end":25},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":991},"to":{"krate":2,"index":1526}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":84960,"byte_end":84965,"line_start":1446,"line_end":1446,"column_start":17,"column_end":22},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":991},"to":{"krate":2,"index":1551}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":85166,"byte_end":85171,"line_start":1455,"line_end":1455,"column_start":23,"column_end":28},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":991},"to":{"krate":2,"index":1578}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":85335,"byte_end":85340,"line_start":1463,"line_end":1463,"column_start":14,"column_end":19},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":991},"to":{"krate":2,"index":1508}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":85541,"byte_end":85546,"line_start":1472,"line_end":1472,"column_start":20,"column_end":25},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":991},"to":{"krate":2,"index":1538}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":85713,"byte_end":85718,"line_start":1480,"line_end":1480,"column_start":14,"column_end":19},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":991},"to":{"krate":2,"index":1503}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":85925,"byte_end":85930,"line_start":1489,"line_end":1489,"column_start":20,"column_end":25},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":991},"to":{"krate":2,"index":1534}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":86105,"byte_end":86110,"line_start":1497,"line_end":1497,"column_start":16,"column_end":21},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":991},"to":{"krate":2,"index":1556}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":86307,"byte_end":86312,"line_start":1506,"line_end":1506,"column_start":22,"column_end":27},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":991},"to":{"krate":2,"index":1582}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":86473,"byte_end":86478,"line_start":1514,"line_end":1514,"column_start":14,"column_end":19},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":991},"to":{"krate":2,"index":1498}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":86682,"byte_end":86687,"line_start":1523,"line_end":1523,"column_start":20,"column_end":25},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":991},"to":{"krate":2,"index":1530}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":86860,"byte_end":86865,"line_start":1531,"line_end":1531,"column_start":17,"column_end":22},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":991},"to":{"krate":2,"index":1561}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":87066,"byte_end":87071,"line_start":1540,"line_end":1540,"column_start":23,"column_end":28},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":991},"to":{"krate":2,"index":1586}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":87235,"byte_end":87240,"line_start":1548,"line_end":1548,"column_start":14,"column_end":19},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":991},"to":{"krate":2,"index":1520}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":87440,"byte_end":87445,"line_start":1558,"line_end":1558,"column_start":14,"column_end":19},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":991},"to":{"krate":2,"index":1547}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\arch\\sse2.rs","byte_start":87671,"byte_end":87676,"line_start":1571,"line_end":1571,"column_start":6,"column_end":11},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":991},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_methods.rs","byte_start":124729,"byte_end":124734,"line_start":4,"line_end":4,"column_start":6,"column_end":11},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1012},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_trait_impls.rs","byte_start":145268,"byte_end":145273,"line_start":3,"line_end":3,"column_start":16,"column_end":21},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1012},"to":{"krate":2,"index":2056}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_trait_impls.rs","byte_start":145368,"byte_end":145373,"line_start":10,"line_end":10,"column_start":15,"column_end":20},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1012},"to":{"krate":2,"index":1445}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_trait_impls.rs","byte_start":145394,"byte_end":145399,"line_start":11,"line_end":11,"column_start":18,"column_end":23},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1012},"to":{"krate":2,"index":2080}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_trait_impls.rs","byte_start":145511,"byte_end":145516,"line_start":18,"line_end":18,"column_start":26,"column_end":31},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1012},"to":{"krate":14,"index":23}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_trait_impls.rs","byte_start":145540,"byte_end":145545,"line_start":19,"line_end":19,"column_start":21,"column_end":26},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1012},"to":{"krate":14,"index":119}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_trait_impls.rs","byte_start":145569,"byte_end":145574,"line_start":21,"line_end":21,"column_start":20,"column_end":25},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1012},"to":{"krate":2,"index":2096}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_trait_impls.rs","byte_start":145789,"byte_end":145794,"line_start":33,"line_end":33,"column_start":14,"column_end":19},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":1012},"to":{"krate":2,"index":1493}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_trait_impls.rs","byte_start":146186,"byte_end":146191,"line_start":51,"line_end":51,"column_start":25,"column_end":30},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":1012},"to":{"krate":2,"index":1493}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_trait_impls.rs","byte_start":146573,"byte_end":146578,"line_start":69,"line_end":69,"column_start":14,"column_end":19},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":1012},"to":{"krate":2,"index":1508}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_trait_impls.rs","byte_start":146970,"byte_end":146975,"line_start":87,"line_end":87,"column_start":25,"column_end":30},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":1012},"to":{"krate":2,"index":1508}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_trait_impls.rs","byte_start":147357,"byte_end":147362,"line_start":105,"line_end":105,"column_start":14,"column_end":19},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":1012},"to":{"krate":2,"index":1503}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_trait_impls.rs","byte_start":147754,"byte_end":147759,"line_start":123,"line_end":123,"column_start":25,"column_end":30},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":1012},"to":{"krate":2,"index":1503}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_trait_impls.rs","byte_start":148141,"byte_end":148146,"line_start":141,"line_end":141,"column_start":14,"column_end":19},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":1012},"to":{"krate":2,"index":1498}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_trait_impls.rs","byte_start":148538,"byte_end":148543,"line_start":159,"line_end":159,"column_start":25,"column_end":30},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":1012},"to":{"krate":2,"index":1498}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_trait_impls.rs","byte_start":148928,"byte_end":148933,"line_start":177,"line_end":177,"column_start":17,"column_end":22},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":1012},"to":{"krate":2,"index":1551}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_trait_impls.rs","byte_start":149478,"byte_end":149483,"line_start":195,"line_end":195,"column_start":28,"column_end":33},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":1012},"to":{"krate":2,"index":1551}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_trait_impls.rs","byte_start":149612,"byte_end":149617,"line_start":204,"line_end":204,"column_start":16,"column_end":21},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":1012},"to":{"krate":2,"index":1556}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_trait_impls.rs","byte_start":150159,"byte_end":150164,"line_start":222,"line_end":222,"column_start":27,"column_end":32},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":1012},"to":{"krate":2,"index":1556}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_trait_impls.rs","byte_start":150293,"byte_end":150298,"line_start":231,"line_end":231,"column_start":17,"column_end":22},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":1012},"to":{"krate":2,"index":1561}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_trait_impls.rs","byte_start":150843,"byte_end":150848,"line_start":249,"line_end":249,"column_start":28,"column_end":33},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":1012},"to":{"krate":2,"index":1561}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_trait_impls.rs","byte_start":150975,"byte_end":150980,"line_start":258,"line_end":258,"column_start":14,"column_end":19},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":1012},"to":{"krate":2,"index":1547}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_trait_impls.rs","byte_start":151152,"byte_end":151157,"line_start":268,"line_end":268,"column_start":26,"column_end":31},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":1012},"to":{"krate":2,"index":3413}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_trait_impls.rs","byte_start":151378,"byte_end":151383,"line_start":278,"line_end":278,"column_start":41,"column_end":46},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":1012},"to":{"krate":2,"index":3413}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_trait_impls.rs","byte_start":151598,"byte_end":151603,"line_start":289,"line_end":289,"column_start":30,"column_end":35},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":1012},"to":{"krate":2,"index":3417}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_trait_impls.rs","byte_start":151832,"byte_end":151837,"line_start":299,"line_end":299,"column_start":45,"column_end":50},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":1012},"to":{"krate":2,"index":3417}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_trait_impls.rs","byte_start":152040,"byte_end":152045,"line_start":310,"line_end":310,"column_start":14,"column_end":19},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":1012},"to":{"krate":2,"index":1520}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_trait_impls.rs","byte_start":152336,"byte_end":152341,"line_start":327,"line_end":327,"column_start":20,"column_end":25},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":1012},"to":{"krate":2,"index":1526}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_trait_impls.rs","byte_start":152457,"byte_end":152462,"line_start":334,"line_end":334,"column_start":31,"column_end":36},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":1012},"to":{"krate":2,"index":1526}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_trait_impls.rs","byte_start":152568,"byte_end":152573,"line_start":341,"line_end":341,"column_start":20,"column_end":25},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":1012},"to":{"krate":2,"index":1538}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_trait_impls.rs","byte_start":152689,"byte_end":152694,"line_start":348,"line_end":348,"column_start":31,"column_end":36},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":1012},"to":{"krate":2,"index":1538}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_trait_impls.rs","byte_start":152800,"byte_end":152805,"line_start":355,"line_end":355,"column_start":20,"column_end":25},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":1012},"to":{"krate":2,"index":1534}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_trait_impls.rs","byte_start":152921,"byte_end":152926,"line_start":362,"line_end":362,"column_start":31,"column_end":36},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":1012},"to":{"krate":2,"index":1534}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_trait_impls.rs","byte_start":153032,"byte_end":153037,"line_start":369,"line_end":369,"column_start":20,"column_end":25},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":1012},"to":{"krate":2,"index":1542}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_trait_impls.rs","byte_start":153153,"byte_end":153158,"line_start":376,"line_end":376,"column_start":31,"column_end":36},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":1012},"to":{"krate":2,"index":1542}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_trait_impls.rs","byte_start":153264,"byte_end":153269,"line_start":383,"line_end":383,"column_start":20,"column_end":25},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":1012},"to":{"krate":2,"index":1530}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_trait_impls.rs","byte_start":153385,"byte_end":153390,"line_start":390,"line_end":390,"column_start":31,"column_end":36},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":1012},"to":{"krate":2,"index":1530}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_trait_impls.rs","byte_start":153499,"byte_end":153504,"line_start":397,"line_end":397,"column_start":23,"column_end":28},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":1012},"to":{"krate":2,"index":1578}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_trait_impls.rs","byte_start":153626,"byte_end":153631,"line_start":404,"line_end":404,"column_start":34,"column_end":39},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":1012},"to":{"krate":2,"index":1578}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_trait_impls.rs","byte_start":153742,"byte_end":153747,"line_start":411,"line_end":411,"column_start":22,"column_end":27},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":1012},"to":{"krate":2,"index":1582}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_trait_impls.rs","byte_start":153867,"byte_end":153872,"line_start":418,"line_end":418,"column_start":33,"column_end":38},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":1012},"to":{"krate":2,"index":1582}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_trait_impls.rs","byte_start":153983,"byte_end":153988,"line_start":425,"line_end":425,"column_start":23,"column_end":28},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":1012},"to":{"krate":2,"index":1586}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4\\wide_trait_impls.rs","byte_start":154110,"byte_end":154115,"line_start":432,"line_end":432,"column_start":34,"column_end":39},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":1012},"to":{"krate":2,"index":1586}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":107395,"byte_end":107400,"line_start":92,"line_end":92,"column_start":6,"column_end":11},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":1012},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":110836,"byte_end":110841,"line_start":273,"line_end":273,"column_start":6,"column_end":11},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":1012},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":111136,"byte_end":111141,"line_start":286,"line_end":286,"column_start":14,"column_end":19},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":1012},"to":{"krate":2,"index":1514}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":111745,"byte_end":111750,"line_start":311,"line_end":311,"column_start":25,"column_end":30},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":1012},"to":{"krate":2,"index":1514}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":112336,"byte_end":112341,"line_start":336,"line_end":336,"column_start":6,"column_end":11},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":1012},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":119882,"byte_end":119887,"line_start":610,"line_end":610,"column_start":23,"column_end":28},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":1012},"to":{"krate":2,"index":1677}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":120080,"byte_end":120085,"line_start":619,"line_end":619,"column_start":26,"column_end":31},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":1012},"to":{"krate":2,"index":1681}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":120268,"byte_end":120273,"line_start":628,"line_end":628,"column_start":16,"column_end":21},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":1012},"to":{"krate":2,"index":6831}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":120614,"byte_end":120619,"line_start":642,"line_end":642,"column_start":18,"column_end":23},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":1012},"to":{"krate":2,"index":6833}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":120964,"byte_end":120969,"line_start":656,"line_end":656,"column_start":19,"column_end":24},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":1012},"to":{"krate":2,"index":6845}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":121323,"byte_end":121328,"line_start":670,"line_end":670,"column_start":19,"column_end":24},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":1012},"to":{"krate":2,"index":6847}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":121680,"byte_end":121685,"line_start":684,"line_end":684,"column_start":17,"column_end":22},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":1012},"to":{"krate":2,"index":6837}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":122103,"byte_end":122108,"line_start":698,"line_end":698,"column_start":19,"column_end":24},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":1012},"to":{"krate":2,"index":6839}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":122531,"byte_end":122536,"line_start":712,"line_end":712,"column_start":16,"column_end":21},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":1012},"to":{"krate":2,"index":6835}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":122950,"byte_end":122955,"line_start":726,"line_end":726,"column_start":19,"column_end":24},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":1012},"to":{"krate":2,"index":6841}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":123388,"byte_end":123393,"line_start":740,"line_end":740,"column_start":26,"column_end":31},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":1012},"to":{"krate":2,"index":2087}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":123523,"byte_end":123528,"line_start":748,"line_end":748,"column_start":26,"column_end":31},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":1012},"to":{"krate":2,"index":2090}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":123665,"byte_end":123670,"line_start":756,"line_end":756,"column_start":25,"column_end":30},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":1012},"to":{"krate":2,"index":2096}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":123807,"byte_end":123812,"line_start":764,"line_end":764,"column_start":37,"column_end":42},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":1012},"to":{"krate":2,"index":2096}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":123969,"byte_end":123974,"line_start":772,"line_end":772,"column_start":24,"column_end":29},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":1012},"to":{"krate":2,"index":2096}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":124154,"byte_end":124159,"line_start":780,"line_end":780,"column_start":24,"column_end":29},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":1012},"to":{"krate":2,"index":2096}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":124340,"byte_end":124345,"line_start":788,"line_end":788,"column_start":25,"column_end":30},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":1012},"to":{"krate":2,"index":2096}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_f32x4.rs","byte_start":124527,"byte_end":124532,"line_start":796,"line_end":796,"column_start":25,"column_end":30},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":1012},"to":{"krate":2,"index":2096}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_i32x4.rs","byte_start":154570,"byte_end":154575,"line_start":18,"line_end":18,"column_start":16,"column_end":21},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":1055},"to":{"krate":2,"index":2056}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_i32x4.rs","byte_start":154677,"byte_end":154682,"line_start":25,"line_end":25,"column_start":15,"column_end":20},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":1055},"to":{"krate":2,"index":1445}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_i32x4.rs","byte_start":154704,"byte_end":154709,"line_start":26,"line_end":26,"column_start":18,"column_end":23},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":1055},"to":{"krate":2,"index":2080}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_i32x4.rs","byte_start":154828,"byte_end":154833,"line_start":33,"line_end":33,"column_start":26,"column_end":31},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":1055},"to":{"krate":14,"index":23}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_i32x4.rs","byte_start":154858,"byte_end":154863,"line_start":34,"line_end":34,"column_start":21,"column_end":26},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":1055},"to":{"krate":14,"index":119}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_i32x4.rs","byte_start":156677,"byte_end":156682,"line_start":103,"line_end":103,"column_start":6,"column_end":11},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":1055},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_i32x4.rs","byte_start":157071,"byte_end":157076,"line_start":133,"line_end":133,"column_start":17,"column_end":22},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":1055},"to":{"krate":2,"index":1551}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_i32x4.rs","byte_start":157516,"byte_end":157521,"line_start":151,"line_end":151,"column_start":23,"column_end":28},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":1055},"to":{"krate":2,"index":1578}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_i32x4.rs","byte_start":157891,"byte_end":157896,"line_start":165,"line_end":165,"column_start":6,"column_end":11},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":1055},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_i32x4.rs","byte_start":158962,"byte_end":158967,"line_start":213,"line_end":213,"column_start":14,"column_end":19},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":1055},"to":{"krate":2,"index":1547}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_i32x4.rs","byte_start":159291,"byte_end":159296,"line_start":232,"line_end":232,"column_start":6,"column_end":11},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":1055},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_i32x4.rs","byte_start":159601,"byte_end":159606,"line_start":245,"line_end":245,"column_start":20,"column_end":25},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":1055},"to":{"krate":2,"index":2096}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_i32x4.rs","byte_start":159726,"byte_end":159731,"line_start":253,"line_end":253,"column_start":23,"column_end":28},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":1055},"to":{"krate":2,"index":1677}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_i32x4.rs","byte_start":159919,"byte_end":159924,"line_start":263,"line_end":263,"column_start":19,"column_end":24},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":1055},"to":{"krate":2,"index":1566}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_i32x4.rs","byte_start":160333,"byte_end":160338,"line_start":281,"line_end":281,"column_start":17,"column_end":22},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":1055},"to":{"krate":2,"index":1561}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_i32x4.rs","byte_start":160768,"byte_end":160773,"line_start":299,"line_end":299,"column_start":14,"column_end":19},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":1055},"to":{"krate":2,"index":1493}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_i32x4.rs","byte_start":161191,"byte_end":161196,"line_start":317,"line_end":317,"column_start":16,"column_end":21},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":1055},"to":{"krate":2,"index":1556}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_i32x4.rs","byte_start":161629,"byte_end":161634,"line_start":335,"line_end":335,"column_start":22,"column_end":27},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":1055},"to":{"krate":2,"index":1582}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wide-0.4.6\\src\\m_i32x4.rs","byte_start":161998,"byte_end":162003,"line_start":349,"line_end":349,"column_start":6,"column_end":11},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":1055},"to":{"krate":4294967295,"index":4294967295}}]}