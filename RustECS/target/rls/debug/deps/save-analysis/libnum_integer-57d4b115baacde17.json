{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43","program":"C:\\Users\\1an6r_000\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","num_integer","C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"i128\"","--cfg","feature=\"std\"","-C","metadata=57d4b115baacde17","-C","extra-filename=-57d4b115baacde17","--out-dir","z:\\GitRepositories\\RustECSPrototype\\hellorust\\target\\rls\\debug\\deps","-L","dependency=z:\\GitRepositories\\RustECSPrototype\\hellorust\\target\\rls\\debug\\deps","--extern","num_traits=z:\\GitRepositories\\RustECSPrototype\\hellorust\\target\\rls\\debug\\deps\\libnum_traits-835e39f207deee3e.rmeta","--cap-lints","allow","--cfg","has_i128","--error-format=json","--sysroot","C:\\Users\\1an6r_000\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"z:\\GitRepositories\\RustECSPrototype\\hellorust\\target\\rls\\debug\\deps\\libnum_integer-57d4b115baacde17.rmeta"},"prelude":{"crate_id":{"name":"num_integer","disambiguator":[14604972077130108992,690295960318603057]},"crate_root":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src","external_crates":[{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\lib.rs","num":1,"id":{"name":"core","disambiguator":[18086859731710399847,10284985903167786594]}},{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[7894171165123925799,1138153282057520136]}},{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[13588323328630583110,6322937768936249793]}},{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\lib.rs","num":4,"id":{"name":"std","disambiguator":[485752663891264790,8957311619763174036]}},{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[4981221114026975734,7560613652030165248]}},{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[14761482230397314318,7759443649452366185]}},{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[9184279872459162418,17237017963472574266]}},{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[17533675247542074538,1761975124356943313]}},{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7993782675770172864,12706040849351126287]}},{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2821791754508214868,4424070148662641494]}},{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\lib.rs","num":11,"id":{"name":"backtrace","disambiguator":[910629799165843388,8471953781625026915]}},{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[5889018422681230134,5892037208047200338]}},{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[2601722915210761880,4253013904849941641]}},{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\lib.rs","num":14,"id":{"name":"num_traits","disambiguator":[15080016231784111339,13136470225906921373]}}],"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\lib.rs","byte_start":472,"byte_end":41880,"line_start":11,"line_end":1343,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":27},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\lib.rs","byte_start":845,"byte_end":850,"line_start":30,"line_end":30,"column_start":16,"column_end":21},"alias_span":null,"name":"Roots","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":33},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\lib.rs","byte_start":868,"byte_end":872,"line_start":31,"line_end":31,"column_start":17,"column_end":21},"alias_span":null,"name":"cbrt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":35},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\lib.rs","byte_start":874,"byte_end":882,"line_start":31,"line_end":31,"column_start":23,"column_end":31},"alias_span":null,"name":"nth_root","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":31},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\lib.rs","byte_start":884,"byte_end":888,"line_start":31,"line_end":31,"column_start":33,"column_end":37},"alias_span":null,"name":"sqrt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":58},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\lib.rs","byte_start":922,"byte_end":929,"line_start":34,"line_end":34,"column_start":18,"column_end":25},"alias_span":null,"name":"Average","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":69},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\lib.rs","byte_start":949,"byte_end":961,"line_start":35,"line_end":35,"column_start":19,"column_end":31},"alias_span":null,"name":"average_ceil","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":67},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\lib.rs","byte_start":963,"byte_end":976,"line_start":35,"line_end":35,"column_start":33,"column_end":46},"alias_span":null,"name":"average_floor","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\lib.rs","byte_start":472,"byte_end":41880,"line_start":11,"line_end":1343,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":21},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":51},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":75},{"krate":0,"index":232},{"krate":0,"index":250},{"krate":0,"index":247},{"krate":0,"index":245},{"krate":0,"index":241},{"krate":0,"index":238},{"krate":0,"index":93},{"krate":0,"index":95},{"krate":0,"index":97},{"krate":0,"index":99},{"krate":0,"index":101},{"krate":0,"index":103},{"krate":0,"index":105},{"krate":0,"index":107},{"krate":0,"index":109},{"krate":0,"index":253},{"krate":0,"index":267},{"krate":0,"index":281},{"krate":0,"index":295},{"krate":0,"index":309},{"krate":0,"index":323},{"krate":0,"index":110},{"krate":0,"index":337},{"krate":0,"index":350},{"krate":0,"index":363},{"krate":0,"index":376},{"krate":0,"index":389},{"krate":0,"index":402},{"krate":0,"index":111},{"krate":0,"index":116},{"krate":0,"index":119},{"krate":0,"index":123},{"krate":0,"index":125},{"krate":0,"index":127}],"decl_id":null,"docs":" Integer trait and functions.","sig":null,"attributes":[{"value":"no_std","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\lib.rs","byte_start":659,"byte_end":669,"line_start":18,"line_end":18,"column_start":1,"column_end":11}}]},{"kind":"Trait","id":{"krate":0,"index":27},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\roots.rs","byte_start":42076,"byte_end":42081,"line_start":9,"line_end":9,"column_start":11,"column_end":16},"name":"Roots","qualname":"::roots::Roots","value":"Roots: Integer","parent":null,"children":[{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30}],"decl_id":null,"docs":" Provides methods to compute an integer's square root, cube root,\n and arbitrary `n`th root.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\roots.rs","byte_start":43618,"byte_end":43626,"line_start":55,"line_end":55,"column_start":8,"column_end":16},"name":"nth_root","qualname":"::roots::Roots::nth_root","value":"fn (&self, n: u32) -> Self","parent":{"krate":0,"index":27},"children":[],"decl_id":null,"docs":" Returns the truncated principal `n`th root of an integer\n -- `if x >= 0 { ⌊ⁿ√x⌋ } else { ⌈ⁿ√x⌉ }`","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\roots.rs","byte_start":44358,"byte_end":44362,"line_start":82,"line_end":82,"column_start":8,"column_end":12},"name":"sqrt","qualname":"::roots::Roots::sqrt","value":"fn (&self) -> Self","parent":{"krate":0,"index":27},"children":[],"decl_id":null,"docs":" Returns the truncated principal square root of an integer -- `⌊√x⌋`","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\roots.rs","byte_start":44341,"byte_end":44350,"line_start":81,"line_end":81,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\roots.rs","byte_start":45192,"byte_end":45196,"line_start":108,"line_end":108,"column_start":8,"column_end":12},"name":"cbrt","qualname":"::roots::Roots::cbrt","value":"fn (&self) -> Self","parent":{"krate":0,"index":27},"children":[],"decl_id":null,"docs":" Returns the truncated principal cube root of an integer --\n `if x >= 0 { ⌊∛x⌋ } else { ⌈∛x⌉ }`","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\roots.rs","byte_start":45175,"byte_end":45184,"line_start":107,"line_end":107,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":31},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\roots.rs","byte_start":45383,"byte_end":45387,"line_start":116,"line_end":116,"column_start":8,"column_end":12},"name":"sqrt","qualname":"::roots::sqrt","value":"fn <T> (x: T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the truncated principal square root of an integer --\n see [Roots::sqrt](trait.Roots.html#method.sqrt).\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\roots.rs","byte_start":45366,"byte_end":45375,"line_start":115,"line_end":115,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":33},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\roots.rs","byte_start":45560,"byte_end":45564,"line_start":123,"line_end":123,"column_start":8,"column_end":12},"name":"cbrt","qualname":"::roots::cbrt","value":"fn <T> (x: T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the truncated principal cube root of an integer --\n see [Roots::cbrt](trait.Roots.html#method.cbrt).\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\roots.rs","byte_start":45543,"byte_end":45552,"line_start":122,"line_end":122,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":35},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\roots.rs","byte_start":45748,"byte_end":45756,"line_start":130,"line_end":130,"column_start":8,"column_end":16},"name":"nth_root","qualname":"::roots::nth_root","value":"fn <T> (x: T, n: u32) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the truncated principal `n`th root of an integer --\n see [Roots::nth_root](trait.Roots.html#tymethod.nth_root).\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\roots.rs","byte_start":45731,"byte_end":45740,"line_start":129,"line_end":129,"column_start":1,"column_end":10}}]},{"kind":"Trait","id":{"krate":0,"index":58},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\average.rs","byte_start":54740,"byte_end":54747,"line_start":5,"line_end":5,"column_start":11,"column_end":18},"name":"Average","qualname":"::average::Average","value":"Average: Integer","parent":null,"children":[{"krate":0,"index":59},{"krate":0,"index":60}],"decl_id":null,"docs":" Provides methods to compute the average of two integers, without overflows.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\average.rs","byte_start":55325,"byte_end":55337,"line_start":23,"line_end":23,"column_start":8,"column_end":20},"name":"average_ceil","qualname":"::average::Average::average_ceil","value":"fn (&self, other: &Self) -> Self","parent":{"krate":0,"index":58},"children":[],"decl_id":null,"docs":" Returns the ceiling value of the average of `self` and `other`.\n -- `⌈(self + other)/2⌉`","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\average.rs","byte_start":55940,"byte_end":55953,"line_start":42,"line_end":42,"column_start":8,"column_end":21},"name":"average_floor","qualname":"::average::Average::average_floor","value":"fn (&self, other: &Self) -> Self","parent":{"krate":0,"index":58},"children":[],"decl_id":null,"docs":" Returns the floor value of the average of `self` and `other`.\n -- `⌊(self + other)/2⌋`","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":67},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\average.rs","byte_start":56837,"byte_end":56850,"line_start":70,"line_end":70,"column_start":8,"column_end":21},"name":"average_floor","qualname":"::average::average_floor","value":"fn <T> (x: T, y: T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the floor value of the average of `x` and `y` --\n see [Average::average_floor](trait.Average.html#tymethod.average_floor).\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\average.rs","byte_start":56820,"byte_end":56829,"line_start":69,"line_end":69,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":69},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\average.rs","byte_start":57063,"byte_end":57075,"line_start":76,"line_end":76,"column_start":8,"column_end":20},"name":"average_ceil","qualname":"::average::average_ceil","value":"fn <T> (x: T, y: T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the ceiling value of the average of `x` and `y` --\n see [Average::average_ceil](trait.Average.html#tymethod.average_ceil).\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\average.rs","byte_start":57046,"byte_end":57055,"line_start":75,"line_end":75,"column_start":1,"column_end":10}}]},{"kind":"Trait","id":{"krate":0,"index":75},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\lib.rs","byte_start":990,"byte_end":997,"line_start":37,"line_end":37,"column_start":11,"column_end":18},"name":"Integer","qualname":"::Integer","value":"Integer: Sized + Num + PartialOrd + Ord + Eq","parent":null,"children":[{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\lib.rs","byte_start":1533,"byte_end":1542,"line_start":54,"line_end":54,"column_start":8,"column_end":17},"name":"div_floor","qualname":"::Integer::div_floor","value":"fn (&self, other: &Self) -> Self","parent":{"krate":0,"index":75},"children":[],"decl_id":null,"docs":" Floored integer division.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\lib.rs","byte_start":2240,"byte_end":2249,"line_start":78,"line_end":78,"column_start":8,"column_end":17},"name":"mod_floor","qualname":"::Integer::mod_floor","value":"fn (&self, other: &Self) -> Self","parent":{"krate":0,"index":75},"children":[],"decl_id":null,"docs":" Floored integer modulo, satisfying:","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\lib.rs","byte_start":2772,"byte_end":2780,"line_start":96,"line_end":96,"column_start":8,"column_end":16},"name":"div_ceil","qualname":"::Integer::div_ceil","value":"fn (&self, other: &Self) -> Self","parent":{"krate":0,"index":75},"children":[],"decl_id":null,"docs":" Ceiled integer division.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\lib.rs","byte_start":3170,"byte_end":3173,"line_start":114,"line_end":114,"column_start":8,"column_end":11},"name":"gcd","qualname":"::Integer::gcd","value":"fn (&self, other: &Self) -> Self","parent":{"krate":0,"index":75},"children":[],"decl_id":null,"docs":" Greatest Common Divisor (GCD).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\lib.rs","byte_start":3448,"byte_end":3451,"line_start":126,"line_end":126,"column_start":8,"column_end":11},"name":"lcm","qualname":"::Integer::lcm","value":"fn (&self, other: &Self) -> Self","parent":{"krate":0,"index":75},"children":[],"decl_id":null,"docs":" Lowest Common Multiple (LCM).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\lib.rs","byte_start":3892,"byte_end":3899,"line_start":142,"line_end":142,"column_start":8,"column_end":15},"name":"gcd_lcm","qualname":"::Integer::gcd_lcm","value":"fn (&self, other: &Self) -> (Self, Self)","parent":{"krate":0,"index":75},"children":[],"decl_id":null,"docs":" Greatest Common Divisor (GCD) and\n Lowest Common Multiple (LCM) together.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\lib.rs","byte_start":3875,"byte_end":3884,"line_start":141,"line_end":141,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\lib.rs","byte_start":4583,"byte_end":4595,"line_start":165,"line_end":165,"column_start":8,"column_end":20},"name":"extended_gcd","qualname":"::Integer::extended_gcd","value":"fn (&self, other: &Self) -> ExtendedGcd<Self>","parent":{"krate":0,"index":75},"children":[],"decl_id":null,"docs":" Greatest common divisor and Bézout coefficients.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\lib.rs","byte_start":4566,"byte_end":4575,"line_start":164,"line_end":164,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\lib.rs","byte_start":5658,"byte_end":5674,"line_start":204,"line_end":204,"column_start":8,"column_end":24},"name":"extended_gcd_lcm","qualname":"::Integer::extended_gcd_lcm","value":"fn (&self, other: &Self) -> (ExtendedGcd<Self>, Self)","parent":{"krate":0,"index":75},"children":[],"decl_id":null,"docs":" Greatest common divisor, least common multiple, and Bézout coefficients.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\lib.rs","byte_start":5641,"byte_end":5650,"line_start":203,"line_end":203,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\lib.rs","byte_start":5887,"byte_end":5894,"line_start":212,"line_end":212,"column_start":8,"column_end":15},"name":"divides","qualname":"::Integer::divides","value":"fn (&self, other: &Self) -> bool","parent":{"krate":0,"index":75},"children":[],"decl_id":null,"docs":" Deprecated, use `is_multiple_of` instead.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\lib.rs","byte_start":6184,"byte_end":6198,"line_start":223,"line_end":223,"column_start":8,"column_end":22},"name":"is_multiple_of","qualname":"::Integer::is_multiple_of","value":"fn (&self, other: &Self) -> bool","parent":{"krate":0,"index":75},"children":[],"decl_id":null,"docs":" Returns `true` if `self` is a multiple of `other`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\lib.rs","byte_start":6457,"byte_end":6464,"line_start":234,"line_end":234,"column_start":8,"column_end":15},"name":"is_even","qualname":"::Integer::is_even","value":"fn (&self) -> bool","parent":{"krate":0,"index":75},"children":[],"decl_id":null,"docs":" Returns `true` if the number is even.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\lib.rs","byte_start":6706,"byte_end":6712,"line_start":245,"line_end":245,"column_start":8,"column_end":14},"name":"is_odd","qualname":"::Integer::is_odd","value":"fn (&self) -> bool","parent":{"krate":0,"index":75},"children":[],"decl_id":null,"docs":" Returns `true` if the number is odd.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\lib.rs","byte_start":7334,"byte_end":7341,"line_start":264,"line_end":264,"column_start":8,"column_end":15},"name":"div_rem","qualname":"::Integer::div_rem","value":"fn (&self, other: &Self) -> (Self, Self)","parent":{"krate":0,"index":75},"children":[],"decl_id":null,"docs":" Simultaneous truncated integer division and modulus.\n Returns `(quotient, remainder)`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\lib.rs","byte_start":8031,"byte_end":8044,"line_start":283,"line_end":283,"column_start":8,"column_end":21},"name":"div_mod_floor","qualname":"::Integer::div_mod_floor","value":"fn (&self, other: &Self) -> (Self, Self)","parent":{"krate":0,"index":75},"children":[],"decl_id":null,"docs":" Simultaneous floored integer division and modulus.\n Returns `(quotient, remainder)`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\lib.rs","byte_start":8858,"byte_end":8874,"line_start":307,"line_end":307,"column_start":8,"column_end":24},"name":"next_multiple_of","qualname":"::Integer::next_multiple_of","value":"fn (&self, other: &Self) -> Self","parent":{"krate":0,"index":75},"children":[],"decl_id":null,"docs":" Rounds up to nearest multiple of argument.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\lib.rs","byte_start":8841,"byte_end":8850,"line_start":306,"line_end":306,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\lib.rs","byte_start":9851,"byte_end":9867,"line_start":340,"line_end":340,"column_start":8,"column_end":24},"name":"prev_multiple_of","qualname":"::Integer::prev_multiple_of","value":"fn (&self, other: &Self) -> Self","parent":{"krate":0,"index":75},"children":[],"decl_id":null,"docs":" Rounds down to nearest multiple of argument.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\lib.rs","byte_start":9834,"byte_end":9843,"line_start":339,"line_end":339,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":232},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\lib.rs","byte_start":10202,"byte_end":10213,"line_start":355,"line_end":355,"column_start":12,"column_end":23},"name":"ExtendedGcd","qualname":"::ExtendedGcd","value":"ExtendedGcd { gcd, x, y }","parent":null,"children":[{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237}],"decl_id":null,"docs":" Greatest common divisor and Bézout coefficients","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\lib.rs","byte_start":10191,"byte_end":10281,"line_start":355,"line_end":360,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\lib.rs","byte_start":10191,"byte_end":10281,"line_start":355,"line_end":360,"column_start":1,"column_end":2}}]},{"kind":"Field","id":{"krate":0,"index":234},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\lib.rs","byte_start":10227,"byte_end":10230,"line_start":356,"line_end":356,"column_start":9,"column_end":12},"name":"gcd","qualname":"::ExtendedGcd::gcd","value":"A","parent":{"krate":0,"index":232},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":235},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\lib.rs","byte_start":10243,"byte_end":10244,"line_start":357,"line_end":357,"column_start":9,"column_end":10},"name":"x","qualname":"::ExtendedGcd::x","value":"A","parent":{"krate":0,"index":232},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":236},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\lib.rs","byte_start":10257,"byte_end":10258,"line_start":358,"line_end":358,"column_start":9,"column_end":10},"name":"y","qualname":"::ExtendedGcd::y","value":"A","parent":{"krate":0,"index":232},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":93},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\lib.rs","byte_start":10346,"byte_end":10353,"line_start":364,"line_end":364,"column_start":8,"column_end":15},"name":"div_rem","qualname":"::div_rem","value":"fn <T> (x: T, y: T) -> (T, T)","parent":null,"children":[],"decl_id":null,"docs":" Simultaneous integer division and modulus\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\lib.rs","byte_start":10329,"byte_end":10338,"line_start":363,"line_end":363,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":95},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\lib.rs","byte_start":10456,"byte_end":10465,"line_start":369,"line_end":369,"column_start":8,"column_end":17},"name":"div_floor","qualname":"::div_floor","value":"fn <T> (x: T, y: T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Floored integer division\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\lib.rs","byte_start":10439,"byte_end":10448,"line_start":368,"line_end":368,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":97},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\lib.rs","byte_start":10564,"byte_end":10573,"line_start":374,"line_end":374,"column_start":8,"column_end":17},"name":"mod_floor","qualname":"::mod_floor","value":"fn <T> (x: T, y: T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Floored integer modulus\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\lib.rs","byte_start":10547,"byte_end":10556,"line_start":373,"line_end":373,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":99},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\lib.rs","byte_start":10698,"byte_end":10711,"line_start":379,"line_end":379,"column_start":8,"column_end":21},"name":"div_mod_floor","qualname":"::div_mod_floor","value":"fn <T> (x: T, y: T) -> (T, T)","parent":null,"children":[],"decl_id":null,"docs":" Simultaneous floored integer division and modulus\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\lib.rs","byte_start":10681,"byte_end":10690,"line_start":378,"line_end":378,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":101},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\lib.rs","byte_start":10819,"byte_end":10827,"line_start":384,"line_end":384,"column_start":8,"column_end":16},"name":"div_ceil","qualname":"::div_ceil","value":"fn <T> (x: T, y: T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Ceiled integer division\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\lib.rs","byte_start":10802,"byte_end":10811,"line_start":383,"line_end":383,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":103},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\lib.rs","byte_start":11017,"byte_end":11020,"line_start":391,"line_end":391,"column_start":8,"column_end":11},"name":"gcd","qualname":"::gcd","value":"fn <T> (x: T, y: T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Calculates the Greatest Common Divisor (GCD) of the number and `other`. The\n result is always positive.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\lib.rs","byte_start":10992,"byte_end":11009,"line_start":390,"line_end":390,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":105},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\lib.rs","byte_start":11168,"byte_end":11171,"line_start":396,"line_end":396,"column_start":8,"column_end":11},"name":"lcm","qualname":"::lcm","value":"fn <T> (x: T, y: T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Calculates the Lowest Common Multiple (LCM) of the number and `other`.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\lib.rs","byte_start":11143,"byte_end":11160,"line_start":395,"line_end":395,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":107},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\lib.rs","byte_start":11358,"byte_end":11365,"line_start":403,"line_end":403,"column_start":8,"column_end":15},"name":"gcd_lcm","qualname":"::gcd_lcm","value":"fn <T> (x: T, y: T) -> (T, T)","parent":null,"children":[],"decl_id":null,"docs":" Calculates the Greatest Common Divisor (GCD) and\n Lowest Common Multiple (LCM) of the number and `other`.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\lib.rs","byte_start":11333,"byte_end":11350,"line_start":402,"line_end":402,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":111},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\lib.rs","byte_start":33645,"byte_end":33657,"line_start":1017,"line_end":1017,"column_start":12,"column_end":24},"name":"IterBinomial","qualname":"::IterBinomial","value":"IterBinomial {  }","parent":null,"children":[{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115}],"decl_id":null,"docs":" An iterator over binomial coefficients.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\lib.rs","byte_start":34280,"byte_end":34283,"line_start":1045,"line_end":1045,"column_start":12,"column_end":15},"name":"new","qualname":"<IterBinomial<T>>::new","value":"fn (n: T) -> IterBinomial<T>","parent":null,"children":[],"decl_id":null,"docs":" For a given n, iterate over all binomial coefficients binomial(n, k), for k=0...n.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":125},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\lib.rs","byte_start":35711,"byte_end":35719,"line_start":1105,"line_end":1105,"column_start":8,"column_end":16},"name":"binomial","qualname":"::binomial","value":"fn <T> (mut n: T, k: T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Calculate the binomial coefficient.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":127},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\lib.rs","byte_start":36245,"byte_end":36256,"line_start":1127,"line_end":1127,"column_start":8,"column_end":19},"name":"multinomial","qualname":"::multinomial","value":"fn <T> (k: &[T]) -> T","parent":null,"children":[],"decl_id":null,"docs":" Calculate the multinomial coefficient.\n","sig":null,"attributes":[]}],"impls":[{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\average.rs","byte_start":56007,"byte_end":56008,"line_start":45,"line_end":45,"column_start":21,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":65},{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\lib.rs","byte_start":33704,"byte_end":33716,"line_start":1023,"line_end":1023,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\lib.rs","byte_start":34443,"byte_end":34455,"line_start":1054,"line_end":1054,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":121},{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\roots.rs","byte_start":42083,"byte_end":42090,"line_start":9,"line_end":9,"column_start":18,"column_end":25},"kind":"SuperTrait","from":{"krate":0,"index":75},"to":{"krate":0,"index":27}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\average.rs","byte_start":54749,"byte_end":54756,"line_start":5,"line_end":5,"column_start":20,"column_end":27},"kind":"SuperTrait","from":{"krate":0,"index":75},"to":{"krate":0,"index":58}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\average.rs","byte_start":56007,"byte_end":56008,"line_start":45,"line_end":45,"column_start":21,"column_end":22},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":62},"to":{"krate":0,"index":58}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\lib.rs","byte_start":999,"byte_end":1004,"line_start":37,"line_end":37,"column_start":20,"column_end":25},"kind":"SuperTrait","from":{"krate":1,"index":1442},"to":{"krate":0,"index":75}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\lib.rs","byte_start":1007,"byte_end":1010,"line_start":37,"line_end":37,"column_start":28,"column_end":31},"kind":"SuperTrait","from":{"krate":14,"index":598},"to":{"krate":0,"index":75}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\lib.rs","byte_start":1013,"byte_end":1023,"line_start":37,"line_end":37,"column_start":34,"column_end":44},"kind":"SuperTrait","from":{"krate":1,"index":1970},"to":{"krate":0,"index":75}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\lib.rs","byte_start":1026,"byte_end":1029,"line_start":37,"line_end":37,"column_start":47,"column_end":50},"kind":"SuperTrait","from":{"krate":1,"index":1960},"to":{"krate":0,"index":75}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\lib.rs","byte_start":1032,"byte_end":1034,"line_start":37,"line_end":37,"column_start":53,"column_end":55},"kind":"SuperTrait","from":{"krate":1,"index":1940},"to":{"krate":0,"index":75}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\lib.rs","byte_start":33704,"byte_end":33716,"line_start":1023,"line_end":1023,"column_start":9,"column_end":21},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":111},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-integer-0.1.43\\src\\lib.rs","byte_start":34443,"byte_end":34455,"line_start":1054,"line_end":1054,"column_start":22,"column_end":34},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":111},"to":{"krate":1,"index":3202}}]}