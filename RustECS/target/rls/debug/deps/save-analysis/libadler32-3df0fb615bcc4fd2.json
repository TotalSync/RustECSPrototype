{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.2.0","program":"C:\\Users\\1an6r_000\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--edition=2018","--crate-name","adler32","C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.2.0\\src\\lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=3df0fb615bcc4fd2","-C","extra-filename=-3df0fb615bcc4fd2","--out-dir","z:\\GitRepositories\\RustECSPrototype\\hellorust\\target\\rls\\debug\\deps","-L","dependency=z:\\GitRepositories\\RustECSPrototype\\hellorust\\target\\rls\\debug\\deps","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\1an6r_000\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"z:\\GitRepositories\\RustECSPrototype\\hellorust\\target\\rls\\debug\\deps\\libadler32-3df0fb615bcc4fd2.rmeta"},"prelude":{"crate_id":{"name":"adler32","disambiguator":[12013583614489530502,914115237765077220]},"crate_root":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.2.0\\src","external_crates":[{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.2.0\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[485752663891264790,8957311619763174036]}},{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.2.0\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[18086859731710399847,10284985903167786594]}},{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.2.0\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[7894171165123925799,1138153282057520136]}},{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.2.0\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13588323328630583110,6322937768936249793]}},{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.2.0\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[4981221114026975734,7560613652030165248]}},{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.2.0\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[14761482230397314318,7759443649452366185]}},{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.2.0\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[9184279872459162418,17237017963472574266]}},{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.2.0\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[17533675247542074538,1761975124356943313]}},{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.2.0\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7993782675770172864,12706040849351126287]}},{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.2.0\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2821791754508214868,4424070148662641494]}},{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.2.0\\src\\lib.rs","num":11,"id":{"name":"backtrace","disambiguator":[910629799165843388,8471953781625026915]}},{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.2.0\\src\\lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[5889018422681230134,5892037208047200338]}},{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.2.0\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[2601722915210761880,4253013904849941641]}}],"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.2.0\\src\\lib.rs","byte_start":0,"byte_end":10015,"line_start":1,"line_end":324,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.2.0\\src\\lib.rs","byte_start":0,"byte_end":10015,"line_start":1,"line_end":324,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.2.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":32},{"krate":0,"index":35},{"krate":0,"index":19},{"krate":0,"index":21},{"krate":0,"index":29}],"decl_id":null,"docs":" A minimal implementation of Adler32 for Rust.","sig":null,"attributes":[{"value":"forbid(unsafe_code)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.2.0\\src\\lib.rs","byte_start":407,"byte_end":430,"line_start":11,"line_end":11,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":32},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.2.0\\src\\lib.rs","byte_start":2974,"byte_end":2988,"line_start":87,"line_end":87,"column_start":12,"column_end":26},"name":"RollingAdler32","qualname":"::RollingAdler32","value":"RollingAdler32 {  }","parent":null,"children":[{"krate":0,"index":33},{"krate":0,"index":34}],"decl_id":null,"docs":" A rolling version of the Adler32 hash, which can 'forget' past bytes.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":22},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.2.0\\src\\lib.rs","byte_start":3217,"byte_end":3220,"line_start":100,"line_end":100,"column_start":12,"column_end":15},"name":"new","qualname":"<RollingAdler32>::new","value":"fn () -> RollingAdler32","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty Adler32 context (with hash 1).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":23},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.2.0\\src\\lib.rs","byte_start":3354,"byte_end":3364,"line_start":105,"line_end":105,"column_start":12,"column_end":22},"name":"from_value","qualname":"<RollingAdler32>::from_value","value":"fn (adler32: u32) -> RollingAdler32","parent":null,"children":[],"decl_id":null,"docs":" Creates an Adler32 context with the given initial value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.2.0\\src\\lib.rs","byte_start":3593,"byte_end":3604,"line_start":112,"line_end":112,"column_start":12,"column_end":23},"name":"from_buffer","qualname":"<RollingAdler32>::from_buffer","value":"fn (buffer: &[u8]) -> RollingAdler32","parent":null,"children":[],"decl_id":null,"docs":" Convenience function initializing a context from the hash of a buffer.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.2.0\\src\\lib.rs","byte_start":3787,"byte_end":3791,"line_start":119,"line_end":119,"column_start":12,"column_end":16},"name":"hash","qualname":"<RollingAdler32>::hash","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the current hash.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.2.0\\src\\lib.rs","byte_start":3939,"byte_end":3945,"line_start":124,"line_end":124,"column_start":12,"column_end":18},"name":"remove","qualname":"<RollingAdler32>::remove","value":"fn (&mut self, size: usize, byte: u8) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Removes the given `byte` that was fed to the algorithm `size` bytes ago.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.2.0\\src\\lib.rs","byte_start":4284,"byte_end":4290,"line_start":133,"line_end":133,"column_start":12,"column_end":18},"name":"update","qualname":"<RollingAdler32>::update","value":"fn (&mut self, byte: u8) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Feeds a new `byte` to the algorithm to update the hash.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.2.0\\src\\lib.rs","byte_start":4521,"byte_end":4534,"line_start":140,"line_end":140,"column_start":12,"column_end":25},"name":"update_buffer","qualname":"<RollingAdler32>::update_buffer","value":"fn (&mut self, buffer: &[u8]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Feeds a vector of bytes to the algorithm to update the hash.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":29},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.2.0\\src\\lib.rs","byte_start":6143,"byte_end":6150,"line_start":196,"line_end":196,"column_start":8,"column_end":15},"name":"adler32","qualname":"::adler32","value":"fn <R> (mut reader: R) -> std::io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Consume a Read object and returns the Adler32 hash.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.2.0\\src\\lib.rs","byte_start":6112,"byte_end":6135,"line_start":195,"line_end":195,"column_start":1,"column_end":24}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.2.0\\src\\lib.rs","byte_start":3035,"byte_end":3049,"line_start":92,"line_end":92,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":20}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.2.0\\src\\lib.rs","byte_start":3133,"byte_end":3147,"line_start":98,"line_end":98,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.2.0\\src\\lib.rs","byte_start":3035,"byte_end":3049,"line_start":92,"line_end":92,"column_start":18,"column_end":32},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":32},"to":{"krate":2,"index":2080}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.2.0\\src\\lib.rs","byte_start":3133,"byte_end":3147,"line_start":98,"line_end":98,"column_start":6,"column_end":20},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":32},"to":{"krate":4294967295,"index":4294967295}}]}