{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1","program":"C:\\Users\\1an6r_000\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","autocfg","C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata,link","-C","debuginfo=2","-C","metadata=9907fe46f55a0074","-C","extra-filename=-9907fe46f55a0074","--out-dir","z:\\GitRepositories\\RustECSPrototype\\hellorust\\target\\rls\\debug\\deps","-L","dependency=z:\\GitRepositories\\RustECSPrototype\\hellorust\\target\\rls\\debug\\deps","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\1an6r_000\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"z:\\GitRepositories\\RustECSPrototype\\hellorust\\target\\rls\\debug\\deps\\libautocfg-9907fe46f55a0074.rmeta"},"prelude":{"crate_id":{"name":"autocfg","disambiguator":[10224151858294290172,15052368226127517346]},"crate_root":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src","external_crates":[{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[485752663891264790,8957311619763174036]}},{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[18086859731710399847,10284985903167786594]}},{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[7894171165123925799,1138153282057520136]}},{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13588323328630583110,6322937768936249793]}},{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[4981221114026975734,7560613652030165248]}},{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[14761482230397314318,7759443649452366185]}},{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[9184279872459162418,17237017963472574266]}},{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[17533675247542074538,1761975124356943313]}},{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7993782675770172864,12706040849351126287]}},{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2821791754508214868,4424070148662641494]}},{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","num":11,"id":{"name":"backtrace","disambiguator":[910629799165843388,8471953781625026915]}},{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[5889018422681230134,5892037208047200338]}},{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[2601722915210761880,4253013904849941641]}}],"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":0,"byte_end":14197,"line_start":1,"line_end":438,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":93},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":2338,"byte_end":2343,"line_start":73,"line_end":73,"column_start":16,"column_end":21},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":0,"byte_end":14197,"line_start":1,"line_end":438,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":27},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":54},{"krate":0,"index":141},{"krate":0,"index":150},{"krate":0,"index":148},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":86},{"krate":0,"index":88}],"decl_id":null,"docs":" A Rust library for build scripts to automatically configure code based on\n compiler support.  Code snippets are dynamically tested to see if the `rustc`\n will accept them, rather than hard-coding specific version support.","sig":null,"attributes":[{"value":"deny(missing_debug_implementations)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":1591,"byte_end":1630,"line_start":45,"line_end":45,"column_start":1,"column_end":40}},{"value":"deny(missing_docs)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":1631,"byte_end":1653,"line_start":46,"line_end":46,"column_start":1,"column_end":23}},{"value":"allow(unknown_lints)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":1731,"byte_end":1755,"line_start":48,"line_end":48,"column_start":1,"column_end":25}},{"value":"allow(bare_trait_objects)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":1756,"byte_end":1785,"line_start":49,"line_end":49,"column_start":1,"column_end":30}},{"value":"allow(ellipsis_inclusive_range_patterns)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":1786,"byte_end":1830,"line_start":50,"line_end":50,"column_start":1,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":93},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\error.rs","byte_start":14348,"byte_end":14353,"line_start":9,"line_end":9,"column_start":12,"column_end":17},"name":"Error","qualname":"::error::Error","value":"Error {  }","parent":null,"children":[{"krate":0,"index":94}],"decl_id":null,"docs":" A common error type for the `autocfg` crate.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":141},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":2516,"byte_end":2523,"line_start":83,"line_end":83,"column_start":12,"column_end":19},"name":"AutoCfg","qualname":"::AutoCfg","value":"AutoCfg {  }","parent":null,"children":[{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147}],"decl_id":null,"docs":" Helper to detect compiler features for `cfg` output in build scripts.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":55},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":2858,"byte_end":2862,"line_start":97,"line_end":97,"column_start":8,"column_end":12},"name":"emit","qualname":"::emit","value":"fn (cfg: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Writes a config flag for rustc on standard out.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":56},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":3198,"byte_end":3208,"line_start":107,"line_end":107,"column_start":8,"column_end":18},"name":"rerun_path","qualname":"::rerun_path","value":"fn (path: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Writes a line telling Cargo to rerun the build script if `path` changes.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":57},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":3586,"byte_end":3595,"line_start":118,"line_end":118,"column_start":8,"column_end":17},"name":"rerun_env","qualname":"::rerun_env","value":"fn (var: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Writes a line telling Cargo to rerun the build script if the environment\n variable `var` changes.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":58},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":3778,"byte_end":3781,"line_start":127,"line_end":127,"column_start":8,"column_end":11},"name":"new","qualname":"::new","value":"fn () -> AutoCfg","parent":null,"children":[],"decl_id":null,"docs":" Create a new `AutoCfg` instance.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":4153,"byte_end":4156,"line_start":140,"line_end":140,"column_start":12,"column_end":15},"name":"new","qualname":"<AutoCfg>::new","value":"fn () -> Result<Self, Error>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `AutoCfg` instance.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":4657,"byte_end":4665,"line_start":155,"line_end":155,"column_start":12,"column_end":20},"name":"with_dir","qualname":"<AutoCfg>::with_dir","value":"fn <T> (dir: T) -> Result<Self, Error>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `AutoCfg` instance with the specified output directory.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":7211,"byte_end":7230,"line_start":217,"line_end":217,"column_start":12,"column_end":31},"name":"probe_rustc_version","qualname":"<AutoCfg>::probe_rustc_version","value":"fn (&self, major: usize, minor: usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Test whether the current `rustc` reports a version greater than\n or equal to \"`major`.`minor`\".\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":7490,"byte_end":7508,"line_start":223,"line_end":223,"column_start":12,"column_end":30},"name":"emit_rustc_version","qualname":"<AutoCfg>::emit_rustc_version","value":"fn (&self, major: usize, minor: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets a `cfg` value of the form `rustc_major_minor`, like `rustc_1_29`,\n if the current `rustc` is at least that version.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":9086,"byte_end":9105,"line_start":272,"line_end":272,"column_start":12,"column_end":31},"name":"probe_sysroot_crate","qualname":"<AutoCfg>::probe_sysroot_crate","value":"fn (&self, name: &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests whether the given sysroot crate can be used.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":9370,"byte_end":9388,"line_start":278,"line_end":278,"column_start":12,"column_end":30},"name":"emit_sysroot_crate","qualname":"<AutoCfg>::emit_sysroot_crate","value":"fn (&self, name: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Emits a config value `has_CRATE` if `probe_sysroot_crate` returns true.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":9722,"byte_end":9732,"line_start":291,"line_end":291,"column_start":12,"column_end":22},"name":"probe_path","qualname":"<AutoCfg>::probe_path","value":"fn (&self, path: &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests whether the given path can be used.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":10041,"byte_end":10054,"line_start":299,"line_end":299,"column_start":12,"column_end":25},"name":"emit_has_path","qualname":"<AutoCfg>::emit_has_path","value":"fn (&self, path: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Emits a config value `has_PATH` if `probe_path` returns true.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":10257,"byte_end":10270,"line_start":306,"line_end":306,"column_start":12,"column_end":25},"name":"emit_path_cfg","qualname":"<AutoCfg>::emit_path_cfg","value":"fn (&self, path: &str, cfg: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Emits the given `cfg` value if `probe_path` returns true.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":10598,"byte_end":10609,"line_start":319,"line_end":319,"column_start":12,"column_end":23},"name":"probe_trait","qualname":"<AutoCfg>::probe_trait","value":"fn (&self, name: &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests whether the given trait can be used.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":10960,"byte_end":10974,"line_start":328,"line_end":328,"column_start":12,"column_end":26},"name":"emit_has_trait","qualname":"<AutoCfg>::emit_has_trait","value":"fn (&self, name: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Emits a config value `has_TRAIT` if `probe_trait` returns true.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":11179,"byte_end":11193,"line_start":335,"line_end":335,"column_start":12,"column_end":26},"name":"emit_trait_cfg","qualname":"<AutoCfg>::emit_trait_cfg","value":"fn (&self, name: &str, cfg: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Emits the given `cfg` value if `probe_trait` returns true.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":11510,"byte_end":11520,"line_start":348,"line_end":348,"column_start":12,"column_end":22},"name":"probe_type","qualname":"<AutoCfg>::probe_type","value":"fn (&self, name: &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests whether the given type can be used.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":11856,"byte_end":11869,"line_start":357,"line_end":357,"column_start":12,"column_end":25},"name":"emit_has_type","qualname":"<AutoCfg>::emit_has_type","value":"fn (&self, name: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Emits a config value `has_TYPE` if `probe_type` returns true.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":12072,"byte_end":12085,"line_start":364,"line_end":364,"column_start":12,"column_end":25},"name":"emit_type_cfg","qualname":"<AutoCfg>::emit_type_cfg","value":"fn (&self, name: &str, cfg: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Emits the given `cfg` value if `probe_type` returns true.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":12417,"byte_end":12433,"line_start":377,"line_end":377,"column_start":12,"column_end":28},"name":"probe_expression","qualname":"<AutoCfg>::probe_expression","value":"fn (&self, expr: &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests whether the given expression can be used.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":12653,"byte_end":12672,"line_start":383,"line_end":383,"column_start":12,"column_end":31},"name":"emit_expression_cfg","qualname":"<AutoCfg>::emit_expression_cfg","value":"fn (&self, expr: &str, cfg: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Emits the given `cfg` value if `probe_expression` returns true.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":13022,"byte_end":13036,"line_start":396,"line_end":396,"column_start":12,"column_end":26},"name":"probe_constant","qualname":"<AutoCfg>::probe_constant","value":"fn (&self, expr: &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests whether the given constant expression can be used.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":13255,"byte_end":13272,"line_start":402,"line_end":402,"column_start":12,"column_end":29},"name":"emit_constant_cfg","qualname":"<AutoCfg>::emit_constant_cfg","value":"fn (&self, expr: &str, cfg: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Emits the given `cfg` value if `probe_constant` returns true.\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\error.rs","byte_start":14402,"byte_end":14407,"line_start":13,"line_end":13,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":34},{"krate":0,"index":35}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\error.rs","byte_start":14770,"byte_end":14775,"line_start":28,"line_end":28,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":37}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\version.rs","byte_start":15901,"byte_end":15908,"line_start":15,"line_end":15,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":51},{"krate":0,"index":52}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":3833,"byte_end":3840,"line_start":131,"line_end":131,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\error.rs","byte_start":14402,"byte_end":14407,"line_start":13,"line_end":13,"column_start":23,"column_end":28},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":93},"to":{"krate":1,"index":1542}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\error.rs","byte_start":14770,"byte_end":14775,"line_start":28,"line_end":28,"column_start":23,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":93},"to":{"krate":2,"index":6833}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\version.rs","byte_start":15901,"byte_end":15908,"line_start":15,"line_end":15,"column_start":6,"column_end":13},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":112},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":3833,"byte_end":3840,"line_start":131,"line_end":131,"column_start":6,"column_end":13},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":141},"to":{"krate":4294967295,"index":4294967295}}]}