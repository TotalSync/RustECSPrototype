{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3","program":"C:\\Users\\1an6r_000\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","xml","C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata,link","-C","debuginfo=2","-C","metadata=474546e0982125f6","-C","extra-filename=-474546e0982125f6","--out-dir","z:\\GitRepositories\\RustECSPrototype\\hellorust\\target\\rls\\debug\\deps","-L","dependency=z:\\GitRepositories\\RustECSPrototype\\hellorust\\target\\rls\\debug\\deps","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\1an6r_000\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"z:\\GitRepositories\\RustECSPrototype\\hellorust\\target\\rls\\debug\\deps\\libxml-474546e0982125f6.rmeta"},"prelude":{"crate_id":{"name":"xml","disambiguator":[11045974343495594439,17057240148514848552]},"crate_root":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src","external_crates":[{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src/lib.rs","num":1,"id":{"name":"std","disambiguator":[485752663891264790,8957311619763174036]}},{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src/lib.rs","num":2,"id":{"name":"core","disambiguator":[18086859731710399847,10284985903167786594]}},{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[7894171165123925799,1138153282057520136]}},{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13588323328630583110,6322937768936249793]}},{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[4981221114026975734,7560613652030165248]}},{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[14761482230397314318,7759443649452366185]}},{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[9184279872459162418,17237017963472574266]}},{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[17533675247542074538,1761975124356943313]}},{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7993782675770172864,12706040849351126287]}},{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2821791754508214868,4424070148662641494]}},{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src/lib.rs","num":11,"id":{"name":"backtrace","disambiguator":[910629799165843388,8471953781625026915]}},{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[5889018422681230134,5892037208047200338]}},{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src/lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[2601722915210761880,4253013904849941641]}}],"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src/lib.rs","byte_start":24,"byte_end":571,"line_start":2,"line_end":29,"column_start":1,"column_end":10}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":641},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src/lib.rs","byte_start":326,"byte_end":337,"line_start":16,"line_end":16,"column_start":17,"column_end":28},"alias_span":null,"name":"EventReader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1208},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src/lib.rs","byte_start":355,"byte_end":367,"line_start":17,"line_end":17,"column_start":17,"column_end":29},"alias_span":null,"name":"ParserConfig","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":831},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src/lib.rs","byte_start":385,"byte_end":396,"line_start":18,"line_end":18,"column_start":17,"column_end":28},"alias_span":null,"name":"EventWriter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1333},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src/lib.rs","byte_start":414,"byte_end":427,"line_start":19,"line_end":19,"column_start":17,"column_end":30},"alias_span":null,"name":"EmitterConfig","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1208},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\mod.rs","byte_start":37992,"byte_end":38004,"line_start":11,"line_end":11,"column_start":23,"column_end":35},"alias_span":null,"name":"ParserConfig","value":"","parent":{"krate":0,"index":252}},{"kind":"Use","ref_id":{"krate":0,"index":1243},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\mod.rs","byte_start":38028,"byte_end":38036,"line_start":12,"line_end":12,"column_start":23,"column_end":31},"alias_span":null,"name":"XmlEvent","value":"","parent":{"krate":0,"index":252}},{"kind":"Use","ref_id":{"krate":0,"index":1291},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\mod.rs","byte_start":38151,"byte_end":38156,"line_start":22,"line_end":22,"column_start":23,"column_end":28},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":252}},{"kind":"Use","ref_id":{"krate":0,"index":1277},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\mod.rs","byte_start":38158,"byte_end":38167,"line_start":22,"line_end":22,"column_start":30,"column_end":39},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":252}},{"kind":"Use","ref_id":{"krate":0,"index":713},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\mod.rs","byte_start":143536,"byte_end":143542,"line_start":6,"line_end":6,"column_start":24,"column_end":30},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":677}},{"kind":"Use","ref_id":{"krate":0,"index":1303},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\mod.rs","byte_start":143567,"byte_end":143579,"line_start":7,"line_end":7,"column_start":24,"column_end":36},"alias_span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\mod.rs","byte_start":143583,"byte_end":143588,"line_start":7,"line_end":7,"column_start":40,"column_end":45},"name":"Error","value":"","parent":{"krate":0,"index":677}},{"kind":"Use","ref_id":{"krate":0,"index":1333},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\mod.rs","byte_start":143612,"byte_end":143625,"line_start":8,"line_end":8,"column_start":23,"column_end":36},"alias_span":null,"name":"EmitterConfig","value":"","parent":{"krate":0,"index":677}},{"kind":"Use","ref_id":{"krate":0,"index":1373},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\mod.rs","byte_start":143649,"byte_end":143657,"line_start":9,"line_end":9,"column_start":23,"column_end":31},"alias_span":null,"name":"XmlEvent","value":"","parent":{"krate":0,"index":677}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src/lib.rs","byte_start":24,"byte_end":571,"line_start":2,"line_end":29,"column_start":1,"column_end":10},"name":"","qualname":"::","value":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src/lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":76},{"krate":0,"index":95},{"krate":0,"index":118},{"krate":0,"index":150},{"krate":0,"index":252},{"krate":0,"index":677},{"krate":0,"index":844}],"decl_id":null,"docs":" This crate currently provides an almost XML 1.0/1.1-compliant pull parser.\n","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src/lib.rs","byte_start":24,"byte_end":44,"line_start":2,"line_end":2,"column_start":1,"column_end":21}},{"value":"allow(unused_variables)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src/lib.rs","byte_start":45,"byte_end":72,"line_start":3,"line_end":3,"column_start":1,"column_end":28}},{"value":"forbid(non_camel_case_types)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src/lib.rs","byte_start":73,"byte_end":105,"line_start":4,"line_end":4,"column_start":1,"column_end":33}},{"value":"forbid(unsafe_code)","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src/lib.rs","byte_start":106,"byte_end":129,"line_start":5,"line_end":5,"column_start":1,"column_end":24}}]},{"kind":"Mod","id":{"krate":0,"index":16},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\macros.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"macros","qualname":"::macros","value":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\macros.rs","parent":null,"children":[{"krate":0,"index":17},{"krate":0,"index":18}],"decl_id":null,"docs":" Contains several macros used in this crate.\n","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\macros.rs","byte_start":573,"byte_end":586,"line_start":1,"line_end":1,"column_start":1,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":19},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\name.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"name","qualname":"::name","value":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\name.rs","parent":null,"children":[{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":861},{"krate":0,"index":883},{"krate":0,"index":880},{"krate":0,"index":876},{"krate":0,"index":873},{"krate":0,"index":869},{"krate":0,"index":866},{"krate":0,"index":23},{"krate":0,"index":26},{"krate":0,"index":29},{"krate":0,"index":32},{"krate":0,"index":43},{"krate":0,"index":48},{"krate":0,"index":885},{"krate":0,"index":899},{"krate":0,"index":896},{"krate":0,"index":894},{"krate":0,"index":891},{"krate":0,"index":889},{"krate":0,"index":52},{"krate":0,"index":54},{"krate":0,"index":69},{"krate":0,"index":72}],"decl_id":null,"docs":" Contains XML qualified names manipulation types and functions.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":861},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\name.rs","byte_start":3469,"byte_end":3473,"line_start":48,"line_end":48,"column_start":12,"column_end":16},"name":"Name","qualname":"::name::Name","value":"Name { local_name, namespace, prefix }","parent":null,"children":[{"krate":0,"index":863},{"krate":0,"index":864},{"krate":0,"index":865}],"decl_id":null,"docs":" Represents a qualified XML name.","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\name.rs","byte_start":3458,"byte_end":3747,"line_start":48,"line_end":57,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\name.rs","byte_start":3458,"byte_end":3747,"line_start":48,"line_end":57,"column_start":1,"column_end":2}}]},{"kind":"Field","id":{"krate":0,"index":863},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\name.rs","byte_start":3541,"byte_end":3551,"line_start":50,"line_end":50,"column_start":9,"column_end":19},"name":"local_name","qualname":"::name::Name::local_name","value":"&'a str","parent":{"krate":0,"index":861},"children":[],"decl_id":null,"docs":" A local name, e.g. `string` in `xsi:string`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":864},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\name.rs","byte_start":3634,"byte_end":3643,"line_start":53,"line_end":53,"column_start":9,"column_end":18},"name":"namespace","qualname":"::name::Name::namespace","value":"std::option::Option<&'a str>","parent":{"krate":0,"index":861},"children":[],"decl_id":null,"docs":" A namespace URI, e.g. `http://www.w3.org/2000/xmlns/`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":865},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\name.rs","byte_start":3722,"byte_end":3728,"line_start":56,"line_end":56,"column_start":9,"column_end":15},"name":"prefix","qualname":"::name::Name::prefix","value":"std::option::Option<&'a str>","parent":{"krate":0,"index":861},"children":[],"decl_id":null,"docs":" A name prefix, e.g. `xsi` in `xsi:string`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\name.rs","byte_start":4685,"byte_end":4693,"line_start":92,"line_end":92,"column_start":12,"column_end":20},"name":"to_owned","qualname":"<Name>::to_owned","value":"fn (&self) -> OwnedName","parent":null,"children":[],"decl_id":null,"docs":" Returns an owned variant of the qualified name.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\name.rs","byte_start":5002,"byte_end":5007,"line_start":102,"line_end":102,"column_start":12,"column_end":17},"name":"local","qualname":"<Name>::local","value":"fn (local_name: &str) -> Name","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Name` instance representing plain local name.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\name.rs","byte_start":4981,"byte_end":4990,"line_start":101,"line_end":101,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\name.rs","byte_start":5247,"byte_end":5255,"line_start":112,"line_end":112,"column_start":12,"column_end":20},"name":"prefixed","qualname":"<Name>::prefixed","value":"fn (local_name: &'a str, prefix: &'a str) -> Name<'a>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Name` instance with the given local name and prefix.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\name.rs","byte_start":5226,"byte_end":5235,"line_start":111,"line_end":111,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\name.rs","byte_start":5578,"byte_end":5587,"line_start":123,"line_end":123,"column_start":12,"column_end":21},"name":"qualified","qualname":"<Name>::qualified","value":"fn (local_name: &'a str, namespace: &'a str, prefix: Option<&'a str>) -> Name<'a>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Name` instance representing a qualified name with or without a prefix and\n with a namespace URI.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\name.rs","byte_start":5557,"byte_end":5566,"line_start":122,"line_end":122,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\name.rs","byte_start":6016,"byte_end":6023,"line_start":135,"line_end":135,"column_start":12,"column_end":19},"name":"to_repr","qualname":"<Name>::to_repr","value":"fn (&self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Returns a correct XML representation of this local name and prefix.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\name.rs","byte_start":6356,"byte_end":6368,"line_start":145,"line_end":145,"column_start":12,"column_end":24},"name":"repr_display","qualname":"<Name>::repr_display","value":"fn (&self) -> ReprDisplay","parent":null,"children":[],"decl_id":null,"docs":" Returns a structure which can be displayed with `std::fmt` machinery to obtain this\n local name and prefix.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\name.rs","byte_start":6335,"byte_end":6344,"line_start":144,"line_end":144,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\name.rs","byte_start":6535,"byte_end":6546,"line_start":151,"line_end":151,"column_start":12,"column_end":23},"name":"prefix_repr","qualname":"<Name>::prefix_repr","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns either a prefix of this name or `namespace::NS_NO_PREFIX` constant.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\name.rs","byte_start":6514,"byte_end":6523,"line_start":150,"line_end":150,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":43},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\name.rs","byte_start":6754,"byte_end":6765,"line_start":158,"line_end":158,"column_start":12,"column_end":23},"name":"ReprDisplay","qualname":"::name::ReprDisplay","value":"","parent":null,"children":[],"decl_id":null,"docs":" A wrapper around `Name` whose `Display` implementation prints the wrapped name as it is\n displayed in an XML document.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":885},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\name.rs","byte_start":7241,"byte_end":7250,"line_start":173,"line_end":173,"column_start":12,"column_end":21},"name":"OwnedName","qualname":"::name::OwnedName","value":"OwnedName { local_name, namespace, prefix }","parent":null,"children":[{"krate":0,"index":886},{"krate":0,"index":887},{"krate":0,"index":888}],"decl_id":null,"docs":" An owned variant of `Name`.","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\name.rs","byte_start":7230,"byte_end":7518,"line_start":173,"line_end":182,"column_start":1,"column_end":2}}]},{"kind":"Field","id":{"krate":0,"index":886},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\name.rs","byte_start":7314,"byte_end":7324,"line_start":175,"line_end":175,"column_start":9,"column_end":19},"name":"local_name","qualname":"::name::OwnedName::local_name","value":"std::string::String","parent":{"krate":0,"index":885},"children":[],"decl_id":null,"docs":" A local name, e.g. `string` in `xsi:string`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":887},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\name.rs","byte_start":7406,"byte_end":7415,"line_start":178,"line_end":178,"column_start":9,"column_end":18},"name":"namespace","qualname":"::name::OwnedName::namespace","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":885},"children":[],"decl_id":null,"docs":" A namespace URI, e.g. `http://www.w3.org/2000/xmlns/`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":888},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\name.rs","byte_start":7493,"byte_end":7499,"line_start":181,"line_end":181,"column_start":9,"column_end":15},"name":"prefix","qualname":"::name::OwnedName::prefix","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":885},"children":[],"decl_id":null,"docs":" A name prefix, e.g. `xsi` in `xsi:string`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\name.rs","byte_start":7772,"byte_end":7778,"line_start":193,"line_end":193,"column_start":12,"column_end":18},"name":"borrow","qualname":"<OwnedName>::borrow","value":"fn (&self) -> Name","parent":null,"children":[],"decl_id":null,"docs":" Constructs a borrowed `Name` based on this owned name.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\name.rs","byte_start":8090,"byte_end":8095,"line_start":203,"line_end":203,"column_start":12,"column_end":17},"name":"local","qualname":"<OwnedName>::local","value":"fn <S> (local_name: S) -> OwnedName","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `OwnedName` instance representing a plain local name.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\name.rs","byte_start":8069,"byte_end":8078,"line_start":202,"line_end":202,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\name.rs","byte_start":8443,"byte_end":8452,"line_start":214,"line_end":214,"column_start":12,"column_end":21},"name":"qualified","qualname":"<OwnedName>::qualified","value":"fn <S1, S2, S3> (local_name: S1, namespace: S2, prefix: Option<S3>) -> OwnedName","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `OwnedName` instance representing a qualified name with or without\n a prefix and with a namespace URI.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\name.rs","byte_start":8422,"byte_end":8431,"line_start":213,"line_end":213,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\name.rs","byte_start":8916,"byte_end":8926,"line_start":227,"line_end":227,"column_start":12,"column_end":22},"name":"prefix_ref","qualname":"<OwnedName>::prefix_ref","value":"fn (&self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Returns an optional prefix by reference, equivalent to `self.borrow().prefix`\n but avoids extra work.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\name.rs","byte_start":8895,"byte_end":8904,"line_start":226,"line_end":226,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\name.rs","byte_start":9149,"byte_end":9162,"line_start":234,"line_end":234,"column_start":12,"column_end":25},"name":"namespace_ref","qualname":"<OwnedName>::namespace_ref","value":"fn (&self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Returns an optional namespace by reference, equivalen to `self.borrow().namespace`\n but avoids extra work.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\name.rs","byte_start":9128,"byte_end":9137,"line_start":233,"line_end":233,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":76},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\attribute.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"attribute","qualname":"::attribute","value":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\attribute.rs","parent":null,"children":[{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":81},{"krate":0,"index":901},{"krate":0,"index":922},{"krate":0,"index":919},{"krate":0,"index":916},{"krate":0,"index":912},{"krate":0,"index":908},{"krate":0,"index":905},{"krate":0,"index":82},{"krate":0,"index":85},{"krate":0,"index":924},{"krate":0,"index":937},{"krate":0,"index":935},{"krate":0,"index":932},{"krate":0,"index":929},{"krate":0,"index":927},{"krate":0,"index":89},{"krate":0,"index":93}],"decl_id":null,"docs":" Contains XML attributes manipulation types and functions.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":901},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\attribute.rs","byte_start":11639,"byte_end":11648,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"Attribute","qualname":"::attribute::Attribute","value":"Attribute { name, value }","parent":null,"children":[{"krate":0,"index":903},{"krate":0,"index":904}],"decl_id":null,"docs":" A borrowed version of an XML attribute.","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\attribute.rs","byte_start":11628,"byte_end":11753,"line_start":13,"line_end":19,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\attribute.rs","byte_start":11628,"byte_end":11753,"line_start":13,"line_end":19,"column_start":1,"column_end":2}}]},{"kind":"Field","id":{"krate":0,"index":903},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\attribute.rs","byte_start":11687,"byte_end":11691,"line_start":15,"line_end":15,"column_start":9,"column_end":13},"name":"name","qualname":"::attribute::Attribute::name","value":"name::Name<'a>","parent":{"krate":0,"index":901},"children":[],"decl_id":null,"docs":" Attribute name.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":904},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\attribute.rs","byte_start":11737,"byte_end":11742,"line_start":18,"line_end":18,"column_start":9,"column_end":14},"name":"value","qualname":"::attribute::Attribute::value","value":"&'a str","parent":{"krate":0,"index":901},"children":[],"decl_id":null,"docs":" Attribute value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\attribute.rs","byte_start":12052,"byte_end":12060,"line_start":30,"line_end":30,"column_start":12,"column_end":20},"name":"to_owned","qualname":"<Attribute>::to_owned","value":"fn (&self) -> OwnedAttribute","parent":null,"children":[],"decl_id":null,"docs":" Creates an owned attribute out of this borrowed one.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\attribute.rs","byte_start":12031,"byte_end":12040,"line_start":29,"line_end":29,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\attribute.rs","byte_start":12328,"byte_end":12331,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<Attribute>::new","value":"fn (name: Name<'a>, value: &'a str) -> Attribute<'a>","parent":null,"children":[],"decl_id":null,"docs":" Creates a borrowed attribute using the provided borrowed name and a borrowed string value.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\attribute.rs","byte_start":12307,"byte_end":12316,"line_start":38,"line_end":38,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":924},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\attribute.rs","byte_start":12596,"byte_end":12610,"line_start":48,"line_end":48,"column_start":12,"column_end":26},"name":"OwnedAttribute","qualname":"::attribute::OwnedAttribute","value":"OwnedAttribute { name, value }","parent":null,"children":[{"krate":0,"index":925},{"krate":0,"index":926}],"decl_id":null,"docs":" An owned version of an XML attribute.","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\attribute.rs","byte_start":12585,"byte_end":12711,"line_start":48,"line_end":54,"column_start":1,"column_end":2}}]},{"kind":"Field","id":{"krate":0,"index":925},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\attribute.rs","byte_start":12645,"byte_end":12649,"line_start":50,"line_end":50,"column_start":9,"column_end":13},"name":"name","qualname":"::attribute::OwnedAttribute::name","value":"name::OwnedName","parent":{"krate":0,"index":924},"children":[],"decl_id":null,"docs":" Attribute name.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":926},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\attribute.rs","byte_start":12696,"byte_end":12701,"line_start":53,"line_end":53,"column_start":9,"column_end":14},"name":"value","qualname":"::attribute::OwnedAttribute::value","value":"std::string::String","parent":{"krate":0,"index":924},"children":[],"decl_id":null,"docs":" Attribute value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\attribute.rs","byte_start":12808,"byte_end":12814,"line_start":58,"line_end":58,"column_start":12,"column_end":18},"name":"borrow","qualname":"<OwnedAttribute>::borrow","value":"fn (&self) -> Attribute","parent":null,"children":[],"decl_id":null,"docs":" Returns a borrowed `Attribute` out of this owned one.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\attribute.rs","byte_start":13065,"byte_end":13068,"line_start":67,"line_end":67,"column_start":12,"column_end":15},"name":"new","qualname":"<OwnedAttribute>::new","value":"fn <S> (name: OwnedName, value: S) -> OwnedAttribute","parent":null,"children":[],"decl_id":null,"docs":" Creates a new owned attribute using the provided owned name and an owned string value.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\attribute.rs","byte_start":13044,"byte_end":13053,"line_start":66,"line_end":66,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":95},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\common.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"common","qualname":"::common","value":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\common.rs","parent":null,"children":[{"krate":0,"index":96},{"krate":0,"index":939},{"krate":0,"index":949},{"krate":0,"index":947},{"krate":0,"index":944},{"krate":0,"index":942},{"krate":0,"index":97},{"krate":0,"index":102},{"krate":0,"index":104},{"krate":0,"index":106},{"krate":0,"index":108},{"krate":0,"index":950},{"krate":0,"index":961},{"krate":0,"index":959},{"krate":0,"index":957},{"krate":0,"index":955},{"krate":0,"index":110},{"krate":0,"index":112},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117}],"decl_id":null,"docs":" Contains common types and functions used throughout the library.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":939},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\common.rs","byte_start":14065,"byte_end":14077,"line_start":7,"line_end":7,"column_start":12,"column_end":24},"name":"TextPosition","qualname":"::common::TextPosition","value":"TextPosition { row, column }","parent":null,"children":[{"krate":0,"index":940},{"krate":0,"index":941}],"decl_id":null,"docs":" Represents a position inside some textual document.\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\common.rs","byte_start":14054,"byte_end":14181,"line_start":7,"line_end":12,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\common.rs","byte_start":14054,"byte_end":14181,"line_start":7,"line_end":12,"column_start":1,"column_end":2}}]},{"kind":"Field","id":{"krate":0,"index":940},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\common.rs","byte_start":14117,"byte_end":14120,"line_start":9,"line_end":9,"column_start":9,"column_end":12},"name":"row","qualname":"::common::TextPosition::row","value":"u64","parent":{"krate":0,"index":939},"children":[],"decl_id":null,"docs":" Row, counting from 0\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":941},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\common.rs","byte_start":14167,"byte_end":14173,"line_start":11,"line_end":11,"column_start":9,"column_end":15},"name":"column","qualname":"::common::TextPosition::column","value":"u64","parent":{"krate":0,"index":939},"children":[],"decl_id":null,"docs":" Column, counting from 0\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\common.rs","byte_start":14304,"byte_end":14307,"line_start":17,"line_end":17,"column_start":12,"column_end":15},"name":"new","qualname":"<TextPosition>::new","value":"fn () -> TextPosition","parent":null,"children":[],"decl_id":null,"docs":" Creates a new position initialized to the beginning of the document\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\common.rs","byte_start":14283,"byte_end":14292,"line_start":16,"line_end":16,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\common.rs","byte_start":14443,"byte_end":14450,"line_start":23,"line_end":23,"column_start":12,"column_end":19},"name":"advance","qualname":"<TextPosition>::advance","value":"fn (&mut self, count: u8) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Advances the position in a line\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\common.rs","byte_start":14422,"byte_end":14431,"line_start":22,"line_end":22,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\common.rs","byte_start":14609,"byte_end":14623,"line_start":29,"line_end":29,"column_start":12,"column_end":26},"name":"advance_to_tab","qualname":"<TextPosition>::advance_to_tab","value":"fn (&mut self, width: u8) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Advances the position in a line to the next tab position\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\common.rs","byte_start":14588,"byte_end":14597,"line_start":28,"line_end":28,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\common.rs","byte_start":14829,"byte_end":14837,"line_start":36,"line_end":36,"column_start":12,"column_end":20},"name":"new_line","qualname":"<TextPosition>::new_line","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Advances the position to the beginning of the next line\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\common.rs","byte_start":14808,"byte_end":14817,"line_start":35,"line_end":35,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":106},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\common.rs","byte_start":15400,"byte_end":15408,"line_start":59,"line_end":59,"column_start":11,"column_end":19},"name":"Position","qualname":"::common::Position","value":"Position","parent":null,"children":[{"krate":0,"index":107}],"decl_id":null,"docs":" Get the position in the document corresponding to the object","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\common.rs","byte_start":15498,"byte_end":15506,"line_start":61,"line_end":61,"column_start":8,"column_end":16},"name":"position","qualname":"::common::Position::position","value":"fn (&self) -> TextPosition","parent":{"krate":0,"index":106},"children":[],"decl_id":null,"docs":" Returns the current position or a position corresponding to the object.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":951},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\common.rs","byte_start":15763,"byte_end":15772,"line_start":75,"line_end":75,"column_start":5,"column_end":14},"name":"Version10","qualname":"::common::XmlVersion::Version10","value":"XmlVersion::Version10","parent":{"krate":0,"index":950},"children":[],"decl_id":null,"docs":" XML version 1.0.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":953},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\common.rs","byte_start":15804,"byte_end":15813,"line_start":78,"line_end":78,"column_start":5,"column_end":14},"name":"Version11","qualname":"::common::XmlVersion::Version11","value":"XmlVersion::Version11","parent":{"krate":0,"index":950},"children":[],"decl_id":null,"docs":" XML version 1.1.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":950},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\common.rs","byte_start":15721,"byte_end":15731,"line_start":73,"line_end":73,"column_start":10,"column_end":20},"name":"XmlVersion","qualname":"::common::XmlVersion","value":"XmlVersion::{Version10, Version11}","parent":null,"children":[{"krate":0,"index":951},{"krate":0,"index":953}],"decl_id":null,"docs":" XML version enumeration.\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\common.rs","byte_start":15712,"byte_end":15815,"line_start":73,"line_end":79,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\common.rs","byte_start":15712,"byte_end":15815,"line_start":73,"line_end":79,"column_start":1,"column_end":2}}]},{"kind":"Function","id":{"krate":0,"index":114},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\common.rs","byte_start":16412,"byte_end":16430,"line_start":100,"line_end":100,"column_start":8,"column_end":26},"name":"is_whitespace_char","qualname":"::common::is_whitespace_char","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the given character is a white space character (`S`)\n as is defined by XML 1.1 specification, [section 2.3][1].","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":115},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\common.rs","byte_start":16720,"byte_end":16737,"line_start":110,"line_end":110,"column_start":8,"column_end":25},"name":"is_whitespace_str","qualname":"::common::is_whitespace_str","value":"fn (s: &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the given string is compound only by white space\n characters (`S`) using the previous is_whitespace_char to check\n all characters of this string\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":116},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\common.rs","byte_start":17024,"byte_end":17042,"line_start":118,"line_end":118,"column_start":8,"column_end":26},"name":"is_name_start_char","qualname":"::common::is_name_start_char","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the given character is a name start character (`NameStartChar`)\n as is defined by XML 1.1 specification, [section 2.3][1].","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":117},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\common.rs","byte_start":17718,"byte_end":17730,"line_start":135,"line_end":135,"column_start":8,"column_end":20},"name":"is_name_char","qualname":"::common::is_name_char","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the given character is a name character (`NameChar`)\n as is defined by XML 1.1 specification, [section 2.3][1].","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":118},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\escape.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"escape","qualname":"::escape","value":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\escape.rs","parent":null,"children":[{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":127},{"krate":0,"index":130},{"krate":0,"index":138},{"krate":0,"index":142},{"krate":0,"index":146},{"krate":0,"index":148},{"krate":0,"index":149}],"decl_id":null,"docs":" Contains functions for performing XML special characters escaping.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":148},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\escape.rs","byte_start":20503,"byte_end":20523,"line_start":94,"line_end":94,"column_start":8,"column_end":28},"name":"escape_str_attribute","qualname":"::escape::escape_str_attribute","value":"fn (s: &str) -> Cow<str>","parent":null,"children":[],"decl_id":null,"docs":" Performs escaping of common XML characters inside an attribute value.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\escape.rs","byte_start":20486,"byte_end":20495,"line_start":93,"line_end":93,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":149},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\escape.rs","byte_start":21023,"byte_end":21040,"line_start":110,"line_end":110,"column_start":8,"column_end":25},"name":"escape_str_pcdata","qualname":"::escape::escape_str_pcdata","value":"fn (s: &str) -> Cow<str>","parent":null,"children":[],"decl_id":null,"docs":" Performs escaping of common XML characters inside PCDATA.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\escape.rs","byte_start":21006,"byte_end":21015,"line_start":109,"line_end":109,"column_start":1,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":150},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\namespace.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"namespace","qualname":"::namespace","value":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\namespace.rs","parent":null,"children":[{"krate":0,"index":151},{"krate":0,"index":154},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":962},{"krate":0,"index":971},{"krate":0,"index":969},{"krate":0,"index":967},{"krate":0,"index":965},{"krate":0,"index":166},{"krate":0,"index":183},{"krate":0,"index":186},{"krate":0,"index":974},{"krate":0,"index":984},{"krate":0,"index":982},{"krate":0,"index":979},{"krate":0,"index":977},{"krate":0,"index":193},{"krate":0,"index":215},{"krate":0,"index":220},{"krate":0,"index":224},{"krate":0,"index":228},{"krate":0,"index":233},{"krate":0,"index":235},{"krate":0,"index":239},{"krate":0,"index":243},{"krate":0,"index":247}],"decl_id":null,"docs":" Contains namespace manipulation types and functions.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":160},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\namespace.rs","byte_start":21845,"byte_end":21860,"line_start":14,"line_end":14,"column_start":11,"column_end":26},"name":"NS_XMLNS_PREFIX","qualname":"::namespace::NS_XMLNS_PREFIX","value":"&'static str","parent":null,"children":[],"decl_id":null,"docs":" Designates prefix for namespace definitions.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":161},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\namespace.rs","byte_start":22079,"byte_end":22091,"line_start":21,"line_end":21,"column_start":11,"column_end":23},"name":"NS_XMLNS_URI","qualname":"::namespace::NS_XMLNS_URI","value":"&'static str","parent":null,"children":[],"decl_id":null,"docs":" Designates the standard URI for `xmlns` prefix.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":162},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\namespace.rs","byte_start":22602,"byte_end":22615,"line_start":32,"line_end":32,"column_start":11,"column_end":24},"name":"NS_XML_PREFIX","qualname":"::namespace::NS_XML_PREFIX","value":"&'static str","parent":null,"children":[],"decl_id":null,"docs":" Designates prefix for a namespace containing several special predefined attributes.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":163},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\namespace.rs","byte_start":22766,"byte_end":22776,"line_start":37,"line_end":37,"column_start":11,"column_end":21},"name":"NS_XML_URI","qualname":"::namespace::NS_XML_URI","value":"&'static str","parent":null,"children":[],"decl_id":null,"docs":" Designates the standard URI for `xml` prefix.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":164},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\namespace.rs","byte_start":23554,"byte_end":23566,"line_start":55,"line_end":55,"column_start":11,"column_end":23},"name":"NS_NO_PREFIX","qualname":"::namespace::NS_NO_PREFIX","value":"&'static str","parent":null,"children":[],"decl_id":null,"docs":" Designates the absence of prefix in a qualified name.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":165},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\namespace.rs","byte_start":24004,"byte_end":24016,"line_start":63,"line_end":63,"column_start":11,"column_end":23},"name":"NS_EMPTY_URI","qualname":"::namespace::NS_EMPTY_URI","value":"&'static str","parent":null,"children":[],"decl_id":null,"docs":" Designates an empty namespace URI, which is equivalent to absence of namespace.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":962},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\namespace.rs","byte_start":24232,"byte_end":24241,"line_start":69,"line_end":69,"column_start":12,"column_end":21},"name":"Namespace","qualname":"::namespace::Namespace","value":"","parent":null,"children":[],"decl_id":null,"docs":" Namespace is a map from prefixes to namespace URIs.","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\namespace.rs","byte_start":24221,"byte_end":24272,"line_start":69,"line_end":69,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\namespace.rs","byte_start":24352,"byte_end":24357,"line_start":74,"line_end":74,"column_start":12,"column_end":17},"name":"empty","qualname":"<Namespace>::empty","value":"fn () -> Namespace","parent":null,"children":[],"decl_id":null,"docs":" Returns an empty namespace.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\namespace.rs","byte_start":24331,"byte_end":24340,"line_start":73,"line_end":73,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\namespace.rs","byte_start":24478,"byte_end":24486,"line_start":78,"line_end":78,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Namespace>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether this namespace is empty.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\namespace.rs","byte_start":24457,"byte_end":24466,"line_start":77,"line_end":77,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\namespace.rs","byte_start":24676,"byte_end":24696,"line_start":84,"line_end":84,"column_start":12,"column_end":32},"name":"is_essentially_empty","qualname":"<Namespace>::is_essentially_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether this namespace is essentially empty, that is, it does not contain\n anything but default mappings.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\namespace.rs","byte_start":25364,"byte_end":25372,"line_start":104,"line_end":104,"column_start":12,"column_end":20},"name":"contains","qualname":"<Namespace>::contains","value":"fn <P> (&self, prefix: &P) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether this namespace mapping contains the given prefix.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\namespace.rs","byte_start":25343,"byte_end":25352,"line_start":103,"line_end":103,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\namespace.rs","byte_start":25986,"byte_end":25989,"line_start":122,"line_end":122,"column_start":12,"column_end":15},"name":"put","qualname":"<Namespace>::put","value":"fn <P, U> (&mut self, prefix: P, uri: U) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Puts a mapping into this namespace.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\namespace.rs","byte_start":26837,"byte_end":26846,"line_start":147,"line_end":147,"column_start":12,"column_end":21},"name":"force_put","qualname":"<Namespace>::force_put","value":"fn <P, U> (&mut self, prefix: P, uri: U) -> Option<String>","parent":null,"children":[],"decl_id":null,"docs":" Puts a mapping into this namespace forcefully.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\namespace.rs","byte_start":27249,"byte_end":27252,"line_start":160,"line_end":160,"column_start":12,"column_end":15},"name":"get","qualname":"<Namespace>::get","value":"fn <'a, P> (&'a self, prefix: &P) -> Option<&'a str>","parent":null,"children":[],"decl_id":null,"docs":" Queries the namespace for the given prefix.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":183},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\namespace.rs","byte_start":27470,"byte_end":27487,"line_start":166,"line_end":166,"column_start":10,"column_end":27},"name":"NamespaceMappings","qualname":"::namespace::NamespaceMappings","value":"Map<Entries<'a, String, String>,\n    for<'b>fn((&'b String, &'b String)) -> UriMapping<'b>>","parent":null,"children":[],"decl_id":null,"docs":" An alias for iterator type for namespace mappings contained in a namespace.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":974},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\namespace.rs","byte_start":28147,"byte_end":28161,"line_start":188,"line_end":188,"column_start":12,"column_end":26},"name":"NamespaceStack","qualname":"::namespace::NamespaceStack","value":"","parent":null,"children":[],"decl_id":null,"docs":" Namespace stack is a sequence of namespaces.","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\namespace.rs","byte_start":28136,"byte_end":28182,"line_start":188,"line_end":188,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\namespace.rs","byte_start":28273,"byte_end":28278,"line_start":193,"line_end":193,"column_start":12,"column_end":17},"name":"empty","qualname":"<NamespaceStack>::empty","value":"fn () -> NamespaceStack","parent":null,"children":[],"decl_id":null,"docs":" Returns an empty namespace stack.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\namespace.rs","byte_start":28252,"byte_end":28261,"line_start":192,"line_end":192,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\namespace.rs","byte_start":28599,"byte_end":28606,"line_start":202,"line_end":202,"column_start":12,"column_end":19},"name":"default","qualname":"<NamespaceStack>::default","value":"fn () -> NamespaceStack","parent":null,"children":[],"decl_id":null,"docs":" Returns a namespace stack with default items in it.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\namespace.rs","byte_start":28578,"byte_end":28587,"line_start":201,"line_end":201,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\namespace.rs","byte_start":29020,"byte_end":29030,"line_start":216,"line_end":216,"column_start":12,"column_end":22},"name":"push_empty","qualname":"<NamespaceStack>::push_empty","value":"fn (&mut self) -> &mut NamespaceStack","parent":null,"children":[],"decl_id":null,"docs":" Adds an empty namespace to the top of this stack.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\namespace.rs","byte_start":28999,"byte_end":29008,"line_start":215,"line_end":215,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\namespace.rs","byte_start":29252,"byte_end":29255,"line_start":225,"line_end":225,"column_start":12,"column_end":15},"name":"pop","qualname":"<NamespaceStack>::pop","value":"fn (&mut self) -> Namespace","parent":null,"children":[],"decl_id":null,"docs":" Removes the topmost namespace in this stack.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\namespace.rs","byte_start":29231,"byte_end":29240,"line_start":224,"line_end":224,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\namespace.rs","byte_start":29488,"byte_end":29495,"line_start":233,"line_end":233,"column_start":12,"column_end":19},"name":"try_pop","qualname":"<NamespaceStack>::try_pop","value":"fn (&mut self) -> Option<Namespace>","parent":null,"children":[],"decl_id":null,"docs":" Removes the topmost namespace in this stack.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\namespace.rs","byte_start":29467,"byte_end":29476,"line_start":232,"line_end":232,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\namespace.rs","byte_start":29702,"byte_end":29710,"line_start":241,"line_end":241,"column_start":12,"column_end":20},"name":"peek_mut","qualname":"<NamespaceStack>::peek_mut","value":"fn (&mut self) -> &mut Namespace","parent":null,"children":[],"decl_id":null,"docs":" Borrows the topmost namespace mutably, leaving the stack intact.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\namespace.rs","byte_start":29681,"byte_end":29690,"line_start":240,"line_end":240,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\namespace.rs","byte_start":29930,"byte_end":29934,"line_start":249,"line_end":249,"column_start":12,"column_end":16},"name":"peek","qualname":"<NamespaceStack>::peek","value":"fn (&self) -> &Namespace","parent":null,"children":[],"decl_id":null,"docs":" Borrows the topmost namespace immutably, leaving the stack intact.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\namespace.rs","byte_start":29909,"byte_end":29918,"line_start":248,"line_end":248,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\namespace.rs","byte_start":30654,"byte_end":30665,"line_start":266,"line_end":266,"column_start":12,"column_end":23},"name":"put_checked","qualname":"<NamespaceStack>::put_checked","value":"fn <P, U> (&mut self, prefix: P, uri: U) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Puts a mapping into the topmost namespace if this stack does not already contain one.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\namespace.rs","byte_start":31698,"byte_end":31701,"line_start":294,"line_end":294,"column_start":12,"column_end":15},"name":"put","qualname":"<NamespaceStack>::put","value":"fn <P, U> (&mut self, prefix: P, uri: U) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Puts a mapping into the topmost namespace in this stack.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\namespace.rs","byte_start":31677,"byte_end":31686,"line_start":293,"line_end":293,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\namespace.rs","byte_start":32222,"byte_end":32225,"line_start":309,"line_end":309,"column_start":12,"column_end":15},"name":"get","qualname":"<NamespaceStack>::get","value":"fn <'a, P> (&'a self, prefix: &P) -> Option<&'a str>","parent":null,"children":[],"decl_id":null,"docs":" Performs a search for the given prefix in the whole stack.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\namespace.rs","byte_start":32201,"byte_end":32210,"line_start":308,"line_end":308,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\namespace.rs","byte_start":32733,"byte_end":32739,"line_start":324,"line_end":324,"column_start":12,"column_end":18},"name":"squash","qualname":"<NamespaceStack>::squash","value":"fn (&self) -> Namespace","parent":null,"children":[],"decl_id":null,"docs":" Combines this stack of namespaces into a single namespace.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\namespace.rs","byte_start":33135,"byte_end":33149,"line_start":336,"line_end":336,"column_start":12,"column_end":26},"name":"checked_target","qualname":"<NamespaceStack>::checked_target","value":"fn (&mut self) -> CheckedTarget","parent":null,"children":[],"decl_id":null,"docs":" Returns an object which implements `Extend` using `put_checked()` instead of `put()`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\namespace.rs","byte_start":33114,"byte_end":33123,"line_start":335,"line_end":335,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\namespace.rs","byte_start":33311,"byte_end":33315,"line_start":342,"line_end":342,"column_start":12,"column_end":16},"name":"iter","qualname":"<NamespaceStack>::iter","value":"fn (&self) -> NamespaceStackMappings","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over all mappings in this namespace stack.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\namespace.rs","byte_start":33290,"byte_end":33299,"line_start":341,"line_end":341,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":215},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\namespace.rs","byte_start":33820,"byte_end":33842,"line_start":361,"line_end":361,"column_start":12,"column_end":34},"name":"NamespaceStackMappings","qualname":"::namespace::NamespaceStackMappings","value":"NamespaceStackMappings {  }","parent":null,"children":[{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219}],"decl_id":null,"docs":" An iterator over mappings from prefixes to URIs in a namespace stack.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":233},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\namespace.rs","byte_start":35820,"byte_end":35830,"line_start":421,"line_end":421,"column_start":10,"column_end":20},"name":"UriMapping","qualname":"::namespace::UriMapping","value":"(&'a str, &'a str)","parent":null,"children":[],"decl_id":null,"docs":" A type alias for a pair of `(prefix, uri)` values returned by namespace iterators.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":243},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\namespace.rs","byte_start":37405,"byte_end":37418,"line_start":477,"line_end":477,"column_start":12,"column_end":25},"name":"CheckedTarget","qualname":"::namespace::CheckedTarget","value":"","parent":null,"children":[],"decl_id":null,"docs":" A wrapper around `NamespaceStack` which implements `Extend` using `put_checked()`.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":252},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"reader","qualname":"::reader","value":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\mod.rs","parent":null,"children":[{"krate":0,"index":253},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":365},{"krate":0,"index":571},{"krate":0,"index":584},{"krate":0,"index":598},{"krate":0,"index":636},{"krate":0,"index":639},{"krate":0,"index":641},{"krate":0,"index":645},{"krate":0,"index":653},{"krate":0,"index":656},{"krate":0,"index":661},{"krate":0,"index":665},{"krate":0,"index":670},{"krate":0,"index":674}],"decl_id":null,"docs":" Contains high-level interface for a pull-based XML parser.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1208},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\config.rs","byte_start":124303,"byte_end":124315,"line_start":12,"line_end":12,"column_start":12,"column_end":24},"name":"ParserConfig","qualname":"::reader::config::ParserConfig","value":"ParserConfig { trim_whitespace, whitespace_to_characters, cdata_to_characters, ignore_comments, coalesce_characters, extra_entities, ignore_end_of_stream, replace_unknown_entity_references, ignore_root_level_whitespace }","parent":null,"children":[{"krate":0,"index":1209},{"krate":0,"index":1210},{"krate":0,"index":1211},{"krate":0,"index":1212},{"krate":0,"index":1213},{"krate":0,"index":1214},{"krate":0,"index":1215},{"krate":0,"index":1216},{"krate":0,"index":1217}],"decl_id":null,"docs":" Parser configuration structure.","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\config.rs","byte_start":124292,"byte_end":128518,"line_start":12,"line_end":91,"column_start":1,"column_end":2}}]},{"kind":"Field","id":{"krate":0,"index":1209},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\config.rs","byte_start":125018,"byte_end":125033,"line_start":24,"line_end":24,"column_start":9,"column_end":24},"name":"trim_whitespace","qualname":"::reader::config::ParserConfig::trim_whitespace","value":"bool","parent":{"krate":0,"index":1208},"children":[],"decl_id":null,"docs":" Whether or not should whitespace in textual events be removed. Default is false.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1210},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\config.rs","byte_start":125383,"byte_end":125407,"line_start":32,"line_end":32,"column_start":9,"column_end":33},"name":"whitespace_to_characters","qualname":"::reader::config::ParserConfig::whitespace_to_characters","value":"bool","parent":{"krate":0,"index":1208},"children":[],"decl_id":null,"docs":" Whether or not should whitespace be converted to characters.\n Default is false.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1211},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\config.rs","byte_start":125814,"byte_end":125833,"line_start":41,"line_end":41,"column_start":9,"column_end":28},"name":"cdata_to_characters","qualname":"::reader::config::ParserConfig::cdata_to_characters","value":"bool","parent":{"krate":0,"index":1208},"children":[],"decl_id":null,"docs":" Whether or not should CDATA be converted to characters.\n Default is false.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1212},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\config.rs","byte_start":125988,"byte_end":126003,"line_start":46,"line_end":46,"column_start":9,"column_end":24},"name":"ignore_comments","qualname":"::reader::config::ParserConfig::ignore_comments","value":"bool","parent":{"krate":0,"index":1208},"children":[],"decl_id":null,"docs":" Whether or not should comments be omitted. Default is true.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1213},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\config.rs","byte_start":126489,"byte_end":126508,"line_start":57,"line_end":57,"column_start":9,"column_end":28},"name":"coalesce_characters","qualname":"::reader::config::ParserConfig::coalesce_characters","value":"bool","parent":{"krate":0,"index":1208},"children":[],"decl_id":null,"docs":" Whether or not should sequential `Characters` events be merged.\n Default is true.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1214},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\config.rs","byte_start":126934,"byte_end":126948,"line_start":65,"line_end":65,"column_start":9,"column_end":23},"name":"extra_entities","qualname":"::reader::config::ParserConfig::extra_entities","value":"std::collections::HashMap<std::string::String, std::string::String>","parent":{"krate":0,"index":1208},"children":[],"decl_id":null,"docs":" A map of extra entities recognized by the parser. Default is an empty map.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1215},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\config.rs","byte_start":127707,"byte_end":127727,"line_start":77,"line_end":77,"column_start":9,"column_end":29},"name":"ignore_end_of_stream","qualname":"::reader::config::ParserConfig::ignore_end_of_stream","value":"bool","parent":{"krate":0,"index":1208},"children":[],"decl_id":null,"docs":" Whether or not the parser should ignore the end of stream. Default is false.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1216},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\config.rs","byte_start":128125,"byte_end":128158,"line_start":84,"line_end":84,"column_start":9,"column_end":42},"name":"replace_unknown_entity_references","qualname":"::reader::config::ParserConfig::replace_unknown_entity_references","value":"bool","parent":{"krate":0,"index":1208},"children":[],"decl_id":null,"docs":" Whether or not non-unicode entity references get replaced with the replacement character","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1217},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\config.rs","byte_start":128481,"byte_end":128509,"line_start":90,"line_end":90,"column_start":9,"column_end":37},"name":"ignore_root_level_whitespace","qualname":"::reader::config::ParserConfig::ignore_root_level_whitespace","value":"bool","parent":{"krate":0,"index":1208},"children":[],"decl_id":null,"docs":" Whether or not whitespace at the root level of the document is ignored. Default is true.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":576},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\config.rs","byte_start":128909,"byte_end":128912,"line_start":106,"line_end":106,"column_start":12,"column_end":15},"name":"new","qualname":"<ParserConfig>::new","value":"fn () -> ParserConfig","parent":null,"children":[],"decl_id":null,"docs":" Returns a new config with default values.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":577},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\config.rs","byte_start":129993,"byte_end":130006,"line_start":139,"line_end":139,"column_start":12,"column_end":25},"name":"create_reader","qualname":"<ParserConfig>::create_reader","value":"fn <R> (self, source: R) -> EventReader<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates an XML reader with this configuration.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\config.rs","byte_start":129972,"byte_end":129981,"line_start":138,"line_end":138,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":579},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\config.rs","byte_start":130641,"byte_end":130651,"line_start":159,"line_end":159,"column_start":12,"column_end":22},"name":"add_entity","qualname":"<ParserConfig>::add_entity","value":"fn <S, T> (mut self, entity: S, value: T) -> ParserConfig","parent":null,"children":[],"decl_id":null,"docs":" Adds a new entity mapping and returns an updated config object.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1228},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\config.rs","byte_start":130973,"byte_end":130988,"line_start":173,"line_end":173,"column_start":5,"column_end":20},"name":"trim_whitespace","qualname":"<ParserConfig>::trim_whitespace","value":"fn (mut self, value: bool) -> ParserConfig","parent":null,"children":[],"decl_id":null,"docs":" Sets the field to the provided value and returns updated config object.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1230},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\config.rs","byte_start":131004,"byte_end":131028,"line_start":174,"line_end":174,"column_start":5,"column_end":29},"name":"whitespace_to_characters","qualname":"<ParserConfig>::whitespace_to_characters","value":"fn (mut self, value: bool) -> ParserConfig","parent":null,"children":[],"decl_id":null,"docs":" Sets the field to the provided value and returns updated config object.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1232},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\config.rs","byte_start":131044,"byte_end":131063,"line_start":175,"line_end":175,"column_start":5,"column_end":24},"name":"cdata_to_characters","qualname":"<ParserConfig>::cdata_to_characters","value":"fn (mut self, value: bool) -> ParserConfig","parent":null,"children":[],"decl_id":null,"docs":" Sets the field to the provided value and returns updated config object.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1234},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\config.rs","byte_start":131079,"byte_end":131094,"line_start":176,"line_end":176,"column_start":5,"column_end":20},"name":"ignore_comments","qualname":"<ParserConfig>::ignore_comments","value":"fn (mut self, value: bool) -> ParserConfig","parent":null,"children":[],"decl_id":null,"docs":" Sets the field to the provided value and returns updated config object.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1236},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\config.rs","byte_start":131110,"byte_end":131129,"line_start":177,"line_end":177,"column_start":5,"column_end":24},"name":"coalesce_characters","qualname":"<ParserConfig>::coalesce_characters","value":"fn (mut self, value: bool) -> ParserConfig","parent":null,"children":[],"decl_id":null,"docs":" Sets the field to the provided value and returns updated config object.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1238},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\config.rs","byte_start":131145,"byte_end":131165,"line_start":178,"line_end":178,"column_start":5,"column_end":25},"name":"ignore_end_of_stream","qualname":"<ParserConfig>::ignore_end_of_stream","value":"fn (mut self, value: bool) -> ParserConfig","parent":null,"children":[],"decl_id":null,"docs":" Sets the field to the provided value and returns updated config object.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1240},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\config.rs","byte_start":131181,"byte_end":131214,"line_start":179,"line_end":179,"column_start":5,"column_end":38},"name":"replace_unknown_entity_references","qualname":"<ParserConfig>::replace_unknown_entity_references","value":"fn (mut self, value: bool) -> ParserConfig","parent":null,"children":[],"decl_id":null,"docs":" Sets the field to the provided value and returns updated config object.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1242},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\config.rs","byte_start":131230,"byte_end":131258,"line_start":180,"line_end":180,"column_start":5,"column_end":33},"name":"ignore_root_level_whitespace","qualname":"<ParserConfig>::ignore_root_level_whitespace","value":"fn (mut self, value: bool) -> ParserConfig","parent":null,"children":[],"decl_id":null,"docs":" Sets the field to the provided value and returns updated config object.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1244},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\events.rs","byte_start":131914,"byte_end":131927,"line_start":21,"line_end":21,"column_start":5,"column_end":18},"name":"StartDocument","qualname":"::reader::events::XmlEvent::StartDocument","value":"XmlEvent::StartDocument { version, encoding, standalone }","parent":{"krate":0,"index":1243},"children":[],"decl_id":null,"docs":" Corresponds to XML document declaration.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1248},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\events.rs","byte_start":132885,"byte_end":132896,"line_start":46,"line_end":46,"column_start":5,"column_end":16},"name":"EndDocument","qualname":"::reader::events::XmlEvent::EndDocument","value":"XmlEvent::EndDocument","parent":{"krate":0,"index":1243},"children":[],"decl_id":null,"docs":" Denotes to the end of the document stream.","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1250},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\events.rs","byte_start":133099,"byte_end":133120,"line_start":52,"line_end":52,"column_start":5,"column_end":26},"name":"ProcessingInstruction","qualname":"::reader::events::XmlEvent::ProcessingInstruction","value":"XmlEvent::ProcessingInstruction { name, data }","parent":{"krate":0,"index":1243},"children":[],"decl_id":null,"docs":" Denotes an XML processing instruction.","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1253},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\events.rs","byte_start":133485,"byte_end":133497,"line_start":64,"line_end":64,"column_start":5,"column_end":17},"name":"StartElement","qualname":"::reader::events::XmlEvent::StartElement","value":"XmlEvent::StartElement { name, attributes, namespace }","parent":{"krate":0,"index":1243},"children":[],"decl_id":null,"docs":" Denotes a beginning of an XML element.","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1257},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\events.rs","byte_start":134109,"byte_end":134119,"line_start":81,"line_end":81,"column_start":5,"column_end":15},"name":"EndElement","qualname":"::reader::events::XmlEvent::EndElement","value":"XmlEvent::EndElement { name }","parent":{"krate":0,"index":1243},"children":[],"decl_id":null,"docs":" Denotes an end of an XML element.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1259},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\events.rs","byte_start":134488,"byte_end":134493,"line_start":92,"line_end":92,"column_start":5,"column_end":10},"name":"CData","qualname":"::reader::events::XmlEvent::CData","value":"XmlEvent::CData(String)","parent":{"krate":0,"index":1243},"children":[],"decl_id":null,"docs":" Denotes CDATA content.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1262},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\events.rs","byte_start":134717,"byte_end":134724,"line_start":98,"line_end":98,"column_start":5,"column_end":12},"name":"Comment","qualname":"::reader::events::XmlEvent::Comment","value":"XmlEvent::Comment(String)","parent":{"krate":0,"index":1243},"children":[],"decl_id":null,"docs":" Denotes a comment.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1265},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\events.rs","byte_start":135110,"byte_end":135120,"line_start":107,"line_end":107,"column_start":5,"column_end":15},"name":"Characters","qualname":"::reader::events::XmlEvent::Characters","value":"XmlEvent::Characters(String)","parent":{"krate":0,"index":1243},"children":[],"decl_id":null,"docs":" Denotes character data outside of tags.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1268},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\events.rs","byte_start":135489,"byte_end":135499,"line_start":114,"line_end":114,"column_start":5,"column_end":15},"name":"Whitespace","qualname":"::reader::events::XmlEvent::Whitespace","value":"XmlEvent::Whitespace(String)","parent":{"krate":0,"index":1243},"children":[],"decl_id":null,"docs":" Denotes a chunk of whitespace outside of tags.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1243},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\events.rs","byte_start":131696,"byte_end":131704,"line_start":16,"line_end":16,"column_start":10,"column_end":18},"name":"XmlEvent","qualname":"::reader::events::XmlEvent","value":"XmlEvent::{StartDocument, EndDocument, ProcessingInstruction, StartElement, EndElement, CData, Comment, Characters, Whitespace}","parent":null,"children":[{"krate":0,"index":1244},{"krate":0,"index":1248},{"krate":0,"index":1250},{"krate":0,"index":1253},{"krate":0,"index":1257},{"krate":0,"index":1259},{"krate":0,"index":1262},{"krate":0,"index":1265},{"krate":0,"index":1268}],"decl_id":null,"docs":" An element of an XML input stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":594},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\events.rs","byte_start":138603,"byte_end":138618,"line_start":191,"line_end":191,"column_start":12,"column_end":27},"name":"as_writer_event","qualname":"<XmlEvent>::as_writer_event","value":"fn <'a> (&'a self) -> Option<::writer::events::XmlEvent<'a>>","parent":null,"children":[],"decl_id":null,"docs":" Obtains a writer event from this reader event.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1278},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\error.rs","byte_start":140313,"byte_end":140319,"line_start":13,"line_end":13,"column_start":5,"column_end":11},"name":"Syntax","qualname":"::reader::error::ErrorKind::Syntax","value":"ErrorKind::Syntax(Cow<'static, str>)","parent":{"krate":0,"index":1277},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1281},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\error.rs","byte_start":140344,"byte_end":140346,"line_start":14,"line_end":14,"column_start":5,"column_end":7},"name":"Io","qualname":"::reader::error::ErrorKind::Io","value":"ErrorKind::Io(io::Error)","parent":{"krate":0,"index":1277},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1284},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\error.rs","byte_start":140363,"byte_end":140367,"line_start":15,"line_end":15,"column_start":5,"column_end":9},"name":"Utf8","qualname":"::reader::error::ErrorKind::Utf8","value":"ErrorKind::Utf8(str::Utf8Error)","parent":{"krate":0,"index":1277},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1287},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\error.rs","byte_start":140389,"byte_end":140402,"line_start":16,"line_end":16,"column_start":5,"column_end":18},"name":"UnexpectedEof","qualname":"::reader::error::ErrorKind::UnexpectedEof","value":"ErrorKind::UnexpectedEof","parent":{"krate":0,"index":1277},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1277},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\error.rs","byte_start":140297,"byte_end":140306,"line_start":12,"line_end":12,"column_start":10,"column_end":19},"name":"ErrorKind","qualname":"::reader::error::ErrorKind","value":"ErrorKind::{Syntax, Io, Utf8, UnexpectedEof}","parent":null,"children":[{"krate":0,"index":1278},{"krate":0,"index":1281},{"krate":0,"index":1284},{"krate":0,"index":1287}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1291},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\error.rs","byte_start":140575,"byte_end":140580,"line_start":23,"line_end":23,"column_start":12,"column_end":17},"name":"Error","qualname":"::reader::error::Error","value":"Error {  }","parent":null,"children":[{"krate":0,"index":1292},{"krate":0,"index":1293}],"decl_id":null,"docs":" An XML parsing error.","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\error.rs","byte_start":140564,"byte_end":140628,"line_start":23,"line_end":26,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":613},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\error.rs","byte_start":140989,"byte_end":140992,"line_start":42,"line_end":42,"column_start":12,"column_end":15},"name":"msg","qualname":"<Error>::msg","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to a message which is contained inside this error.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\error.rs","byte_start":140968,"byte_end":140977,"line_start":41,"line_end":41,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":615},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\error.rs","byte_start":141309,"byte_end":141313,"line_start":52,"line_end":52,"column_start":12,"column_end":16},"name":"kind","qualname":"<Error>::kind","value":"fn (&self) -> &ErrorKind","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":639},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\mod.rs","byte_start":38222,"byte_end":38228,"line_start":25,"line_end":25,"column_start":10,"column_end":16},"name":"Result","qualname":"::reader::Result","value":"result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" A result type yielded by `XmlReader`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":641},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\mod.rs","byte_start":38360,"byte_end":38371,"line_start":28,"line_end":28,"column_start":12,"column_end":23},"name":"EventReader","qualname":"::reader::EventReader","value":"EventReader {  }","parent":null,"children":[{"krate":0,"index":643},{"krate":0,"index":644}],"decl_id":null,"docs":" A wrapper around an `std::io::Read` instance which provides pull-based XML parsing.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":647},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\mod.rs","byte_start":38538,"byte_end":38541,"line_start":36,"line_end":36,"column_start":12,"column_end":15},"name":"new","qualname":"<EventReader<R>>::new","value":"fn (source: R) -> EventReader<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new reader, consuming the given stream.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\mod.rs","byte_start":38517,"byte_end":38526,"line_start":35,"line_end":35,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":648},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\mod.rs","byte_start":38760,"byte_end":38775,"line_start":42,"line_end":42,"column_start":12,"column_end":27},"name":"new_with_config","qualname":"<EventReader<R>>::new_with_config","value":"fn (source: R, config: ParserConfig) -> EventReader<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new reader with the provded configuration, consuming the given stream.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\mod.rs","byte_start":38739,"byte_end":38748,"line_start":41,"line_end":41,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":649},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\mod.rs","byte_start":39146,"byte_end":39150,"line_start":51,"line_end":51,"column_start":12,"column_end":16},"name":"next","qualname":"<EventReader<R>>::next","value":"fn (&mut self) -> Result<XmlEvent>","parent":null,"children":[],"decl_id":null,"docs":" Pulls and returns next XML event from the stream.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\mod.rs","byte_start":39125,"byte_end":39134,"line_start":50,"line_end":50,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":650},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\mod.rs","byte_start":39245,"byte_end":39251,"line_start":55,"line_end":55,"column_start":12,"column_end":18},"name":"source","qualname":"<EventReader<R>>::source","value":"fn (&self) -> &R","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":651},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\mod.rs","byte_start":39293,"byte_end":39303,"line_start":56,"line_end":56,"column_start":12,"column_end":22},"name":"source_mut","qualname":"<EventReader<R>>::source_mut","value":"fn (&mut self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":652},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\mod.rs","byte_start":39661,"byte_end":39671,"line_start":63,"line_end":63,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<EventReader<R>>::into_inner","value":"fn (self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Unwraps this `EventReader`, returning the underlying reader.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":661},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\mod.rs","byte_start":40393,"byte_end":40399,"line_start":89,"line_end":89,"column_start":12,"column_end":18},"name":"Events","qualname":"::reader::Events","value":"Events {  }","parent":null,"children":[{"krate":0,"index":663},{"krate":0,"index":664}],"decl_id":null,"docs":" An iterator over XML events created from some type implementing `Read`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":667},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\mod.rs","byte_start":40580,"byte_end":40590,"line_start":97,"line_end":97,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Events<R>>::into_inner","value":"fn (self) -> EventReader<R>","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the iterator, returning the internal `EventReader`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\mod.rs","byte_start":40559,"byte_end":40568,"line_start":96,"line_end":96,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":668},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\mod.rs","byte_start":40655,"byte_end":40661,"line_start":101,"line_end":101,"column_start":12,"column_end":18},"name":"source","qualname":"<Events<R>>::source","value":"fn (&self) -> &R","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":669},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\mod.rs","byte_start":40710,"byte_end":40720,"line_start":102,"line_end":102,"column_start":12,"column_end":22},"name":"source_mut","qualname":"<Events<R>>::source_mut","value":"fn (&mut self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":676},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\mod.rs","byte_start":41366,"byte_end":41374,"line_start":126,"line_end":126,"column_start":12,"column_end":20},"name":"from_str","qualname":"<EventReader<&'r [u8]>>::from_str","value":"fn (source: &'r str) -> EventReader<&'r [u8]>","parent":null,"children":[],"decl_id":null,"docs":" A convenience method to create an `XmlReader` from a string slice.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\mod.rs","byte_start":41345,"byte_end":41354,"line_start":125,"line_end":125,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":677},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"writer","qualname":"::writer","value":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\mod.rs","parent":null,"children":[{"krate":0,"index":678},{"krate":0,"index":679},{"krate":0,"index":680},{"krate":0,"index":681},{"krate":0,"index":682},{"krate":0,"index":683},{"krate":0,"index":684},{"krate":0,"index":774},{"krate":0,"index":784},{"krate":0,"index":831},{"krate":0,"index":835}],"decl_id":null,"docs":" Contains high-level interface for an events-based XML emitter.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1304},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\emitter.rs","byte_start":147693,"byte_end":147695,"line_start":21,"line_end":21,"column_start":5,"column_end":7},"name":"Io","qualname":"::writer::emitter::EmitterError::Io","value":"EmitterError::Io(io::Error)","parent":{"krate":0,"index":1303},"children":[],"decl_id":null,"docs":" An I/O error occured in the underlying `Write` instance.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1307},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\emitter.rs","byte_start":147789,"byte_end":147816,"line_start":24,"line_end":24,"column_start":5,"column_end":32},"name":"DocumentStartAlreadyEmitted","qualname":"::writer::emitter::EmitterError::DocumentStartAlreadyEmitted","value":"EmitterError::DocumentStartAlreadyEmitted","parent":{"krate":0,"index":1303},"children":[],"decl_id":null,"docs":" Document declaration has already been written to the output stream.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1309},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\emitter.rs","byte_start":147886,"byte_end":147913,"line_start":27,"line_end":27,"column_start":5,"column_end":32},"name":"LastElementNameNotAvailable","qualname":"::writer::emitter::EmitterError::LastElementNameNotAvailable","value":"EmitterError::LastElementNameNotAvailable","parent":{"krate":0,"index":1303},"children":[],"decl_id":null,"docs":" The name of the last opening element is not available.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1311},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\emitter.rs","byte_start":148031,"byte_end":148077,"line_start":31,"line_end":31,"column_start":5,"column_end":51},"name":"EndElementNameIsNotEqualToLastStartElementName","qualname":"::writer::emitter::EmitterError::EndElementNameIsNotEqualToLastStartElementName","value":"EmitterError::EndElementNameIsNotEqualToLastStartElementName","parent":{"krate":0,"index":1303},"children":[],"decl_id":null,"docs":" The name of the last opening element is not equal to the name of the provided\n closing element.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1313},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\emitter.rs","byte_start":148222,"byte_end":148250,"line_start":35,"line_end":35,"column_start":5,"column_end":33},"name":"EndElementNameIsNotSpecified","qualname":"::writer::emitter::EmitterError::EndElementNameIsNotSpecified","value":"EmitterError::EndElementNameIsNotSpecified","parent":{"krate":0,"index":1303},"children":[],"decl_id":null,"docs":" End element name is not specified when it is needed, for example, when automatic\n closing is not enabled in configuration.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1303},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\emitter.rs","byte_start":147609,"byte_end":147621,"line_start":19,"line_end":19,"column_start":10,"column_end":22},"name":"EmitterError","qualname":"::writer::emitter::EmitterError","value":"EmitterError::{Io, DocumentStartAlreadyEmitted, LastElementNameNotAvailable, EndElementNameIsNotEqualToLastStartElementName, EndElementNameIsNotSpecified}","parent":null,"children":[{"krate":0,"index":1304},{"krate":0,"index":1307},{"krate":0,"index":1309},{"krate":0,"index":1311},{"krate":0,"index":1313}],"decl_id":null,"docs":" An error which may be returned by `XmlWriter` when writing XML events.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":713},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\emitter.rs","byte_start":149461,"byte_end":149467,"line_start":75,"line_end":75,"column_start":10,"column_end":16},"name":"Result","qualname":"::writer::emitter::Result","value":"result::Result<T, EmitterError>","parent":null,"children":[],"decl_id":null,"docs":" A result type yielded by `XmlWriter`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1333},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\config.rs","byte_start":161429,"byte_end":161442,"line_start":12,"line_end":12,"column_start":12,"column_end":25},"name":"EmitterConfig","qualname":"::writer::config::EmitterConfig","value":"EmitterConfig { line_separator, indent_string, perform_indent, perform_escaping, write_document_declaration, normalize_empty_elements, cdata_to_characters, keep_element_names_stack, autopad_comments, pad_self_closing }","parent":null,"children":[{"krate":0,"index":1334},{"krate":0,"index":1335},{"krate":0,"index":1336},{"krate":0,"index":1337},{"krate":0,"index":1338},{"krate":0,"index":1339},{"krate":0,"index":1340},{"krate":0,"index":1341},{"krate":0,"index":1342},{"krate":0,"index":1343}],"decl_id":null,"docs":" Emitter configuration structure.","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\config.rs","byte_start":161418,"byte_end":165220,"line_start":12,"line_end":85,"column_start":1,"column_end":2}}]},{"kind":"Field","id":{"krate":0,"index":1334},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\config.rs","byte_start":161539,"byte_end":161553,"line_start":14,"line_end":14,"column_start":9,"column_end":23},"name":"line_separator","qualname":"::writer::config::EmitterConfig::line_separator","value":"std::borrow::Cow<'static, str>","parent":{"krate":0,"index":1333},"children":[],"decl_id":null,"docs":" Line separator used to separate lines in formatted output. Default is `\"\\n\"`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1335},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\config.rs","byte_start":161694,"byte_end":161707,"line_start":18,"line_end":18,"column_start":9,"column_end":22},"name":"indent_string","qualname":"::writer::config::EmitterConfig::indent_string","value":"std::borrow::Cow<'static, str>","parent":{"krate":0,"index":1333},"children":[],"decl_id":null,"docs":" A string which will be used for a single level of indentation. Default is `\"  \"`\n (two spaces).\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1336},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\config.rs","byte_start":162305,"byte_end":162319,"line_start":29,"line_end":29,"column_start":9,"column_end":23},"name":"perform_indent","qualname":"::writer::config::EmitterConfig::perform_indent","value":"bool","parent":{"krate":0,"index":1333},"children":[],"decl_id":null,"docs":" Whether or not the emitted document should be indented. Default is false.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1337},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\config.rs","byte_start":162908,"byte_end":162924,"line_start":40,"line_end":40,"column_start":9,"column_end":25},"name":"perform_escaping","qualname":"::writer::config::EmitterConfig::perform_escaping","value":"bool","parent":{"krate":0,"index":1333},"children":[],"decl_id":null,"docs":" Whether or not characters in output events will be escaped. Default is true.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1338},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\config.rs","byte_start":163244,"byte_end":163270,"line_start":47,"line_end":47,"column_start":9,"column_end":35},"name":"write_document_declaration","qualname":"::writer::config::EmitterConfig::write_document_declaration","value":"bool","parent":{"krate":0,"index":1333},"children":[],"decl_id":null,"docs":" Whether or not to write XML document declaration at the beginning of a document.\n Default is true.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1339},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\config.rs","byte_start":163525,"byte_end":163549,"line_start":53,"line_end":53,"column_start":9,"column_end":33},"name":"normalize_empty_elements","qualname":"::writer::config::EmitterConfig::normalize_empty_elements","value":"bool","parent":{"krate":0,"index":1333},"children":[],"decl_id":null,"docs":" Whether or not to convert elements with empty content to empty elements. Default is true.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1340},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\config.rs","byte_start":163925,"byte_end":163944,"line_start":60,"line_end":60,"column_start":9,"column_end":28},"name":"cdata_to_characters","qualname":"::writer::config::EmitterConfig::cdata_to_characters","value":"bool","parent":{"krate":0,"index":1333},"children":[],"decl_id":null,"docs":" Whether or not to emit CDATA events as plain characters. Default is false.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1341},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\config.rs","byte_start":164281,"byte_end":164305,"line_start":67,"line_end":67,"column_start":9,"column_end":33},"name":"keep_element_names_stack","qualname":"::writer::config::EmitterConfig::keep_element_names_stack","value":"bool","parent":{"krate":0,"index":1333},"children":[],"decl_id":null,"docs":" Whether or not to keep element names to support `EndElement` events without explicit names.\n Default is true.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1342},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\config.rs","byte_start":164682,"byte_end":164698,"line_start":75,"line_end":75,"column_start":9,"column_end":25},"name":"autopad_comments","qualname":"::writer::config::EmitterConfig::autopad_comments","value":"bool","parent":{"krate":0,"index":1333},"children":[],"decl_id":null,"docs":" Whether or not to automatically insert leading and trailing spaces in emitted comments,\n if necessary. Default is true.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1343},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\config.rs","byte_start":165195,"byte_end":165211,"line_start":84,"line_end":84,"column_start":9,"column_end":25},"name":"pad_self_closing","qualname":"::writer::config::EmitterConfig::pad_self_closing","value":"bool","parent":{"krate":0,"index":1333},"children":[],"decl_id":null,"docs":" Whether or not to automatically insert spaces before the trailing `/>` in self-closing\n elements. Default is true.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":779},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\config.rs","byte_start":165645,"byte_end":165648,"line_start":101,"line_end":101,"column_start":12,"column_end":15},"name":"new","qualname":"<EmitterConfig>::new","value":"fn () -> EmitterConfig","parent":null,"children":[],"decl_id":null,"docs":" Creates an emitter configuration with default values.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\config.rs","byte_start":165624,"byte_end":165633,"line_start":100,"line_end":100,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":780},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\config.rs","byte_start":166774,"byte_end":166787,"line_start":135,"line_end":135,"column_start":12,"column_end":25},"name":"create_writer","qualname":"<EmitterConfig>::create_writer","value":"fn <W> (self, sink: W) -> EventWriter<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates an XML writer with this configuration.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\config.rs","byte_start":166753,"byte_end":166762,"line_start":134,"line_end":134,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1354},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\config.rs","byte_start":167044,"byte_end":167058,"line_start":148,"line_end":148,"column_start":5,"column_end":19},"name":"line_separator","qualname":"<EmitterConfig>::line_separator","value":"fn <T> (mut self, value: T) -> EmitterConfig","parent":null,"children":[],"decl_id":null,"docs":" Sets the field to the provided value and returns updated config object.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1357},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\config.rs","byte_start":167088,"byte_end":167101,"line_start":149,"line_end":149,"column_start":5,"column_end":18},"name":"indent_string","qualname":"<EmitterConfig>::indent_string","value":"fn <T> (mut self, value: T) -> EmitterConfig","parent":null,"children":[],"decl_id":null,"docs":" Sets the field to the provided value and returns updated config object.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1360},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\config.rs","byte_start":167131,"byte_end":167145,"line_start":150,"line_end":150,"column_start":5,"column_end":19},"name":"perform_indent","qualname":"<EmitterConfig>::perform_indent","value":"fn (mut self, value: bool) -> EmitterConfig","parent":null,"children":[],"decl_id":null,"docs":" Sets the field to the provided value and returns updated config object.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1362},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\config.rs","byte_start":167161,"byte_end":167187,"line_start":151,"line_end":151,"column_start":5,"column_end":31},"name":"write_document_declaration","qualname":"<EmitterConfig>::write_document_declaration","value":"fn (mut self, value: bool) -> EmitterConfig","parent":null,"children":[],"decl_id":null,"docs":" Sets the field to the provided value and returns updated config object.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1364},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\config.rs","byte_start":167203,"byte_end":167227,"line_start":152,"line_end":152,"column_start":5,"column_end":29},"name":"normalize_empty_elements","qualname":"<EmitterConfig>::normalize_empty_elements","value":"fn (mut self, value: bool) -> EmitterConfig","parent":null,"children":[],"decl_id":null,"docs":" Sets the field to the provided value and returns updated config object.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1366},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\config.rs","byte_start":167243,"byte_end":167262,"line_start":153,"line_end":153,"column_start":5,"column_end":24},"name":"cdata_to_characters","qualname":"<EmitterConfig>::cdata_to_characters","value":"fn (mut self, value: bool) -> EmitterConfig","parent":null,"children":[],"decl_id":null,"docs":" Sets the field to the provided value and returns updated config object.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1368},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\config.rs","byte_start":167278,"byte_end":167302,"line_start":154,"line_end":154,"column_start":5,"column_end":29},"name":"keep_element_names_stack","qualname":"<EmitterConfig>::keep_element_names_stack","value":"fn (mut self, value: bool) -> EmitterConfig","parent":null,"children":[],"decl_id":null,"docs":" Sets the field to the provided value and returns updated config object.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1370},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\config.rs","byte_start":167318,"byte_end":167334,"line_start":155,"line_end":155,"column_start":5,"column_end":21},"name":"autopad_comments","qualname":"<EmitterConfig>::autopad_comments","value":"fn (mut self, value: bool) -> EmitterConfig","parent":null,"children":[],"decl_id":null,"docs":" Sets the field to the provided value and returns updated config object.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1372},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\config.rs","byte_start":167350,"byte_end":167366,"line_start":156,"line_end":156,"column_start":5,"column_end":21},"name":"pad_self_closing","qualname":"<EmitterConfig>::pad_self_closing","value":"fn (mut self, value: bool) -> EmitterConfig","parent":null,"children":[],"decl_id":null,"docs":" Sets the field to the provided value and returns updated config object.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":784},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\events.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"events","qualname":"::writer::events","value":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\events.rs","parent":null,"children":[{"krate":0,"index":785},{"krate":0,"index":786},{"krate":0,"index":787},{"krate":0,"index":788},{"krate":0,"index":789},{"krate":0,"index":1373},{"krate":0,"index":1397},{"krate":0,"index":792},{"krate":0,"index":801},{"krate":0,"index":804},{"krate":0,"index":807},{"krate":0,"index":811},{"krate":0,"index":814},{"krate":0,"index":819},{"krate":0,"index":828}],"decl_id":null,"docs":" Contains `XmlEvent` datatype, instances of which are consumed by the writer.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1375},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\events.rs","byte_start":168103,"byte_end":168116,"line_start":21,"line_end":21,"column_start":5,"column_end":18},"name":"StartDocument","qualname":"::writer::events::XmlEvent::StartDocument","value":"XmlEvent::StartDocument { version, encoding, standalone }","parent":{"krate":0,"index":1373},"children":[],"decl_id":null,"docs":" Corresponds to XML document declaration.","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1379},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\events.rs","byte_start":168535,"byte_end":168556,"line_start":39,"line_end":39,"column_start":5,"column_end":26},"name":"ProcessingInstruction","qualname":"::writer::events::XmlEvent::ProcessingInstruction","value":"XmlEvent::ProcessingInstruction { name, data }","parent":{"krate":0,"index":1373},"children":[],"decl_id":null,"docs":" Denotes an XML processing instruction.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1382},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\events.rs","byte_start":168759,"byte_end":168771,"line_start":48,"line_end":48,"column_start":5,"column_end":17},"name":"StartElement","qualname":"::writer::events::XmlEvent::StartElement","value":"XmlEvent::StartElement { name, attributes, namespace }","parent":{"krate":0,"index":1373},"children":[],"decl_id":null,"docs":" Denotes a beginning of an XML element.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1386},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\events.rs","byte_start":169610,"byte_end":169620,"line_start":68,"line_end":68,"column_start":5,"column_end":15},"name":"EndElement","qualname":"::writer::events::XmlEvent::EndElement","value":"XmlEvent::EndElement { name }","parent":{"krate":0,"index":1373},"children":[],"decl_id":null,"docs":" Denotes an end of an XML element.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1388},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\events.rs","byte_start":170106,"byte_end":170111,"line_start":81,"line_end":81,"column_start":5,"column_end":10},"name":"CData","qualname":"::writer::events::XmlEvent::CData","value":"XmlEvent::CData(&'a str)","parent":{"krate":0,"index":1373},"children":[],"decl_id":null,"docs":" Denotes CDATA content.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1391},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\events.rs","byte_start":170277,"byte_end":170284,"line_start":87,"line_end":87,"column_start":5,"column_end":12},"name":"Comment","qualname":"::writer::events::XmlEvent::Comment","value":"XmlEvent::Comment(&'a str)","parent":{"krate":0,"index":1373},"children":[],"decl_id":null,"docs":" Denotes a comment.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1394},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\events.rs","byte_start":170531,"byte_end":170541,"line_start":93,"line_end":93,"column_start":5,"column_end":15},"name":"Characters","qualname":"::writer::events::XmlEvent::Characters","value":"XmlEvent::Characters(&'a str)","parent":{"krate":0,"index":1373},"children":[],"decl_id":null,"docs":" Denotes character data outside of tags.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1373},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\events.rs","byte_start":167776,"byte_end":167784,"line_start":15,"line_end":15,"column_start":10,"column_end":18},"name":"XmlEvent","qualname":"::writer::events::XmlEvent","value":"XmlEvent::{StartDocument, ProcessingInstruction, StartElement, EndElement, CData, Comment, Characters}","parent":null,"children":[{"krate":0,"index":1375},{"krate":0,"index":1379},{"krate":0,"index":1382},{"krate":0,"index":1386},{"krate":0,"index":1388},{"krate":0,"index":1391},{"krate":0,"index":1394}],"decl_id":null,"docs":" A part of an XML output stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":794},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\events.rs","byte_start":170665,"byte_end":170687,"line_start":99,"line_end":99,"column_start":12,"column_end":34},"name":"processing_instruction","qualname":"<XmlEvent>::processing_instruction","value":"fn (name: &'a str, data: Option<&'a str>) -> XmlEvent<'a>","parent":null,"children":[],"decl_id":null,"docs":" Returns an writer event for a processing instruction.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\events.rs","byte_start":170644,"byte_end":170653,"line_start":98,"line_end":98,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":795},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\events.rs","byte_start":171007,"byte_end":171020,"line_start":108,"line_end":108,"column_start":12,"column_end":25},"name":"start_element","qualname":"<XmlEvent>::start_element","value":"fn <S> (name: S) -> StartElementBuilder<'a>","parent":null,"children":[],"decl_id":null,"docs":" Returns a builder for a starting element.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\events.rs","byte_start":170986,"byte_end":170995,"line_start":107,"line_end":107,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":797},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\events.rs","byte_start":171605,"byte_end":171616,"line_start":122,"line_end":122,"column_start":12,"column_end":23},"name":"end_element","qualname":"<XmlEvent>::end_element","value":"fn () -> EndElementBuilder<'a>","parent":null,"children":[],"decl_id":null,"docs":" Returns a builder for an closing element.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\events.rs","byte_start":171584,"byte_end":171593,"line_start":121,"line_end":121,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":798},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\events.rs","byte_start":171894,"byte_end":171899,"line_start":131,"line_end":131,"column_start":12,"column_end":17},"name":"cdata","qualname":"<XmlEvent>::cdata","value":"fn (data: &'a str) -> XmlEvent<'a>","parent":null,"children":[],"decl_id":null,"docs":" Returns a CDATA event.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\events.rs","byte_start":171873,"byte_end":171882,"line_start":130,"line_end":130,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":799},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\events.rs","byte_start":172134,"byte_end":172144,"line_start":137,"line_end":137,"column_start":12,"column_end":22},"name":"characters","qualname":"<XmlEvent>::characters","value":"fn (data: &'a str) -> XmlEvent<'a>","parent":null,"children":[],"decl_id":null,"docs":" Returns a regular characters (PCDATA) event.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\events.rs","byte_start":172113,"byte_end":172122,"line_start":136,"line_end":136,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":800},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\events.rs","byte_start":172266,"byte_end":172273,"line_start":141,"line_end":141,"column_start":12,"column_end":19},"name":"comment","qualname":"<XmlEvent>::comment","value":"fn (data: &'a str) -> XmlEvent<'a>","parent":null,"children":[],"decl_id":null,"docs":" Returns a comment event.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\events.rs","byte_start":172245,"byte_end":172254,"line_start":140,"line_end":140,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":804},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\events.rs","byte_start":172474,"byte_end":172491,"line_start":149,"line_end":149,"column_start":12,"column_end":29},"name":"EndElementBuilder","qualname":"::writer::events::EndElementBuilder","value":"EndElementBuilder {  }","parent":null,"children":[{"krate":0,"index":806}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":809},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\events.rs","byte_start":173013,"byte_end":173017,"line_start":162,"line_end":162,"column_start":12,"column_end":16},"name":"name","qualname":"<EndElementBuilder>::name","value":"fn <N> (mut self, name: N) -> EndElementBuilder<'a>","parent":null,"children":[],"decl_id":null,"docs":" Sets the name of this closing element.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\events.rs","byte_start":172992,"byte_end":173001,"line_start":161,"line_end":161,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":814},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\events.rs","byte_start":173374,"byte_end":173393,"line_start":175,"line_end":175,"column_start":12,"column_end":31},"name":"StartElementBuilder","qualname":"::writer::events::StartElementBuilder","value":"StartElementBuilder {  }","parent":null,"children":[{"krate":0,"index":816},{"krate":0,"index":817},{"krate":0,"index":818}],"decl_id":null,"docs":" A builder for a starting element event.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":821},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\events.rs","byte_start":174155,"byte_end":174159,"line_start":193,"line_end":193,"column_start":12,"column_end":16},"name":"attr","qualname":"<StartElementBuilder>::attr","value":"fn <N> (mut self, name: N, value: &'a str) -> StartElementBuilder<'a>","parent":null,"children":[],"decl_id":null,"docs":" Sets an attribute value of this element to the given string.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\events.rs","byte_start":174134,"byte_end":174143,"line_start":192,"line_end":192,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":823},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\events.rs","byte_start":175058,"byte_end":175060,"line_start":213,"line_end":213,"column_start":12,"column_end":14},"name":"ns","qualname":"<StartElementBuilder>::ns","value":"fn <S1, S2> (mut self, prefix: S1, uri: S2) -> StartElementBuilder<'a>","parent":null,"children":[],"decl_id":null,"docs":" Adds a namespace to the current namespace context.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\events.rs","byte_start":175037,"byte_end":175046,"line_start":212,"line_end":212,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":826},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\events.rs","byte_start":175434,"byte_end":175444,"line_start":224,"line_end":224,"column_start":12,"column_end":22},"name":"default_ns","qualname":"<StartElementBuilder>::default_ns","value":"fn <S> (mut self, uri: S) -> StartElementBuilder<'a>","parent":null,"children":[],"decl_id":null,"docs":" Adds a default namespace mapping to the current namespace context.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\events.rs","byte_start":175413,"byte_end":175422,"line_start":223,"line_end":223,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":831},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\mod.rs","byte_start":143877,"byte_end":143888,"line_start":21,"line_end":21,"column_start":12,"column_end":23},"name":"EventWriter","qualname":"::writer::EventWriter","value":"EventWriter {  }","parent":null,"children":[{"krate":0,"index":833},{"krate":0,"index":834}],"decl_id":null,"docs":" A wrapper around an `std::io::Write` instance which emits XML document according to provided\n events.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":837},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\mod.rs","byte_start":144101,"byte_end":144104,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<EventWriter<W>>::new","value":"fn (sink: W) -> EventWriter<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `EventWriter` out of an `std::io::Write` instance using the default\n configuration.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\mod.rs","byte_start":144080,"byte_end":144089,"line_start":29,"line_end":29,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":838},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\mod.rs","byte_start":144345,"byte_end":144360,"line_start":37,"line_end":37,"column_start":12,"column_end":27},"name":"new_with_config","qualname":"<EventWriter<W>>::new_with_config","value":"fn (sink: W, config: EmitterConfig) -> EventWriter<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `EventWriter` out of an `std::io::Write` instance using the provided\n configuration.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\mod.rs","byte_start":144324,"byte_end":144333,"line_start":36,"line_end":36,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":839},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\mod.rs","byte_start":144982,"byte_end":144987,"line_start":51,"line_end":51,"column_start":12,"column_end":17},"name":"write","qualname":"<EventWriter<W>>::write","value":"fn <'a, E> (&mut self, event: E) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Writes the next piece of XML document according to the provided event.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":842},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\mod.rs","byte_start":146670,"byte_end":146679,"line_start":81,"line_end":81,"column_start":12,"column_end":21},"name":"inner_mut","qualname":"<EventWriter<W>>::inner_mut","value":"fn (&mut self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying `Writer`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":843},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\mod.rs","byte_start":147066,"byte_end":147076,"line_start":90,"line_end":90,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<EventWriter<W>>::into_inner","value":"fn (self) -> W","parent":null,"children":[],"decl_id":null,"docs":" Unwraps this `EventWriter`, returning the underlying writer.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1401},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\util.rs","byte_start":176005,"byte_end":176018,"line_start":7,"line_end":7,"column_start":5,"column_end":18},"name":"UnexpectedEof","qualname":"::util::CharReadError::UnexpectedEof","value":"CharReadError::UnexpectedEof","parent":{"krate":0,"index":1400},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1403},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\util.rs","byte_start":176024,"byte_end":176028,"line_start":8,"line_end":8,"column_start":5,"column_end":9},"name":"Utf8","qualname":"::util::CharReadError::Utf8","value":"CharReadError::Utf8(str::Utf8Error)","parent":{"krate":0,"index":1400},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1406},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\util.rs","byte_start":176050,"byte_end":176052,"line_start":9,"line_end":9,"column_start":5,"column_end":7},"name":"Io","qualname":"::util::CharReadError::Io","value":"CharReadError::Io(io::Error)","parent":{"krate":0,"index":1400},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1400},"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\util.rs","byte_start":175985,"byte_end":175998,"line_start":6,"line_end":6,"column_start":10,"column_end":23},"name":"CharReadError","qualname":"::util::CharReadError","value":"CharReadError::{UnexpectedEof, Utf8, Io}","parent":null,"children":[{"krate":0,"index":1401},{"krate":0,"index":1403},{"krate":0,"index":1406}],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\name.rs","byte_start":3776,"byte_end":3780,"line_start":59,"line_end":59,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":25}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\name.rs","byte_start":4133,"byte_end":4137,"line_start":70,"line_end":70,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":28}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\name.rs","byte_start":4278,"byte_end":4282,"line_start":76,"line_end":76,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":31}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\name.rs","byte_start":4607,"byte_end":4611,"line_start":90,"line_end":90,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":34},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\name.rs","byte_start":6826,"byte_end":6837,"line_start":160,"line_end":160,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":51}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\name.rs","byte_start":7542,"byte_end":7551,"line_start":184,"line_end":184,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":53}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\name.rs","byte_start":7686,"byte_end":7695,"line_start":191,"line_end":191,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":55},{"krate":0,"index":58},{"krate":0,"index":60},{"krate":0,"index":65},{"krate":0,"index":67}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\name.rs","byte_start":9271,"byte_end":9280,"line_start":239,"line_end":239,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":71}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\name.rs","byte_start":9384,"byte_end":9393,"line_start":246,"line_end":246,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":73},{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\attribute.rs","byte_start":11781,"byte_end":11790,"line_start":21,"line_end":21,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\attribute.rs","byte_start":11950,"byte_end":11959,"line_start":27,"line_end":27,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":87},{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\attribute.rs","byte_start":12718,"byte_end":12732,"line_start":56,"line_end":56,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":90},{"krate":0,"index":91}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\attribute.rs","byte_start":13250,"byte_end":13264,"line_start":75,"line_end":75,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\common.rs","byte_start":14188,"byte_end":14200,"line_start":14,"line_end":14,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\common.rs","byte_start":14928,"byte_end":14940,"line_start":42,"line_end":42,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\common.rs","byte_start":15105,"byte_end":15117,"line_start":49,"line_end":49,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\common.rs","byte_start":15552,"byte_end":15564,"line_start":64,"line_end":64,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\common.rs","byte_start":15839,"byte_end":15849,"line_start":81,"line_end":81,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":111}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\common.rs","byte_start":16081,"byte_end":16091,"line_start":90,"line_end":90,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":113}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\escape.rs","byte_start":18098,"byte_end":18103,"line_start":10,"line_end":10,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":128},{"krate":0,"index":129}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\escape.rs","byte_start":18785,"byte_end":18792,"line_start":38,"line_end":38,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":140},{"krate":0,"index":141}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\escape.rs","byte_start":19643,"byte_end":19650,"line_start":65,"line_end":65,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":144}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\namespace.rs","byte_start":24279,"byte_end":24288,"line_start":71,"line_end":71,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":171},{"krate":0,"index":173},{"krate":0,"index":176},{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\namespace.rs","byte_start":28189,"byte_end":28203,"line_start":190,"line_end":190,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":205},{"krate":0,"index":208},{"krate":0,"index":211},{"krate":0,"index":213},{"krate":0,"index":214}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\namespace.rs","byte_start":33989,"byte_end":34011,"line_start":367,"line_end":367,"column_start":10,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":222}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\namespace.rs","byte_start":34221,"byte_end":34243,"line_start":374,"line_end":374,"column_start":23,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":226},{"krate":0,"index":227}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\namespace.rs","byte_start":35894,"byte_end":35903,"line_start":423,"line_end":423,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":237}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\namespace.rs","byte_start":36122,"byte_end":36136,"line_start":431,"line_end":431,"column_start":37,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\namespace.rs","byte_start":37489,"byte_end":37502,"line_start":479,"line_end":479,"column_start":41,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":250}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\lexer.rs","byte_start":42733,"byte_end":42738,"line_start":59,"line_end":59,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":276}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\lexer.rs","byte_start":44085,"byte_end":44090,"line_start":87,"line_end":87,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\lexer.rs","byte_start":48946,"byte_end":48951,"line_start":229,"line_end":229,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":322}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\lexer.rs","byte_start":49097,"byte_end":49102,"line_start":235,"line_end":235,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":332},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":340},{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":352},{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":364}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\parser\\outside_tag.rs","byte_start":92847,"byte_end":92857,"line_start":11,"line_end":11,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":401}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\parser\\inside_processing_instruction.rs","byte_start":98656,"byte_end":98666,"line_start":10,"line_end":10,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":415}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\parser\\inside_declaration.rs","byte_start":102836,"byte_end":102846,"line_start":12,"line_end":12,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":429}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\parser\\inside_doctype.rs","byte_start":109924,"byte_end":109934,"line_start":5,"line_end":5,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":445}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\parser\\inside_opening_tag.rs","byte_start":110406,"byte_end":110416,"line_start":9,"line_end":9,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":458}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\parser\\inside_closing_tag_name.rs","byte_start":116248,"byte_end":116258,"line_start":7,"line_end":7,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":474}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\parser\\inside_comment.rs","byte_start":117823,"byte_end":117833,"line_start":6,"line_end":6,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":484}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\parser\\inside_cdata.rs","byte_start":118838,"byte_end":118848,"line_start":6,"line_end":6,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":493}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\parser\\inside_reference.rs","byte_start":119768,"byte_end":119778,"line_start":9,"line_end":9,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":506}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\parser\\mod.rs","byte_start":74594,"byte_end":74604,"line_start":90,"line_end":90,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":531},{"krate":0,"index":532}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\parser\\mod.rs","byte_start":75783,"byte_end":75793,"line_start":128,"line_end":128,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":534}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\parser\\mod.rs","byte_start":77270,"byte_end":77280,"line_start":208,"line_end":208,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":536},{"krate":0,"index":537}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\parser\\mod.rs","byte_start":78407,"byte_end":78417,"line_start":240,"line_end":240,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":549},{"krate":0,"index":551},{"krate":0,"index":552},{"krate":0,"index":554},{"krate":0,"index":555},{"krate":0,"index":556},{"krate":0,"index":557},{"krate":0,"index":558},{"krate":0,"index":559},{"krate":0,"index":560},{"krate":0,"index":561},{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":567},{"krate":0,"index":569},{"krate":0,"index":570}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\config.rs","byte_start":128525,"byte_end":128537,"line_start":93,"line_end":93,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":576},{"krate":0,"index":577},{"krate":0,"index":579}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\config.rs","byte_start":130839,"byte_end":130851,"line_start":165,"line_end":165,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":583}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\events.rs","byte_start":135531,"byte_end":135539,"line_start":117,"line_end":117,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":592}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\events.rs","byte_start":137163,"byte_end":137171,"line_start":152,"line_end":152,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":594}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\error.rs","byte_start":140652,"byte_end":140657,"line_start":28,"line_end":28,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":609}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\error.rs","byte_start":140795,"byte_end":140800,"line_start":34,"line_end":34,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":611}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\error.rs","byte_start":140877,"byte_end":140882,"line_start":39,"line_end":39,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":613},{"krate":0,"index":615}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\error.rs","byte_start":141375,"byte_end":141380,"line_start":55,"line_end":55,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":617}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\error.rs","byte_start":141485,"byte_end":141490,"line_start":60,"line_end":60,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":622}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\error.rs","byte_start":141735,"byte_end":141740,"line_start":69,"line_end":69,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":624}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\error.rs","byte_start":142137,"byte_end":142142,"line_start":83,"line_end":83,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":627}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\error.rs","byte_start":142305,"byte_end":142314,"line_start":92,"line_end":92,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":629}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\error.rs","byte_start":142686,"byte_end":142695,"line_start":103,"line_end":103,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":632}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\error.rs","byte_start":143235,"byte_end":143244,"line_start":119,"line_end":119,"column_start":13,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\mod.rs","byte_start":38438,"byte_end":38449,"line_start":33,"line_end":33,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":647},{"krate":0,"index":648},{"krate":0,"index":649},{"krate":0,"index":650},{"krate":0,"index":651},{"krate":0,"index":652}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\mod.rs","byte_start":39741,"byte_end":39752,"line_start":68,"line_end":68,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":655}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\mod.rs","byte_start":39955,"byte_end":39966,"line_start":76,"line_end":76,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":658},{"krate":0,"index":659},{"krate":0,"index":660}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\mod.rs","byte_start":40475,"byte_end":40481,"line_start":94,"line_end":94,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":667},{"krate":0,"index":668},{"krate":0,"index":669}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\mod.rs","byte_start":40801,"byte_end":40807,"line_start":106,"line_end":106,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":672},{"krate":0,"index":673}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\mod.rs","byte_start":41242,"byte_end":41253,"line_start":123,"line_end":123,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":676}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\emitter.rs","byte_start":148279,"byte_end":148291,"line_start":38,"line_end":38,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":708}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\emitter.rs","byte_start":148401,"byte_end":148413,"line_start":44,"line_end":44,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":710}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\emitter.rs","byte_start":148736,"byte_end":148748,"line_start":57,"line_end":57,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":712}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\emitter.rs","byte_start":149889,"byte_end":149896,"line_start":93,"line_end":93,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":724}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\emitter.rs","byte_start":150389,"byte_end":150396,"line_start":118,"line_end":118,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":726},{"krate":0,"index":727},{"krate":0,"index":728},{"krate":0,"index":729},{"krate":0,"index":730},{"krate":0,"index":731},{"krate":0,"index":732},{"krate":0,"index":734},{"krate":0,"index":736},{"krate":0,"index":737},{"krate":0,"index":739},{"krate":0,"index":740},{"krate":0,"index":742},{"krate":0,"index":743},{"krate":0,"index":744},{"krate":0,"index":747},{"krate":0,"index":749},{"krate":0,"index":752},{"krate":0,"index":755},{"krate":0,"index":757},{"krate":0,"index":759},{"krate":0,"index":761},{"krate":0,"index":763},{"krate":0,"index":767},{"krate":0,"index":769},{"krate":0,"index":771}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\config.rs","byte_start":165227,"byte_end":165240,"line_start":87,"line_end":87,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":779},{"krate":0,"index":780}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\config.rs","byte_start":166908,"byte_end":166921,"line_start":140,"line_end":140,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":783}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\events.rs","byte_start":170563,"byte_end":170571,"line_start":96,"line_end":96,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":794},{"krate":0,"index":795},{"krate":0,"index":797},{"krate":0,"index":798},{"krate":0,"index":799},{"krate":0,"index":800}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\events.rs","byte_start":172363,"byte_end":172371,"line_start":144,"line_end":144,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":803}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\events.rs","byte_start":172580,"byte_end":172597,"line_start":154,"line_end":154,"column_start":10,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":809}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\events.rs","byte_start":173193,"byte_end":173201,"line_start":168,"line_end":168,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":813}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Inherent","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\events.rs","byte_start":173493,"byte_end":173512,"line_start":181,"line_end":181,"column_start":10,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":821},{"krate":0,"index":823},{"krate":0,"index":826}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\events.rs","byte_start":175641,"byte_end":175649,"line_start":232,"line_end":232,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":830}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\mod.rs","byte_start":143946,"byte_end":143957,"line_start":26,"line_end":26,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":837},{"krate":0,"index":838},{"krate":0,"index":839},{"krate":0,"index":842},{"krate":0,"index":843}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\util.rs","byte_start":176097,"byte_end":176110,"line_start":12,"line_end":12,"column_start":31,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":851}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\util.rs","byte_start":176228,"byte_end":176241,"line_start":18,"line_end":18,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":853}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\util.rs","byte_start":176349,"byte_end":176362,"line_start":24,"line_end":24,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":855}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src/lib.rs","byte_start":438,"byte_end":444,"line_start":21,"line_end":21,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":16}},{"kind":"Mod","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src/lib.rs","byte_start":454,"byte_end":458,"line_start":22,"line_end":22,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":19}},{"kind":"Mod","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src/lib.rs","byte_start":468,"byte_end":477,"line_start":23,"line_end":23,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":76}},{"kind":"Mod","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src/lib.rs","byte_start":487,"byte_end":493,"line_start":24,"line_end":24,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":95}},{"kind":"Mod","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src/lib.rs","byte_start":503,"byte_end":509,"line_start":25,"line_end":25,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":118}},{"kind":"Mod","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src/lib.rs","byte_start":519,"byte_end":528,"line_start":26,"line_end":26,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":150}},{"kind":"Mod","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src/lib.rs","byte_start":538,"byte_end":544,"line_start":27,"line_end":27,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":252}},{"kind":"Mod","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src/lib.rs","byte_start":554,"byte_end":560,"line_start":28,"line_end":28,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":677}},{"kind":"Mod","span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\mod.rs","byte_start":143748,"byte_end":143754,"line_start":17,"line_end":17,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":784}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\name.rs","byte_start":3776,"byte_end":3780,"line_start":59,"line_end":59,"column_start":28,"column_end":32},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":861},"to":{"krate":2,"index":2096}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\name.rs","byte_start":4133,"byte_end":4137,"line_start":70,"line_end":70,"column_start":39,"column_end":43},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":861},"to":{"krate":2,"index":2096}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\name.rs","byte_start":4278,"byte_end":4282,"line_start":76,"line_end":76,"column_start":27,"column_end":31},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":861},"to":{"krate":2,"index":6833}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\name.rs","byte_start":4607,"byte_end":4611,"line_start":90,"line_end":90,"column_start":10,"column_end":14},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":861},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\name.rs","byte_start":6826,"byte_end":6837,"line_start":160,"line_end":160,"column_start":34,"column_end":45},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":43},"to":{"krate":2,"index":6833}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\name.rs","byte_start":7542,"byte_end":7551,"line_start":184,"line_end":184,"column_start":23,"column_end":32},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":885},"to":{"krate":2,"index":6833}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\name.rs","byte_start":7686,"byte_end":7695,"line_start":191,"line_end":191,"column_start":6,"column_end":15},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":885},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\name.rs","byte_start":9271,"byte_end":9280,"line_start":239,"line_end":239,"column_start":29,"column_end":38},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":885},"to":{"krate":2,"index":2096}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\name.rs","byte_start":9384,"byte_end":9393,"line_start":246,"line_end":246,"column_start":18,"column_end":27},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":885},"to":{"krate":2,"index":6029}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\attribute.rs","byte_start":11781,"byte_end":11790,"line_start":21,"line_end":21,"column_start":27,"column_end":36},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":901},"to":{"krate":2,"index":6833}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\attribute.rs","byte_start":11950,"byte_end":11959,"line_start":27,"line_end":27,"column_start":10,"column_end":19},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":901},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\attribute.rs","byte_start":12718,"byte_end":12732,"line_start":56,"line_end":56,"column_start":6,"column_end":20},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":924},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\attribute.rs","byte_start":13250,"byte_end":13264,"line_start":75,"line_end":75,"column_start":23,"column_end":37},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":924},"to":{"krate":2,"index":6833}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\common.rs","byte_start":14188,"byte_end":14200,"line_start":14,"line_end":14,"column_start":6,"column_end":18},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":939},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\common.rs","byte_start":14928,"byte_end":14940,"line_start":42,"line_end":42,"column_start":21,"column_end":33},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":939},"to":{"krate":2,"index":6831}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\common.rs","byte_start":15105,"byte_end":15117,"line_start":49,"line_end":49,"column_start":23,"column_end":35},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":939},"to":{"krate":2,"index":6833}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\common.rs","byte_start":15552,"byte_end":15564,"line_start":64,"line_end":64,"column_start":19,"column_end":31},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":939},"to":{"krate":0,"index":106}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\common.rs","byte_start":15839,"byte_end":15849,"line_start":81,"line_end":81,"column_start":23,"column_end":33},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":950},"to":{"krate":2,"index":6833}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\common.rs","byte_start":16081,"byte_end":16091,"line_start":90,"line_end":90,"column_start":21,"column_end":31},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":950},"to":{"krate":2,"index":6831}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\escape.rs","byte_start":18098,"byte_end":18103,"line_start":10,"line_end":10,"column_start":6,"column_end":11},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":120},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\escape.rs","byte_start":18785,"byte_end":18792,"line_start":38,"line_end":38,"column_start":10,"column_end":17},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":130},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\escape.rs","byte_start":19643,"byte_end":19650,"line_start":65,"line_end":65,"column_start":37,"column_end":44},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":130},"to":{"krate":2,"index":3401}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\namespace.rs","byte_start":24279,"byte_end":24288,"line_start":71,"line_end":71,"column_start":6,"column_end":15},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":962},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\namespace.rs","byte_start":28189,"byte_end":28203,"line_start":190,"line_end":190,"column_start":6,"column_end":20},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":974},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\namespace.rs","byte_start":33989,"byte_end":34011,"line_start":367,"line_end":367,"column_start":10,"column_end":32},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":215},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\namespace.rs","byte_start":34221,"byte_end":34243,"line_start":374,"line_end":374,"column_start":23,"column_end":45},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":215},"to":{"krate":2,"index":3202}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\namespace.rs","byte_start":35894,"byte_end":35903,"line_start":423,"line_end":423,"column_start":37,"column_end":46},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":962},"to":{"krate":2,"index":3401}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\namespace.rs","byte_start":36122,"byte_end":36136,"line_start":431,"line_end":431,"column_start":37,"column_end":51},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":974},"to":{"krate":2,"index":3401}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\namespace.rs","byte_start":37489,"byte_end":37502,"line_start":479,"line_end":479,"column_start":41,"column_end":54},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":243},"to":{"krate":2,"index":3401}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\lexer.rs","byte_start":42733,"byte_end":42738,"line_start":59,"line_end":59,"column_start":23,"column_end":28},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":986},"to":{"krate":2,"index":6833}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\lexer.rs","byte_start":44085,"byte_end":44090,"line_start":87,"line_end":87,"column_start":6,"column_end":11},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":986},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\lexer.rs","byte_start":48946,"byte_end":48951,"line_start":229,"line_end":229,"column_start":19,"column_end":24},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":312},"to":{"krate":0,"index":106}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\lexer.rs","byte_start":49097,"byte_end":49102,"line_start":235,"line_end":235,"column_start":6,"column_end":11},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":312},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\parser\\outside_tag.rs","byte_start":92847,"byte_end":92857,"line_start":11,"line_end":11,"column_start":6,"column_end":16},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":514},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\parser\\inside_processing_instruction.rs","byte_start":98656,"byte_end":98666,"line_start":10,"line_end":10,"column_start":6,"column_end":16},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":514},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\parser\\inside_declaration.rs","byte_start":102836,"byte_end":102846,"line_start":12,"line_end":12,"column_start":6,"column_end":16},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":514},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\parser\\inside_doctype.rs","byte_start":109924,"byte_end":109934,"line_start":5,"line_end":5,"column_start":6,"column_end":16},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":514},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\parser\\inside_opening_tag.rs","byte_start":110406,"byte_end":110416,"line_start":9,"line_end":9,"column_start":6,"column_end":16},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":514},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\parser\\inside_closing_tag_name.rs","byte_start":116248,"byte_end":116258,"line_start":7,"line_end":7,"column_start":6,"column_end":16},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":514},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\parser\\inside_comment.rs","byte_start":117823,"byte_end":117833,"line_start":6,"line_end":6,"column_start":6,"column_end":16},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":514},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\parser\\inside_cdata.rs","byte_start":118838,"byte_end":118848,"line_start":6,"line_end":6,"column_start":6,"column_end":16},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":514},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\parser\\inside_reference.rs","byte_start":119768,"byte_end":119778,"line_start":9,"line_end":9,"column_start":6,"column_end":16},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":514},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\parser\\mod.rs","byte_start":74594,"byte_end":74604,"line_start":90,"line_end":90,"column_start":6,"column_end":16},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":514},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\parser\\mod.rs","byte_start":75783,"byte_end":75793,"line_start":128,"line_end":128,"column_start":19,"column_end":29},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":514},"to":{"krate":0,"index":106}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\parser\\mod.rs","byte_start":77270,"byte_end":77280,"line_start":208,"line_end":208,"column_start":6,"column_end":16},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1196},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\parser\\mod.rs","byte_start":78407,"byte_end":78417,"line_start":240,"line_end":240,"column_start":6,"column_end":16},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":514},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\config.rs","byte_start":128525,"byte_end":128537,"line_start":93,"line_end":93,"column_start":6,"column_end":18},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1208},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\config.rs","byte_start":130839,"byte_end":130851,"line_start":165,"line_end":165,"column_start":18,"column_end":30},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1208},"to":{"krate":2,"index":2080}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\events.rs","byte_start":135531,"byte_end":135539,"line_start":117,"line_end":117,"column_start":21,"column_end":29},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1243},"to":{"krate":2,"index":6831}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\events.rs","byte_start":137163,"byte_end":137171,"line_start":152,"line_end":152,"column_start":6,"column_end":14},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1243},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\error.rs","byte_start":140652,"byte_end":140657,"line_start":28,"line_end":28,"column_start":23,"column_end":28},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1291},"to":{"krate":2,"index":6833}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\error.rs","byte_start":140795,"byte_end":140800,"line_start":34,"line_end":34,"column_start":19,"column_end":24},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1291},"to":{"krate":0,"index":106}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\error.rs","byte_start":140877,"byte_end":140882,"line_start":39,"line_end":39,"column_start":6,"column_end":11},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1291},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\error.rs","byte_start":141375,"byte_end":141380,"line_start":55,"line_end":55,"column_start":23,"column_end":28},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1291},"to":{"krate":1,"index":1542}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\error.rs","byte_start":141485,"byte_end":141490,"line_start":60,"line_end":60,"column_start":37,"column_end":42},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1291},"to":{"krate":2,"index":2096}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\error.rs","byte_start":141735,"byte_end":141740,"line_start":69,"line_end":69,"column_start":36,"column_end":41},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1291},"to":{"krate":2,"index":2096}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\error.rs","byte_start":142137,"byte_end":142142,"line_start":83,"line_end":83,"column_start":26,"column_end":31},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1291},"to":{"krate":2,"index":2096}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\error.rs","byte_start":142305,"byte_end":142314,"line_start":92,"line_end":92,"column_start":16,"column_end":25},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1277},"to":{"krate":2,"index":2056}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\error.rs","byte_start":142686,"byte_end":142695,"line_start":103,"line_end":103,"column_start":20,"column_end":29},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1277},"to":{"krate":2,"index":1936}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\error.rs","byte_start":143235,"byte_end":143244,"line_start":119,"line_end":119,"column_start":13,"column_end":22},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1277},"to":{"krate":2,"index":1940}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\mod.rs","byte_start":38438,"byte_end":38449,"line_start":33,"line_end":33,"column_start":15,"column_end":26},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":641},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\mod.rs","byte_start":39741,"byte_end":39752,"line_start":68,"line_end":68,"column_start":28,"column_end":39},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":641},"to":{"krate":0,"index":106}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\mod.rs","byte_start":39955,"byte_end":39966,"line_start":76,"line_end":76,"column_start":32,"column_end":43},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":641},"to":{"krate":2,"index":3392}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\mod.rs","byte_start":40475,"byte_end":40481,"line_start":94,"line_end":94,"column_start":15,"column_end":21},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":661},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\mod.rs","byte_start":40801,"byte_end":40807,"line_start":106,"line_end":106,"column_start":28,"column_end":34},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":661},"to":{"krate":2,"index":3202}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\reader\\mod.rs","byte_start":41242,"byte_end":41253,"line_start":123,"line_end":123,"column_start":10,"column_end":21},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":641},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\emitter.rs","byte_start":148279,"byte_end":148291,"line_start":38,"line_end":38,"column_start":26,"column_end":38},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1303},"to":{"krate":2,"index":2096}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\emitter.rs","byte_start":148401,"byte_end":148413,"line_start":44,"line_end":44,"column_start":23,"column_end":35},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1303},"to":{"krate":2,"index":6833}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\emitter.rs","byte_start":148736,"byte_end":148748,"line_start":57,"line_end":57,"column_start":16,"column_end":28},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1303},"to":{"krate":1,"index":1542}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\emitter.rs","byte_start":149889,"byte_end":149896,"line_start":93,"line_end":93,"column_start":6,"column_end":13},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":715},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\emitter.rs","byte_start":150389,"byte_end":150396,"line_start":118,"line_end":118,"column_start":6,"column_end":13},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":715},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\config.rs","byte_start":165227,"byte_end":165240,"line_start":87,"line_end":87,"column_start":6,"column_end":19},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1333},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\config.rs","byte_start":166908,"byte_end":166921,"line_start":140,"line_end":140,"column_start":18,"column_end":31},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1333},"to":{"krate":2,"index":2080}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\events.rs","byte_start":170563,"byte_end":170571,"line_start":96,"line_end":96,"column_start":10,"column_end":18},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1373},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\events.rs","byte_start":172363,"byte_end":172371,"line_start":144,"line_end":144,"column_start":28,"column_end":36},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1373},"to":{"krate":2,"index":2096}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\events.rs","byte_start":172580,"byte_end":172597,"line_start":154,"line_end":154,"column_start":10,"column_end":27},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":804},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\events.rs","byte_start":173193,"byte_end":173201,"line_start":168,"line_end":168,"column_start":42,"column_end":50},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1373},"to":{"krate":2,"index":2096}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\events.rs","byte_start":173493,"byte_end":173512,"line_start":181,"line_end":181,"column_start":10,"column_end":29},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":814},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\events.rs","byte_start":175641,"byte_end":175649,"line_start":232,"line_end":232,"column_start":44,"column_end":52},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1373},"to":{"krate":2,"index":2096}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\writer\\mod.rs","byte_start":143946,"byte_end":143957,"line_start":26,"line_end":26,"column_start":16,"column_end":27},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":831},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\util.rs","byte_start":176097,"byte_end":176110,"line_start":12,"line_end":12,"column_start":31,"column_end":44},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1400},"to":{"krate":2,"index":2096}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\util.rs","byte_start":176228,"byte_end":176241,"line_start":18,"line_end":18,"column_start":26,"column_end":39},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1400},"to":{"krate":2,"index":2096}},{"span":{"file_name":"C:\\Users\\1an6r_000\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.8.3\\src\\util.rs","byte_start":176349,"byte_end":176362,"line_start":24,"line_end":24,"column_start":23,"column_end":36},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1400},"to":{"krate":2,"index":6833}}]}